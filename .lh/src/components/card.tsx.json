{
    "sourceFile": "src/components/card.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 164,
            "patches": [
                {
                    "date": 1728626586396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728626644149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n import React from \"react\";\n \n-interface ProfileCardProps {\n+interface CardProps {\n   name: string;\n   role: string;\n   isAdmin: boolean;\n   imageUrl: string;\n }\n \n-const ProfileCard: React.FC<ProfileCardProps> = ({ name, role, isAdmin, imageUrl }) => {\n+const Card: React.FC<CardProps> = ({ name, role, isAdmin, imageUrl }) => {\n   return (\n     <div className=\"bg-white rounded-lg shadow-md w-80 p-6 text-center\">\n       <img\n         src={imageUrl}\n@@ -35,5 +35,5 @@\n     </div>\n   );\n };\n \n-export default ProfileCard;\n+export default Card;\n"
                },
                {
                    "date": 1728627371381,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,21 @@\n import React from \"react\";\n \n interface CardProps {\n-  name: string;\n-  role: string;\n-  isAdmin: boolean;\n   imageUrl: string;\n+  type: string;\n+  cost: number;\n }\n \n-const Card: React.FC<CardProps> = ({ name, role, isAdmin, imageUrl }) => {\n+const Card: React.FC<CardProps> = ({ imageUrl, type, cost }) => {\n   return (\n-    <div className=\"bg-white rounded-lg shadow-md w-80 p-6 text-center\">\n-      <img\n-        src={imageUrl}\n-        alt={`${name}'s profile`}\n-        className=\"w-24 h-24 rounded-full mx-auto mb-4 object-cover\"\n-      />\n-      <h2 className=\"text-xl font-semibold\">{name}</h2>\n-      <p className=\"text-gray-500 text-sm mb-4\">{role}</p>\n-      {isAdmin && (\n-        <span className=\"inline-block bg-green-100 text-green-700 py-1 px-3 rounded-full text-xs mb-4\">\n-          Admin\n-        </span>\n-      )}\n-      <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n-          <span>üìß</span>\n-          <span>Email</span>\n-        </a>\n-        <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n-          <span>üìû</span>\n-          <span>Call</span>\n-        </a>\n+    <div className=\"bg-white rounded-lg shadow-md p-4 flex flex-col items-center\">\n+      <img src={imageUrl} alt={type} className=\"w-24 h-24 rounded-full\" />\n+      <h2 className=\"text-lg font-semibold mt-2\">{type}</h2>\n+      <p className=\"text-gray-600\">${cost.toFixed(2)}</p>\n+      <div className=\"mt-4 flex space-x-4\">\n+        <button className=\"bg-blue-500 text-white py-2 px-4 rounded\">Ver</button>\n+        <button className=\"bg-green-500 text-white py-2 px-4 rounded\">Chat</button>\n       </div>\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1728627761542,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,21 +1,37 @@\n import React from \"react\";\n \n interface CardProps {\n+  name: string;\n+  role: string;\n+  isAdmin: boolean;\n   imageUrl: string;\n-  type: string;\n-  cost: number;\n }\n \n-const Card: React.FC<CardProps> = ({ imageUrl, type, cost }) => {\n+const Card: React.FC<CardProps> = ({ name, role, isAdmin, imageUrl }) => {\n   return (\n-    <div className=\"bg-white rounded-lg shadow-md p-4 flex flex-col items-center\">\n-      <img src={imageUrl} alt={type} className=\"w-24 h-24 rounded-full\" />\n-      <h2 className=\"text-lg font-semibold mt-2\">{type}</h2>\n-      <p className=\"text-gray-600\">${cost.toFixed(2)}</p>\n-      <div className=\"mt-4 flex space-x-4\">\n-        <button className=\"bg-blue-500 text-white py-2 px-4 rounded\">Ver</button>\n-        <button className=\"bg-green-500 text-white py-2 px-4 rounded\">Chat</button>\n+    <div className=\"bg-white rounded-lg shadow-md w-80 p-6 text-center\">\n+      <img\n+        src={imageUrl}\n+        alt={`${name}'s profile`}\n+        className=\"w-24 h-24 rounded-full mx-auto mb-4 object-cover\"\n+      />\n+      <h2 className=\"text-xl font-semibold\">{name}</h2>\n+      <p className=\"text-gray-500 text-sm mb-4\">{role}</p>\n+      {isAdmin && (\n+        <span className=\"inline-block bg-green-100 text-green-700 py-1 px-3 rounded-full text-xs mb-4\">\n+          Admin\n+        </span>\n+      )}\n+      <div className=\"flex justify-around mt-4\">\n+        <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n+          <span>üìß</span>\n+          <span>Email</span>\n+        </a>\n+        <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n+          <span>üìû</span>\n+          <span>Call</span>\n+        </a>\n       </div>\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1728680002660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,15 @@\n import React from \"react\";\n \n interface CardProps {\n-  name: string;\n-  role: string;\n-  isAdmin: boolean;\n+  type: string;\n+  price: number;\n   imageUrl: string;\n }\n \n-const Card: React.FC<CardProps> = ({ name, role, isAdmin, imageUrl }) => {\n+const Card: React.FC<CardProps> = ({ type, price, imageUrl }) => {\n   return (\n-    <div className=\"bg-white rounded-lg shadow-md w-80 p-6 text-center\">\n+    <div className=\"bg-blue-400 rounded-lg shadow-md w-80 p-6 text-center\">\n       <img\n         src={imageUrl}\n         alt={`${name}'s profile`}\n         className=\"w-24 h-24 rounded-full mx-auto mb-4 object-cover\"\n"
                },
                {
                    "date": 1728680334736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,33 +3,30 @@\n interface CardProps {\n   type: string;\n   price: number;\n   imageUrl: string;\n+  location: string;\n }\n \n-const Card: React.FC<CardProps> = ({ type, price, imageUrl }) => {\n+const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n   return (\n-    <div className=\"bg-blue-400 rounded-lg shadow-md w-80 p-6 text-center\">\n+    <div className=\"bg-blue-200 rounded-lg shadow-md w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n       <img\n         src={imageUrl}\n-        alt={`${name}'s profile`}\n-        className=\"w-24 h-24 rounded-full mx-auto mb-4 object-cover\"\n+        alt={`${type} image`}\n+        className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n       />\n-      <h2 className=\"text-xl font-semibold\">{name}</h2>\n-      <p className=\"text-gray-500 text-sm mb-4\">{role}</p>\n-      {isAdmin && (\n-        <span className=\"inline-block bg-green-100 text-green-700 py-1 px-3 rounded-full text-xs mb-4\">\n-          Admin\n-        </span>\n-      )}\n+      <h2 className=\"text-xl font-semibold\">{type}</h2>\n+      <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n+      <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n-          <span>üìß</span>\n-          <span>Email</span>\n+          <span>üëÅÔ∏è</span>\n+          <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n-          <span>üìû</span>\n-          <span>Call</span>\n+          <span>üí¨</span>\n+          <span>Chat</span>\n         </a>\n       </div>\n     </div>\n   );\n"
                },
                {
                    "date": 1728680421701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n+        <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1 bg-blue-600\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680442550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1 bg-blue-600\">\n+        <a href=\"#\" className=\"text-black flex items-center space-x-1 bg-blue-600\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680461535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center space-x-1 bg-blue-600\">\n+        <a href=\"#\" className=\"text-black flex items-center space-x-1 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680484222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center space-x-1 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"text-black flex items-center space-x-5 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680509816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center space-x-5 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"text-black flex justify-center items-center space-x-5 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680525077,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex justify-center items-center space-x-5 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"text-black flex items-center space-x-5 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680534815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center space-x-5 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"text-black flex items-center space-x-10 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680558695,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center space-x-10 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"text-black flex items-center -space-x-10 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680569237,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center -space-x-10 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"text-black flex items-center space-x-10 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680579692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center space-x-10 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"text-black flex items-center space-x-4 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680589748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center space-x-4 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"text-black flex items-center space-x-1 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680610486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center space-x-1 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"text-black flex items-center space-x-1 gap-x-2 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680620828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center space-x-1 gap-x-2 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"text-black flex items-center space-x-1 gap-x-8 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680628093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center space-x-1 gap-x-8 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"text-black flex items-center space-x-1 bg-blue-600 rounded-lg\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680713208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"text-black flex items-center space-x-1 bg-blue-600 rounded-lg\">\n+        <a href=\"#\" className=\"bg-blue-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680753983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"bg-blue-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n+        <a href=\"#\" className=\"bg-orange-400 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680772301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"bg-orange-400 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n+        <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680814455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n+        <a href=\"#\" className=\" hover:bg-blue-600 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm bg-orange-500 transition-colors\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728680885022,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\" hover:bg-blue-600 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm bg-orange-500 transition-colors\">\n+        <a href=\"#\" className=\" bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n         <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n"
                },
                {
                    "date": 1728681024127,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n         <a href=\"#\" className=\" bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n-        <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n+        <a href=\"#\" className=\" bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n           <span>üí¨</span>\n           <span>Chat</span>\n         </a>\n       </div>\n"
                },
                {
                    "date": 1728681052278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n   return (\n-    <div className=\"bg-blue-200 rounded-lg shadow-md w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n+    <div className=\"bg-blue-200 rounded-lg shadow-md w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer border-spacing-2\">\n       <img\n         src={imageUrl}\n         alt={`${type} image`}\n         className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n"
                },
                {
                    "date": 1728681187044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,15 +8,15 @@\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n   return (\n-    <div className=\"bg-blue-200 rounded-lg shadow-md w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer border-spacing-2\">\n+    <div className=\"bg-blue-200 rounded-lg shadow-md w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n       <img\n         src={imageUrl}\n         alt={`${type} image`}\n         className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n       />\n-      <h2 className=\"text-xl font-semibold\">{type}</h2>\n+      <h2 className=\"text-xl font-semibold\">Type{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n         <a href=\"#\" className=\" bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n"
                },
                {
                    "date": 1728681275615,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n   return (\n-    <div className=\"bg-blue-200 rounded-lg shadow-md w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n+    <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-md w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n       <img\n         src={imageUrl}\n         alt={`${type} image`}\n         className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n"
                },
                {
                    "date": 1728681348661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n   return (\n-    <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-md w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n+    <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n       <img\n         src={imageUrl}\n         alt={`${type} image`}\n         className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n"
                },
                {
                    "date": 1728681382554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n   return (\n-    <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n+    <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-2xl w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n       <img\n         src={imageUrl}\n         alt={`${type} image`}\n         className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n"
                },
                {
                    "date": 1728681411331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n   return (\n-    <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-2xl w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n+    <div className=\"bg-blue-200 border border-black rounded-lg shadow-2xl w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n       <img\n         src={imageUrl}\n         alt={`${type} image`}\n         className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n"
                },
                {
                    "date": 1728681424918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n   return (\n-    <div className=\"bg-blue-200 border border-black rounded-lg shadow-2xl w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n+    <div className=\"bg-blue-200 border border-blue-800 rounded-lg shadow-2xl w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n       <img\n         src={imageUrl}\n         alt={`${type} image`}\n         className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n"
                },
                {
                    "date": 1728681434029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n   return (\n-    <div className=\"bg-blue-200 border border-blue-800 rounded-lg shadow-2xl w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n+    <div className=\"bg-blue-200 border border-blue-400 rounded-lg shadow-2xl w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n       <img\n         src={imageUrl}\n         alt={`${type} image`}\n         className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n"
                },
                {
                    "date": 1728681476299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n   return (\n-    <div className=\"bg-blue-200 border border-blue-400 rounded-lg shadow-2xl w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-lg active:scale-95 cursor-pointer\">\n+    <div className=\"bg-blue-200 border border-blue-400 rounded-lg shadow-2xl w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-light-3 active:scale-95 cursor-pointer\">\n       <img\n         src={imageUrl}\n         alt={`${type} image`}\n         className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n"
                },
                {
                    "date": 1728681678103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n         src={imageUrl}\n         alt={`${type} image`}\n         className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n       />\n-      <h2 className=\"text-xl font-semibold\">Type{type}</h2>\n+      <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n         <a href=\"#\" className=\" bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n"
                },
                {
                    "date": 1728681826759,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n   return (\n-    <div className=\"bg-blue-200 border border-blue-400 rounded-lg shadow-2xl w-80 p-6 text-center transform transition-transform duration-300 hover:scale-105 hover:shadow-light-3 active:scale-95 cursor-pointer\">\n+    <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n       <img\n         src={imageUrl}\n         alt={`${type} image`}\n         className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n"
                },
                {
                    "date": 1728682359241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import React from \"react\";\n+import { useRouter } from \"next/router\";\n \n interface CardProps {\n   type: string;\n   price: number;\n@@ -7,8 +7,15 @@\n   location: string;\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n+  const router = useRouter();\n+\n+  const handleChatClick = () => {\n+    // Redirigir a la p√°gina de chat con los par√°metros de la card\n+    router.push(`/chat?type=${type}&location=${location}`);\n+  };\n+\n   return (\n     <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n       <img\n         src={imageUrl}\n@@ -18,16 +25,22 @@\n       <h2 className=\"text-xl font-semibold\">{type}</h2>\n       <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n       <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n       <div className=\"flex justify-around mt-4\">\n-        <a href=\"#\" className=\" bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n+        <a\n+          href=\"#\"\n+          className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+        >\n           <span>üëÅÔ∏è</span>\n           <span>Ver</span>\n         </a>\n-        <a href=\"#\" className=\" bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n+        <button\n+          onClick={handleChatClick}\n+          className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+        >\n           <span>üí¨</span>\n           <span>Chat</span>\n-        </a>\n+        </button>\n       </div>\n     </div>\n   );\n };\n"
                },
                {
                    "date": 1728682697523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n-import { useRouter } from \"next/router\";\n+import React, { useState } from 'react';\n+import Chat from \"./chat\";\n \n interface CardProps {\n   type: string;\n   price: number;\n@@ -7,41 +8,42 @@\n   location: string;\n }\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n-  const router = useRouter();\n+  const [isChatOpen, setIsChatOpen] = useState(false);\n \n-  const handleChatClick = () => {\n-    // Redirigir a la p√°gina de chat con los par√°metros de la card\n-    router.push(`/chat?type=${type}&location=${location}`);\n+  const toggleChat = () => {\n+    setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n   };\n \n   return (\n-    <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n-      <img\n-        src={imageUrl}\n-        alt={`${type} image`}\n-        className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n-      />\n-      <h2 className=\"text-xl font-semibold\">{type}</h2>\n-      <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n-      <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n-      <div className=\"flex justify-around mt-4\">\n-        <a\n-          href=\"#\"\n-          className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-        >\n-          <span>üëÅÔ∏è</span>\n-          <span>Ver</span>\n-        </a>\n-        <button\n-          onClick={handleChatClick}\n-          className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-        >\n-          <span>üí¨</span>\n-          <span>Chat</span>\n-        </button>\n+    <div className=\"relative\">\n+      <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n+        <img\n+          src={imageUrl}\n+          alt={`${type} image`}\n+          className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n+        />\n+        <h2 className=\"text-xl font-semibold\">{type}</h2>\n+        <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n+        <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n+        <div className=\"flex justify-around mt-4\">\n+          <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n+            <span>üëÅÔ∏è</span>\n+            <span>Ver</span>\n+          </a>\n+          <button\n+            onClick={toggleChat}\n+            className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+          >\n+            <span>üí¨</span>\n+            <span>Chat</span>\n+          </button>\n+        </div>\n       </div>\n+\n+      {/* Mostrar el chat si est√° abierto */}\n+      {isChatOpen && <ChatPopup />}\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1728682735880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n         </div>\n       </div>\n \n       {/* Mostrar el chat si est√° abierto */}\n-      {isChatOpen && <ChatPopup />}\n+      {isChatOpen && <Chat />}\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1728684118952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,11 +5,13 @@\n   type: string;\n   price: number;\n   imageUrl: string;\n   location: string;\n+  wallet: string; // Wallet del publicador\n+  recyclingId: string; // Identificador √∫nico del reciclaje\n }\n \n-const Card: React.FC<CardProps> = ({ type, price, imageUrl, location }) => {\n+const Card: React.FC<CardProps> = ({ type, price, imageUrl, location, wallet, recyclingId }) => {\n   const [isChatOpen, setIsChatOpen] = useState(false);\n \n   const toggleChat = () => {\n     setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n@@ -41,9 +43,9 @@\n         </div>\n       </div>\n \n       {/* Mostrar el chat si est√° abierto */}\n-      {isChatOpen && <Chat />}\n+       {isChatOpen && <Chat wallet={wallet} recyclingId={recyclingId} />}\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1728687869097,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,10 @@\n         </div>\n       </div>\n \n       {/* Mostrar el chat si est√° abierto */}\n-       {isChatOpen && <Chat wallet={wallet} recyclingId={recyclingId} />}\n+       {/* Mostrar el chat si est√° abierto */}\n+      {isChatOpen && <Chat wallet={wallet} recyclingId={recyclingId} />}\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1728691053716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,8 @@\n           </button>\n         </div>\n       </div>\n \n-      {/* Mostrar el chat si est√° abierto */}\n        {/* Mostrar el chat si est√° abierto */}\n       {isChatOpen && <Chat wallet={wallet} recyclingId={recyclingId} />}\n     </div>\n   );\n"
                },
                {
                    "date": 1728691126859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,10 @@\n         </div>\n       </div>\n \n        {/* Mostrar el chat si est√° abierto */}\n-      {isChatOpen && <Chat wallet={wallet} recyclingId={recyclingId} />}\n+      {isChatOpen && <Chat recyclingId={recyclingId} onClose={function (): void {\n+      } } />}\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1728793282799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,10 +25,10 @@\n           alt={`${type} image`}\n           className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n         />\n         <h2 className=\"text-xl font-semibold\">{type}</h2>\n-        <p className=\"text-gray-700 text-sm mb-2\">Costo: ${price}</p>\n-        <p className=\"text-gray-500 text-sm mb-4\">Ubicaci√≥n: {location}</p>\n+        <p className=\"text-gray-700 text-sm mb-2\">Price: ${price}</p>\n+        <p className=\"text-gray-500 text-sm mb-4\">Ubication: {location}</p>\n         <div className=\"flex justify-around mt-4\">\n           <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n             <span>üëÅÔ∏è</span>\n             <span>Ver</span>\n"
                },
                {
                    "date": 1728793321199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n         <p className=\"text-gray-500 text-sm mb-4\">Ubication: {location}</p>\n         <div className=\"flex justify-around mt-4\">\n           <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n             <span>üëÅÔ∏è</span>\n-            <span>Ver</span>\n+            <span>See</span>\n           </a>\n           <button\n             onClick={toggleChat}\n             className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n"
                },
                {
                    "date": 1728793588020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n           src={imageUrl}\n           alt={`${type} image`}\n           className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n         />\n-        <h2 className=\"text-xl font-semibold\">{type}</h2>\n+        <h2 className=\"text-xl font-semibold\">{}</h2>\n         <p className=\"text-gray-700 text-sm mb-2\">Price: ${price}</p>\n         <p className=\"text-gray-500 text-sm mb-4\">Ubication: {location}</p>\n         <div className=\"flex justify-around mt-4\">\n           <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n"
                },
                {
                    "date": 1728793595932,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n           src={imageUrl}\n           alt={`${type} image`}\n           className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n         />\n-        <h2 className=\"text-xl font-semibold\">{}</h2>\n+        <h2 className=\"text-xl font-semibold\">{type}</h2>\n         <p className=\"text-gray-700 text-sm mb-2\">Price: ${price}</p>\n         <p className=\"text-gray-500 text-sm mb-4\">Ubication: {location}</p>\n         <div className=\"flex justify-around mt-4\">\n           <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n"
                },
                {
                    "date": 1728855662884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n-import React, { useState } from 'react';\n+import React, { useState,  useEffect} from 'react';\n import Chat from \"./chat\";\n+import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n+import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n \n interface CardProps {\n   type: string;\n   price: number;\n@@ -15,9 +17,72 @@\n \n   const toggleChat = () => {\n     setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n   };\n+///////////////////////////////////////////////////////////////////////////////////\n \n+export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n+const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n+\n+const { account } = useWallet();\n+  const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n+  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n+\n+  useEffect(() => {\n+    if (account) {\n+      getRecycling();\n+    }\n+  }, [account]);\n+\n+  const getRecycling = async () => {\n+    const payload = {\n+      function:\n+        `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+      functionArguments: [`${account?.address}`],\n+    };\n+    try {\n+      const result: any = await aptos.view({ payload });\n+      console.log(\"Resultado de reciclajes:\", result[0]);\n+\n+      if (Array.isArray(result) && result.length > 0) {\n+        const extractedRecyclings: Recycling[][] = result.map(\n+          (recyclingArray: any[]) =>\n+            recyclingArray.map((recycling: any) => ({\n+              owner: recycling.owner,\n+              type: recycling.type || \"N/A\",\n+              ubication: recycling.ubication || \"N/A\",\n+              weight: recycling.weight || 0,\n+              pricePound: recycling.pricePound || 0,\n+              observations: recycling.observations || \"N/A\",\n+              chats: recycling.chats || [],\n+              available: recycling.available || false,\n+            }))\n+        );\n+\n+        setRecyclings(extractedRecyclings);\n+      } else {\n+        console.error(\"No se encontraron reciclajes\");\n+      }\n+    } catch (error) {\n+      console.error(\"Error al obtener reciclajes:\", error);\n+    }\n+  };\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n   return (\n     <div className=\"relative\">\n       <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n         <img\n"
                },
                {
                    "date": 1728857018110,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,11 @@\n import Chat from \"./chat\";\n import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n \n+export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n+const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n+\n interface CardProps {\n   type: string;\n   price: number;\n   imageUrl: string;\n@@ -11,22 +14,28 @@\n   wallet: string; // Wallet del publicador\n   recyclingId: string; // Identificador √∫nico del reciclaje\n }\n \n+interface Recycling {\n+  type: string;\n+  ubication: string;\n+  weight: number;\n+  pricePound: number;\n+  observations: string;\n+  chats: [];\n+  available: boolean;\n+}\n+\n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location, wallet, recyclingId }) => {\n   const [isChatOpen, setIsChatOpen] = useState(false);\n \n   const toggleChat = () => {\n     setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n   };\n ///////////////////////////////////////////////////////////////////////////////////\n \n-export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n-const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n-\n const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n-  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n \n   useEffect(() => {\n     if (account) {\n       getRecycling();\n"
                },
                {
                    "date": 1728857043543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,23 +75,11 @@\n       console.error(\"Error al obtener reciclajes:\", error);\n     }\n   };\n \n+////////////////////////////////////////////////////////////////////////////////////\n \n \n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n-\n   return (\n     <div className=\"relative\">\n       <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n         <img\n"
                },
                {
                    "date": 1728857215772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,8 +23,10 @@\n   observations: string;\n   chats: [];\n   available: boolean;\n }\n+const { account } = useWallet();\n+  const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location, wallet, recyclingId }) => {\n   const [isChatOpen, setIsChatOpen] = useState(false);\n \n@@ -32,11 +34,10 @@\n     setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n   };\n ///////////////////////////////////////////////////////////////////////////////////\n \n-const { account } = useWallet();\n-  const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n \n+\n   useEffect(() => {\n     if (account) {\n       getRecycling();\n     }\n"
                },
                {
                    "date": 1728857308272,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   chats: [];\n   available: boolean;\n }\n const { account } = useWallet();\n-  const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n+const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n \n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location, wallet, recyclingId }) => {\n   const [isChatOpen, setIsChatOpen] = useState(false);\n \n"
                },
                {
                    "date": 1728857358852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,18 +23,17 @@\n   observations: string;\n   chats: [];\n   available: boolean;\n }\n-const { account } = useWallet();\n-const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n-\n const Card: React.FC<CardProps> = ({ type, price, imageUrl, location, wallet, recyclingId }) => {\n   const [isChatOpen, setIsChatOpen] = useState(false);\n \n   const toggleChat = () => {\n     setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n   };\n ///////////////////////////////////////////////////////////////////////////////////\n+const { account } = useWallet();\n+const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n \n \n \n   useEffect(() => {\n"
                },
                {
                    "date": 1728858817011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,14 +29,11 @@\n \n   const toggleChat = () => {\n     setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n   };\n-///////////////////////////////////////////////////////////////////////////////////\n const { account } = useWallet();\n const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n \n-\n-\n   useEffect(() => {\n     if (account) {\n       getRecycling();\n     }\n@@ -75,11 +72,8 @@\n       console.error(\"Error al obtener reciclajes:\", error);\n     }\n   };\n \n-////////////////////////////////////////////////////////////////////////////////////\n-\n-\n   return (\n     <div className=\"relative\">\n       <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n         <img\n"
                },
                {
                    "date": 1728859014951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,38 +1,26 @@\n-import React, { useState,  useEffect} from 'react';\n-import Chat from \"./chat\";\n-import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n-import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n+import React, { useState, useEffect } from 'react';\n+import Chat from './chat';\n+import { Aptos, AptosConfig, Network } from '@aptos-labs/ts-sdk';\n+import { useWallet } from '@aptos-labs/wallet-adapter-react';\n \n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n-const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n+const ADDRESS = '0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720';\n \n-interface CardProps {\n-  type: string;\n-  price: number;\n-  imageUrl: string;\n-  location: string;\n-  wallet: string; // Wallet del publicador\n-  recyclingId: string; // Identificador √∫nico del reciclaje\n-}\n-\n interface Recycling {\n+  owner: string;\n   type: string;\n   ubication: string;\n   weight: number;\n   pricePound: number;\n   observations: string;\n   chats: [];\n   available: boolean;\n }\n-const Card: React.FC<CardProps> = ({ type, price, imageUrl, location, wallet, recyclingId }) => {\n-  const [isChatOpen, setIsChatOpen] = useState(false);\n \n-  const toggleChat = () => {\n-    setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n-  };\n-const { account } = useWallet();\n-const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n+const Card: React.FC = () => {\n+  const { account } = useWallet();\n+  const [recyclings, setRecyclings] = useState<Recycling[]>([]); // Lista de reciclajes\n \n   useEffect(() => {\n     if (account) {\n       getRecycling();\n@@ -40,69 +28,76 @@\n   }, [account]);\n \n   const getRecycling = async () => {\n     const payload = {\n-      function:\n-        `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+      function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n       functionArguments: [`${account?.address}`],\n     };\n     try {\n       const result: any = await aptos.view({ payload });\n-      console.log(\"Resultado de reciclajes:\", result[0]);\n+      console.log('Resultado de reciclajes:', result[0]);\n \n       if (Array.isArray(result) && result.length > 0) {\n-        const extractedRecyclings: Recycling[][] = result.map(\n-          (recyclingArray: any[]) =>\n-            recyclingArray.map((recycling: any) => ({\n-              owner: recycling.owner,\n-              type: recycling.type || \"N/A\",\n-              ubication: recycling.ubication || \"N/A\",\n-              weight: recycling.weight || 0,\n-              pricePound: recycling.pricePound || 0,\n-              observations: recycling.observations || \"N/A\",\n-              chats: recycling.chats || [],\n-              available: recycling.available || false,\n-            }))\n-        );\n-\n-        setRecyclings(extractedRecyclings);\n+        const extractedRecyclings: Recycling[] = result.map((recycling: any) => ({\n+          owner: recycling.owner,\n+          type: recycling.type || 'N/A',\n+          ubication: recycling.ubication || 'N/A',\n+          weight: recycling.weight || 0,\n+          pricePound: recycling.pricePound || 0,\n+          observations: recycling.observations || 'N/A',\n+          chats: recycling.chats || [],\n+          available: recycling.available || false,\n+        }));\n+        setRecyclings(extractedRecyclings); // Guardar los reciclajes\n       } else {\n-        console.error(\"No se encontraron reciclajes\");\n+        console.error('No se encontraron reciclajes');\n       }\n     } catch (error) {\n-      console.error(\"Error al obtener reciclajes:\", error);\n+      console.error('Error al obtener reciclajes:', error);\n     }\n   };\n \n+  const [isChatOpen, setIsChatOpen] = useState(false);\n+\n+  const toggleChat = () => {\n+    setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n+  };\n+\n   return (\n-    <div className=\"relative\">\n-      <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n-        <img\n-          src={imageUrl}\n-          alt={`${type} image`}\n-          className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n-        />\n-        <h2 className=\"text-xl font-semibold\">{type}</h2>\n-        <p className=\"text-gray-700 text-sm mb-2\">Price: ${price}</p>\n-        <p className=\"text-gray-500 text-sm mb-4\">Ubication: {location}</p>\n-        <div className=\"flex justify-around mt-4\">\n-          <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n-            <span>üëÅÔ∏è</span>\n-            <span>See</span>\n-          </a>\n-          <button\n-            onClick={toggleChat}\n-            className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-          >\n-            <span>üí¨</span>\n-            <span>Chat</span>\n-          </button>\n+    <div className=\"flex flex-wrap justify-around\">\n+      {recyclings.map((recycling, index) => (\n+        <div key={index} className=\"relative m-4\">\n+          <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n+            <img\n+              src={'/path-to-your-image.jpg'} // Aseg√∫rate de cambiar esto con tu imagen real\n+              alt={`${recycling.type} image`}\n+              className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n+            />\n+            <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n+            <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n+            <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n+            <div className=\"flex justify-around mt-4\">\n+              <a\n+                href=\"#\"\n+                className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+              >\n+                <span>üëÅÔ∏è</span>\n+                <span>See</span>\n+              </a>\n+              <button\n+                onClick={toggleChat}\n+                className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+              >\n+                <span>üí¨</span>\n+                <span>Chat</span>\n+              </button>\n+            </div>\n+          </div>\n+\n+          {/* Mostrar el chat si est√° abierto */}\n+          {isChatOpen && <Chat recyclingId={index.toString()} onClose={function (): void {}} />}\n         </div>\n-      </div>\n-\n-       {/* Mostrar el chat si est√° abierto */}\n-      {isChatOpen && <Chat recyclingId={recyclingId} onClose={function (): void {\n-      } } />}\n+      ))}\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1728859585205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,17 @@\n \n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n const ADDRESS = '0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720';\n \n+interface CardProps {\n+  type: string;\n+  price: number;\n+  imageUrl: string;\n+  location: string;\n+  wallet: string; // Wallet del publicador\n+  recyclingId: string; // Identificador √∫nico del reciclaje\n+}\n+\n interface Recycling {\n   owner: string;\n   type: string;\n   ubication: string;\n@@ -16,88 +25,88 @@\n   chats: [];\n   available: boolean;\n }\n \n-const Card: React.FC = () => {\n-  const { account } = useWallet();\n-  const [recyclings, setRecyclings] = useState<Recycling[]>([]); // Lista de reciclajes\n+const Card: React.FC<CardProps> = ({ type, price, imageUrl, location, wallet, recyclingId }) => {\n+  const { account } = useWallet(); // Obtener la cuenta del wallet conectado\n+  const [isChatOpen, setIsChatOpen] = useState(false); // Controla el estado de visibilidad del chat\n+  const [recycling, setRecycling] = useState<Recycling | null>(null); // Estado para un √∫nico reciclaje\n \n   useEffect(() => {\n     if (account) {\n-      getRecycling();\n+      getRecycling(); // Llamar a la funci√≥n para obtener datos si hay cuenta\n     }\n   }, [account]);\n \n   const getRecycling = async () => {\n     const payload = {\n       function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n-      functionArguments: [`${account?.address}`],\n+      functionArguments: [`${account?.address}`], // Se pasa la direcci√≥n del wallet como argumento\n     };\n+\n     try {\n-      const result: any = await aptos.view({ payload });\n-      console.log('Resultado de reciclajes:', result[0]);\n+      const result: any = await aptos.view({ payload }); // Llamada a la funci√≥n del contrato\n+      console.log('Resultado de reciclajes:', result);\n \n       if (Array.isArray(result) && result.length > 0) {\n-        const extractedRecyclings: Recycling[] = result.map((recycling: any) => ({\n-          owner: recycling.owner,\n-          type: recycling.type || 'N/A',\n-          ubication: recycling.ubication || 'N/A',\n-          weight: recycling.weight || 0,\n-          pricePound: recycling.pricePound || 0,\n-          observations: recycling.observations || 'N/A',\n-          chats: recycling.chats || [],\n-          available: recycling.available || false,\n-        }));\n-        setRecyclings(extractedRecyclings); // Guardar los reciclajes\n+        const firstRecycling = result[0]; // Asumiendo que solo quieres el primer reciclaje\n+        const extractedRecycling: Recycling = {\n+          owner: firstRecycling.owner,\n+          type: firstRecycling.type || 'N/A',\n+          ubication: firstRecycling.ubication || 'N/A',\n+          weight: firstRecycling.weight || 0,\n+          pricePound: firstRecycling.pricePound || 0,\n+          observations: firstRecycling.observations || 'N/A',\n+          chats: firstRecycling.chats || [],\n+          available: firstRecycling.available || false,\n+        };\n+\n+        setRecycling(extractedRecycling); // Guardar el reciclaje en el estado\n       } else {\n         console.error('No se encontraron reciclajes');\n       }\n     } catch (error) {\n       console.error('Error al obtener reciclajes:', error);\n     }\n   };\n \n-  const [isChatOpen, setIsChatOpen] = useState(false);\n-\n   const toggleChat = () => {\n     setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n   };\n \n   return (\n-    <div className=\"flex flex-wrap justify-around\">\n-      {recyclings.map((recycling, index) => (\n-        <div key={index} className=\"relative m-4\">\n-          <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n-            <img\n-              src={'/path-to-your-image.jpg'} // Aseg√∫rate de cambiar esto con tu imagen real\n-              alt={`${recycling.type} image`}\n-              className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n-            />\n-            <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n-            <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n-            <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n-            <div className=\"flex justify-around mt-4\">\n-              <a\n-                href=\"#\"\n-                className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-              >\n-                <span>üëÅÔ∏è</span>\n-                <span>See</span>\n-              </a>\n-              <button\n-                onClick={toggleChat}\n-                className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-              >\n-                <span>üí¨</span>\n-                <span>Chat</span>\n-              </button>\n-            </div>\n+    <div className=\"relative\">\n+      {/* Asegurarte de que los datos del reciclaje est√©n disponibles */}\n+      {recycling ? (\n+        <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n+          <img\n+            src={imageUrl} // Imagen de la card\n+            alt={`${recycling.type} image`}\n+            className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n+          />\n+          <h2 className=\"text-xl font-semibold\">{recycling.type}</h2> {/* Muestra el tipo de reciclaje */}\n+          <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p> {/* Muestra el precio */}\n+          <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p> {/* Muestra la ubicaci√≥n */}\n+          <div className=\"flex justify-around mt-4\">\n+            <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n+              <span>üëÅÔ∏è</span>\n+              <span>See</span>\n+            </a>\n+            <button\n+              onClick={toggleChat}\n+              className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+            >\n+              <span>üí¨</span>\n+              <span>Chat</span>\n+            </button>\n           </div>\n+        </div>\n+      ) : (\n+        <p>Cargando datos del reciclaje...</p> // Muestra un mensaje mientras se cargan los datos\n+      )}\n \n-          {/* Mostrar el chat si est√° abierto */}\n-          {isChatOpen && <Chat recyclingId={index.toString()} onClose={function (): void {}} />}\n-        </div>\n-      ))}\n+      {/* Mostrar el chat si est√° abierto */}\n+      {isChatOpen && <Chat recyclingId={recyclingId} onClose={() => setIsChatOpen(false)} />}\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1728859904031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,8 @@\n \n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n const ADDRESS = '0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720';\n \n-interface CardProps {\n-  type: string;\n-  price: number;\n-  imageUrl: string;\n-  location: string;\n-  wallet: string; // Wallet del publicador\n-  recyclingId: string; // Identificador √∫nico del reciclaje\n-}\n-\n interface Recycling {\n   owner: string;\n   type: string;\n   ubication: string;\n@@ -25,12 +16,12 @@\n   chats: [];\n   available: boolean;\n }\n \n-const Card: React.FC<CardProps> = ({ type, price, imageUrl, location, wallet, recyclingId }) => {\n+const CardList: React.FC = () => {\n   const { account } = useWallet(); // Obtener la cuenta del wallet conectado\n-  const [isChatOpen, setIsChatOpen] = useState(false); // Controla el estado de visibilidad del chat\n-  const [recycling, setRecycling] = useState<Recycling | null>(null); // Estado para un √∫nico reciclaje\n+  const [isChatOpen, setIsChatOpen] = useState<string | null>(null); // Estado para manejar cu√°l chat est√° abierto\n+  const [recyclings, setRecyclings] = useState<Recycling[]>([]); // Estado para almacenar todos los reciclajes\n \n   useEffect(() => {\n     if (account) {\n       getRecycling(); // Llamar a la funci√≥n para obtener datos si hay cuenta\n@@ -47,67 +38,70 @@\n       const result: any = await aptos.view({ payload }); // Llamada a la funci√≥n del contrato\n       console.log('Resultado de reciclajes:', result);\n \n       if (Array.isArray(result) && result.length > 0) {\n-        const firstRecycling = result[0]; // Asumiendo que solo quieres el primer reciclaje\n-        const extractedRecycling: Recycling = {\n-          owner: firstRecycling.owner,\n-          type: firstRecycling.type || 'N/A',\n-          ubication: firstRecycling.ubication || 'N/A',\n-          weight: firstRecycling.weight || 0,\n-          pricePound: firstRecycling.pricePound || 0,\n-          observations: firstRecycling.observations || 'N/A',\n-          chats: firstRecycling.chats || [],\n-          available: firstRecycling.available || false,\n-        };\n+        // Mapear el resultado y extraer los datos relevantes de cada reciclaje\n+        const extractedRecyclings: Recycling[] = result.map((recycling: any) => ({\n+          owner: recycling.owner,\n+          type: recycling.type || 'N/A',\n+          ubication: recycling.ubication || 'N/A',\n+          weight: recycling.weight || 0,\n+          pricePound: recycling.pricePound || 0,\n+          observations: recycling.observations || 'N/A',\n+          chats: recycling.chats || [],\n+          available: recycling.available || false,\n+        }));\n \n-        setRecycling(extractedRecycling); // Guardar el reciclaje en el estado\n+        setRecyclings(extractedRecyclings); // Guardar los reciclajes en el estado\n       } else {\n         console.error('No se encontraron reciclajes');\n       }\n     } catch (error) {\n       console.error('Error al obtener reciclajes:', error);\n     }\n   };\n \n-  const toggleChat = () => {\n-    setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n+  const toggleChat = (recyclingId: string) => {\n+    setIsChatOpen(isChatOpen === recyclingId ? null : recyclingId); // Alterna el chat\n   };\n \n   return (\n-    <div className=\"relative\">\n-      {/* Asegurarte de que los datos del reciclaje est√©n disponibles */}\n-      {recycling ? (\n-        <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n-          <img\n-            src={imageUrl} // Imagen de la card\n-            alt={`${recycling.type} image`}\n-            className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n-          />\n-          <h2 className=\"text-xl font-semibold\">{recycling.type}</h2> {/* Muestra el tipo de reciclaje */}\n-          <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p> {/* Muestra el precio */}\n-          <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p> {/* Muestra la ubicaci√≥n */}\n-          <div className=\"flex justify-around mt-4\">\n-            <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n-              <span>üëÅÔ∏è</span>\n-              <span>See</span>\n-            </a>\n-            <button\n-              onClick={toggleChat}\n-              className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-            >\n-              <span>üí¨</span>\n-              <span>Chat</span>\n-            </button>\n+    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n+      {recyclings.length > 0 ? (\n+        recyclings.map((recycling, index) => (\n+          <div key={index} className=\"relative\">\n+            <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n+              <img\n+                src={`https://via.placeholder.com/150`} // Imagen de ejemplo, puedes cambiar esto por el URL real si tienes\n+                alt={`${recycling.type} image`}\n+                className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n+              />\n+              <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n+              <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n+              <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n+              <div className=\"flex justify-around mt-4\">\n+                <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n+                  <span>üëÅÔ∏è</span>\n+                  <span>See</span>\n+                </a>\n+                <button\n+                  onClick={() => toggleChat(recycling.owner)}\n+                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+                >\n+                  <span>üí¨</span>\n+                  <span>Chat</span>\n+                </button>\n+              </div>\n+            </div>\n+\n+            {/* Mostrar el chat si est√° abierto para ese reciclaje */}\n+            {isChatOpen === recycling.owner && <Chat recyclingId={recycling.owner} onClose={() => setIsChatOpen(null)} />}\n           </div>\n-        </div>\n+        ))\n       ) : (\n         <p>Cargando datos del reciclaje...</p> // Muestra un mensaje mientras se cargan los datos\n       )}\n-\n-      {/* Mostrar el chat si est√° abierto */}\n-      {isChatOpen && <Chat recyclingId={recyclingId} onClose={() => setIsChatOpen(false)} />}\n     </div>\n   );\n };\n \n-export default Card;\n+export default CardList;\n"
                },
                {
                    "date": 1728860283050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,13 +11,17 @@\n   type: string;\n   ubication: string;\n   weight: number;\n   pricePound: number;\n-  observations: string;\n-  chats: [];\n-  available: boolean;\n }\n \n+interface CardListProps {\n+  owner: string;\n+  type: string;\n+  ubication: string;\n+  weight: number;\n+  pricePound: number;\n+}\n const CardList: React.FC = () => {\n   const { account } = useWallet(); // Obtener la cuenta del wallet conectado\n   const [isChatOpen, setIsChatOpen] = useState<string | null>(null); // Estado para manejar cu√°l chat est√° abierto\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]); // Estado para almacenar todos los reciclajes\n@@ -45,11 +49,8 @@\n           type: recycling.type || 'N/A',\n           ubication: recycling.ubication || 'N/A',\n           weight: recycling.weight || 0,\n           pricePound: recycling.pricePound || 0,\n-          observations: recycling.observations || 'N/A',\n-          chats: recycling.chats || [],\n-          available: recycling.available || false,\n         }));\n \n         setRecyclings(extractedRecyclings); // Guardar los reciclajes en el estado\n       } else {\n"
                },
                {
                    "date": 1728860385239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,108 +1,54 @@\n-import React, { useState, useEffect } from 'react';\n-import Chat from './chat';\n-import { Aptos, AptosConfig, Network } from '@aptos-labs/ts-sdk';\n-import { useWallet } from '@aptos-labs/wallet-adapter-react';\n+import React, { useEffect, useState } from 'react';\n \n-export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n-const ADDRESS = '0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720';\n-\n-interface Recycling {\n+interface Reciclaje {\n+  available: boolean;\n+  chats: string[];\n+  observations: string;\n   owner: string;\n   type: string;\n-  ubication: string;\n-  weight: number;\n-  pricePound: number;\n+  costo: number;\n+  ubicacion: string;\n+  image: string;\n }\n \n-interface CardListProps {\n-  owner: string;\n-  type: string;\n-  ubication: string;\n-  weight: number;\n-  pricePound: number;\n-}\n-const CardList: React.FC = () => {\n-  const { account } = useWallet(); // Obtener la cuenta del wallet conectado\n-  const [isChatOpen, setIsChatOpen] = useState<string | null>(null); // Estado para manejar cu√°l chat est√° abierto\n-  const [recyclings, setRecyclings] = useState<Recycling[]>([]); // Estado para almacenar todos los reciclajes\n+const Cards = () => {\n+  const [reciclajes, setReciclajes] = useState<Reciclaje[]>([]);\n \n   useEffect(() => {\n-    if (account) {\n-      getRecycling(); // Llamar a la funci√≥n para obtener datos si hay cuenta\n-    }\n-  }, [account]);\n+    // Simulando la respuesta del backend\n+    const obtenerReciclajes = async () => {\n+      const resultado = [\n+        { available: true, chats: [], observations: 'hola', owner: 'Juan', type: 'Pl√°stico', costo: 5, ubicacion: 'Calle 1', image: 'https://via.placeholder.com/150' },\n+        { available: true, chats: [], observations: 'Llegar a las 10 AM', owner: 'Pedro', type: 'Papel', costo: 3, ubicacion: 'Calle 2', image: 'https://via.placeholder.com/150' },\n+        { available: true, chats: [], observations: 'Ya hay espacio', owner: 'Maria', type: 'Vidrio', costo: 8, ubicacion: 'Calle 3', image: 'https://via.placeholder.com/150' },\n+      ];\n \n-  const getRecycling = async () => {\n-    const payload = {\n-      function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n-      functionArguments: [`${account?.address}`], // Se pasa la direcci√≥n del wallet como argumento\n+      setReciclajes(resultado);\n     };\n \n-    try {\n-      const result: any = await aptos.view({ payload }); // Llamada a la funci√≥n del contrato\n-      console.log('Resultado de reciclajes:', result);\n+    obtenerReciclajes();\n+  }, []);\n \n-      if (Array.isArray(result) && result.length > 0) {\n-        // Mapear el resultado y extraer los datos relevantes de cada reciclaje\n-        const extractedRecyclings: Recycling[] = result.map((recycling: any) => ({\n-          owner: recycling.owner,\n-          type: recycling.type || 'N/A',\n-          ubication: recycling.ubication || 'N/A',\n-          weight: recycling.weight || 0,\n-          pricePound: recycling.pricePound || 0,\n-        }));\n-\n-        setRecyclings(extractedRecyclings); // Guardar los reciclajes en el estado\n-      } else {\n-        console.error('No se encontraron reciclajes');\n-      }\n-    } catch (error) {\n-      console.error('Error al obtener reciclajes:', error);\n-    }\n-  };\n-\n-  const toggleChat = (recyclingId: string) => {\n-    setIsChatOpen(isChatOpen === recyclingId ? null : recyclingId); // Alterna el chat\n-  };\n-\n   return (\n-    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n-      {recyclings.length > 0 ? (\n-        recyclings.map((recycling, index) => (\n-          <div key={index} className=\"relative\">\n-            <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n-              <img\n-                src={`https://via.placeholder.com/150`} // Imagen de ejemplo, puedes cambiar esto por el URL real si tienes\n-                alt={`${recycling.type} image`}\n-                className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n-              />\n-              <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n-              <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n-              <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n-              <div className=\"flex justify-around mt-4\">\n-                <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n-                  <span>üëÅÔ∏è</span>\n-                  <span>See</span>\n-                </a>\n-                <button\n-                  onClick={() => toggleChat(recycling.owner)}\n-                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-                >\n-                  <span>üí¨</span>\n-                  <span>Chat</span>\n-                </button>\n-              </div>\n-            </div>\n-\n-            {/* Mostrar el chat si est√° abierto para ese reciclaje */}\n-            {isChatOpen === recycling.owner && <Chat recyclingId={recycling.owner} onClose={() => setIsChatOpen(null)} />}\n+    <div className=\"grid grid-cols-3 gap-4\">\n+      {reciclajes.map((reciclaje, index) => (\n+        <div key={index} className=\"bg-blue-100 rounded-lg p-4\">\n+          <img src={reciclaje.image} alt={reciclaje.type} className=\"w-40 h-40 object-cover rounded-full mx-auto mb-4\" />\n+          <h2 className=\"text-center text-xl font-bold\">{reciclaje.type || 'N/A'}</h2>\n+          <p className=\"text-center\">Price: ${reciclaje.costo || 0}</p>\n+          <p className=\"text-center\">Ubication: {reciclaje.ubicacion || 'N/A'}</p>\n+          <div className=\"flex justify-between mt-4\">\n+            <button className=\"bg-orange-500 text-white px-4 py-2 rounded-full flex items-center gap-2\">\n+              <span>üëÅÔ∏è</span> See\n+            </button>\n+            <button className=\"bg-orange-500 text-white px-4 py-2 rounded-full flex items-center gap-2\">\n+              <span>üí¨</span> Chat\n+            </button>\n           </div>\n-        ))\n-      ) : (\n-        <p>Cargando datos del reciclaje...</p> // Muestra un mensaje mientras se cargan los datos\n-      )}\n+        </div>\n+      ))}\n     </div>\n   );\n };\n \n-export default CardList;\n+export default Cards;\n"
                },
                {
                    "date": 1728860813412,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,54 +1,53 @@\n-import React, { useEffect, useState } from 'react';\n+import React, { useState } from 'react';\n+import Chat from \"./chat\";\n \n-interface Reciclaje {\n-  available: boolean;\n-  chats: string[];\n-  observations: string;\n-  owner: string;\n+interface CardProps {\n   type: string;\n-  costo: number;\n-  ubicacion: string;\n-  image: string;\n+  price: number;\n+  imageUrl: string;\n+  location: string;\n+  wallet: string; // Wallet del publicador\n+  recyclingId: string; // Identificador √∫nico del reciclaje\n }\n \n-const Cards = () => {\n-  const [reciclajes, setReciclajes] = useState<Reciclaje[]>([]);\n+const Card: React.FC<CardProps> = ({ type, price, imageUrl, location, wallet, recyclingId }) => {\n+  const [isChatOpen, setIsChatOpen] = useState(false);\n \n-  useEffect(() => {\n-    // Simulando la respuesta del backend\n-    const obtenerReciclajes = async () => {\n-      const resultado = [\n-        { available: true, chats: [], observations: 'hola', owner: 'Juan', type: 'Pl√°stico', costo: 5, ubicacion: 'Calle 1', image: 'https://via.placeholder.com/150' },\n-        { available: true, chats: [], observations: 'Llegar a las 10 AM', owner: 'Pedro', type: 'Papel', costo: 3, ubicacion: 'Calle 2', image: 'https://via.placeholder.com/150' },\n-        { available: true, chats: [], observations: 'Ya hay espacio', owner: 'Maria', type: 'Vidrio', costo: 8, ubicacion: 'Calle 3', image: 'https://via.placeholder.com/150' },\n-      ];\n+  const toggleChat = () => {\n+    setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n+  };\n \n-      setReciclajes(resultado);\n-    };\n-\n-    obtenerReciclajes();\n-  }, []);\n-\n   return (\n-    <div className=\"grid grid-cols-3 gap-4\">\n-      {reciclajes.map((reciclaje, index) => (\n-        <div key={index} className=\"bg-blue-100 rounded-lg p-4\">\n-          <img src={reciclaje.image} alt={reciclaje.type} className=\"w-40 h-40 object-cover rounded-full mx-auto mb-4\" />\n-          <h2 className=\"text-center text-xl font-bold\">{reciclaje.type || 'N/A'}</h2>\n-          <p className=\"text-center\">Price: ${reciclaje.costo || 0}</p>\n-          <p className=\"text-center\">Ubication: {reciclaje.ubicacion || 'N/A'}</p>\n-          <div className=\"flex justify-between mt-4\">\n-            <button className=\"bg-orange-500 text-white px-4 py-2 rounded-full flex items-center gap-2\">\n-              <span>üëÅÔ∏è</span> See\n-            </button>\n-            <button className=\"bg-orange-500 text-white px-4 py-2 rounded-full flex items-center gap-2\">\n-              <span>üí¨</span> Chat\n-            </button>\n-          </div>\n+    <div className=\"relative\">\n+      <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n+        <img\n+          src={imageUrl}\n+          alt={`${type} image`}\n+          className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n+        />\n+        <h2 className=\"text-xl font-semibold\">{type}</h2>\n+        <p className=\"text-gray-700 text-sm mb-2\">Price: ${price}</p>\n+        <p className=\"text-gray-500 text-sm mb-4\">Ubication: {location}</p>\n+        <div className=\"flex justify-around mt-4\">\n+          <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n+            <span>üëÅÔ∏è</span>\n+            <span>See</span>\n+          </a>\n+          <button\n+            onClick={toggleChat}\n+            className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+          >\n+            <span>üí¨</span>\n+            <span>Chat</span>\n+          </button>\n         </div>\n-      ))}\n+      </div>\n+\n+       {/* Mostrar el chat si est√° abierto */}\n+      {isChatOpen && <Chat recyclingId={recyclingId} onClose={function (): void {\n+      } } />}\n     </div>\n   );\n };\n \n-export default Cards;\n+export default Card;\n"
                },
                {
                    "date": 1728861112748,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,53 +1,101 @@\n-import React, { useState } from 'react';\n-import Chat from \"./chat\";\n+import React, { useState, useEffect } from \"react\";\n+import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n+import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n \n-interface CardProps {\n+interface Recycling {\n   type: string;\n-  price: number;\n-  imageUrl: string;\n-  location: string;\n-  wallet: string; // Wallet del publicador\n-  recyclingId: string; // Identificador √∫nico del reciclaje\n+  ubication: string;\n+  weight: number;\n+  pricePound: number;\n+  observations: string;\n+  chats: [];\n+  available: boolean;\n }\n \n-const Card: React.FC<CardProps> = ({ type, price, imageUrl, location, wallet, recyclingId }) => {\n-  const [isChatOpen, setIsChatOpen] = useState(false);\n+export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n+const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n \n-  const toggleChat = () => {\n-    setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n+const CardContainer = () => {\n+  const { account } = useWallet();\n+  const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n+  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n+\n+  useEffect(() => {\n+    if (account) {\n+      getRecycling();\n+    }\n+  }, [account]);\n+\n+  const getRecycling = async () => {\n+    const payload = {\n+      function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+      functionArguments: [`${account?.address}`],\n+    };\n+    try {\n+      const result: any = await aptos.view({ payload });\n+      console.log(\"Resultado de reciclajes:\", result[0]);\n+\n+      if (Array.isArray(result) && result.length > 0) {\n+        const extractedRecyclings: Recycling[] = result.flatMap((recyclingArray: any[]) =>\n+          recyclingArray.map((recycling: any) => ({\n+            owner: recycling.owner,\n+            type: recycling.type || \"N/A\",\n+            ubication: recycling.ubication || \"N/A\",\n+            weight: recycling.weight || 0,\n+            pricePound: recycling.pricePound || 0,\n+            observations: recycling.observations || \"N/A\",\n+            chats: recycling.chats || [],\n+            available: recycling.available || false,\n+          }))\n+        );\n+\n+        setRecyclings(extractedRecyclings);\n+      } else {\n+        console.error(\"No se encontraron reciclajes\");\n+      }\n+    } catch (error) {\n+      console.error(\"Error al obtener reciclajes:\", error);\n+    }\n   };\n \n+  const handleCardClick = (recycling: Recycling) => {\n+    setSelectedRecycling(recycling);\n+  };\n+\n+  const handleCloseModal = () => {\n+    setSelectedRecycling(null);\n+  };\n+\n   return (\n-    <div className=\"relative\">\n-      <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n-        <img\n-          src={imageUrl}\n-          alt={`${type} image`}\n-          className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n-        />\n-        <h2 className=\"text-xl font-semibold\">{type}</h2>\n-        <p className=\"text-gray-700 text-sm mb-2\">Price: ${price}</p>\n-        <p className=\"text-gray-500 text-sm mb-4\">Ubication: {location}</p>\n-        <div className=\"flex justify-around mt-4\">\n-          <a href=\"#\" className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\">\n-            <span>üëÅÔ∏è</span>\n-            <span>See</span>\n-          </a>\n-          <button\n-            onClick={toggleChat}\n-            className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+    <div className=\"flex justify-center flex-wrap\">\n+      {recyclings.length > 0 ? (\n+        recyclings.map((recycling, index) => (\n+          <div\n+            key={index}\n+            className=\"m-4 p-4 border rounded-lg shadow-lg transition-transform transform hover:scale-105 cursor-pointer\"\n+            onClick={() => handleCardClick(recycling)}\n           >\n-            <span>üí¨</span>\n-            <span>Chat</span>\n-          </button>\n+            <h3 className=\"text-xl font-bold\">{recycling.type}</h3>\n+            <p className=\"text-gray-700\">Ubicaci√≥n: {recycling.ubication}</p>\n+            <p>Peso: {recycling.weight} lbs</p>\n+            <p>Precio por libra: ${recycling.pricePound}</p>\n+            <p>Observaciones: {recycling.observations}</p>\n+            <p>Disponible: {recycling.available ? \"S√≠\" : \"No\"}</p>\n+          </div>\n+        ))\n+      ) : (\n+        <p className=\"text-center\">No hay reciclajes disponibles</p>\n+      )}\n+      {selectedRecycling && (\n+        <div>\n+          {/* Aqu√≠ puedes implementar un modal o algo similar para mostrar m√°s detalles */}\n+          <h2>Detalles de reciclaje seleccionado:</h2>\n+          <p>{JSON.stringify(selectedRecycling)}</p>\n+          <button onClick={handleCloseModal}>Cerrar</button>\n         </div>\n-      </div>\n-\n-       {/* Mostrar el chat si est√° abierto */}\n-      {isChatOpen && <Chat recyclingId={recyclingId} onClose={function (): void {\n-      } } />}\n+      )}\n     </div>\n   );\n };\n \n-export default Card;\n+export default CardContainer;\n"
                },
                {
                    "date": 1728861732857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, { useState, useEffect } from \"react\";\n import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n+import Chat from \"./chat\"; // Aseg√∫rate de que el componente de Chat est√© disponible\n \n interface Recycling {\n   type: string;\n   ubication: string;\n@@ -18,8 +19,9 @@\n const CardContainer = () => {\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n   const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n+  const [isChatOpen, setIsChatOpen] = useState(false); // Estado para controlar el chat\n \n   useEffect(() => {\n     if (account) {\n       getRecycling();\n@@ -57,44 +59,46 @@\n       console.error(\"Error al obtener reciclajes:\", error);\n     }\n   };\n \n-  const handleCardClick = (recycling: Recycling) => {\n-    setSelectedRecycling(recycling);\n+  const toggleChat = () => {\n+    setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n   };\n \n-  const handleCloseModal = () => {\n-    setSelectedRecycling(null);\n-  };\n-\n   return (\n     <div className=\"flex justify-center flex-wrap\">\n       {recyclings.length > 0 ? (\n         recyclings.map((recycling, index) => (\n-          <div\n-            key={index}\n-            className=\"m-4 p-4 border rounded-lg shadow-lg transition-transform transform hover:scale-105 cursor-pointer\"\n-            onClick={() => handleCardClick(recycling)}\n-          >\n-            <h3 className=\"text-xl font-bold\">{recycling.type}</h3>\n-            <p className=\"text-gray-700\">Ubicaci√≥n: {recycling.ubication}</p>\n-            <p>Peso: {recycling.weight} lbs</p>\n-            <p>Precio por libra: ${recycling.pricePound}</p>\n-            <p>Observaciones: {recycling.observations}</p>\n-            <p>Disponible: {recycling.available ? \"S√≠\" : \"No\"}</p>\n+          <div key={index} className=\"relative m-4\">\n+            <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n+              <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n+              <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n+              <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n+              <div className=\"flex justify-around mt-4\">\n+                <a\n+                  href=\"#\"\n+                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+                >\n+                  <span>üëÅÔ∏è</span>\n+                  <span>See</span>\n+                </a>\n+                <button\n+                  onClick={toggleChat}\n+                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+                >\n+                  <span>üí¨</span>\n+                  <span>Chat</span>\n+                </button>\n+              </div>\n+            </div>\n+\n+            {/* Mostrar el chat si est√° abierto */}\n+            {isChatOpen && <Chat recyclingId={recycling.ubication} onClose={toggleChat} />}\n           </div>\n         ))\n       ) : (\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n       )}\n-      {selectedRecycling && (\n-        <div>\n-          {/* Aqu√≠ puedes implementar un modal o algo similar para mostrar m√°s detalles */}\n-          <h2>Detalles de reciclaje seleccionado:</h2>\n-          <p>{JSON.stringify(selectedRecycling)}</p>\n-          <button onClick={handleCloseModal}>Cerrar</button>\n-        </div>\n-      )}\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1728862017026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n               </div>\n             </div>\n \n             {/* Mostrar el chat si est√° abierto */}\n-            {isChatOpen && <Chat recyclingId={recycling.ubication} onClose={toggleChat} />}\n+            {isChatOpen && <Chat recyclingId={account?.address ?? ''} onClose={toggleChat} />}\n           </div>\n         ))\n       ) : (\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n"
                },
                {
                    "date": 1728862066852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n               </div>\n             </div>\n \n             {/* Mostrar el chat si est√° abierto */}\n-            {isChatOpen && <Chat recyclingId={account?.address ?? ''} onClose={toggleChat} />}\n+            {isChatOpen && <Chat recyclingId={recycling.ubication} onClose={toggleChat} />}\n           </div>\n         ))\n       ) : (\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n"
                },
                {
                    "date": 1728862215580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,16 +20,18 @@\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n   const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n   const [isChatOpen, setIsChatOpen] = useState(false); // Estado para controlar el chat\n+  const [loading, setLoading] = useState(true); // Estado para controlar la carga\n \n   useEffect(() => {\n     if (account) {\n       getRecycling();\n     }\n   }, [account]);\n \n   const getRecycling = async () => {\n+    setLoading(true); // Activar el estado de carga\n     const payload = {\n       function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n       functionArguments: [`${account?.address}`],\n     };\n@@ -56,8 +58,10 @@\n         console.error(\"No se encontraron reciclajes\");\n       }\n     } catch (error) {\n       console.error(\"Error al obtener reciclajes:\", error);\n+    } finally {\n+      setLoading(false); // Desactivar el estado de carga\n     }\n   };\n \n   const toggleChat = () => {\n@@ -65,9 +69,14 @@\n   };\n \n   return (\n     <div className=\"flex justify-center flex-wrap\">\n-      {recyclings.length > 0 ? (\n+      {loading ? ( // Mostrar animaci√≥n de carga\n+        <div className=\"flex flex-col items-center justify-center h-screen\">\n+          <div className=\"loader\"></div> {/* Estilo para la animaci√≥n de carga */}\n+          <p className=\"mt-4 text-lg\">Cargando reciclajes...</p>\n+        </div>\n+      ) : recyclings.length > 0 ? (\n         recyclings.map((recycling, index) => (\n           <div key={index} className=\"relative m-4\">\n             <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n               <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n"
                },
                {
                    "date": 1728862304874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,9 @@\n \n const CardContainer = () => {\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n-  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n-  const [isChatOpen, setIsChatOpen] = useState(false); // Estado para controlar el chat\n+  const [openChatId, setOpenChatId] = useState<string | null>(null); // Cambiado para almacenar el ID del reciclaje cuyo chat est√° abierto\n   const [loading, setLoading] = useState(true); // Estado para controlar la carga\n \n   useEffect(() => {\n     if (account) {\n@@ -63,10 +62,10 @@\n       setLoading(false); // Desactivar el estado de carga\n     }\n   };\n \n-  const toggleChat = () => {\n-    setIsChatOpen(!isChatOpen); // Cambia el estado del chat (abrir/cerrar)\n+  const toggleChat = (recyclingId: string) => {\n+    setOpenChatId(openChatId === recyclingId ? null : recyclingId); // Cambia el estado del chat para un solo reciclaje\n   };\n \n   return (\n     <div className=\"flex justify-center flex-wrap\">\n@@ -90,9 +89,9 @@\n                   <span>üëÅÔ∏è</span>\n                   <span>See</span>\n                 </a>\n                 <button\n-                  onClick={toggleChat}\n+                  onClick={() => toggleChat(recycling.ubication)} // Pasa el ID del reciclaje al hacer clic\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n                   <span>üí¨</span>\n                   <span>Chat</span>\n@@ -100,9 +99,9 @@\n               </div>\n             </div>\n \n             {/* Mostrar el chat si est√° abierto */}\n-            {isChatOpen && <Chat recyclingId={recycling.ubication} onClose={toggleChat} />}\n+            {openChatId === recycling.ubication && <Chat recyclingId={recycling.ubication} onClose={() => toggleChat(recycling.ubication)} />}\n           </div>\n         ))\n       ) : (\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n"
                },
                {
                    "date": 1728863107878,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n import React, { useState, useEffect } from \"react\";\n-import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n+import { Aptos, AptosConfig, MAX_EXTRA_FIELD_BYTES, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n-import Chat from \"./chat\"; // Aseg√∫rate de que el componente de Chat est√© disponible\n+import Chat from \"./chat\";\n+import Image from \"next/image\";\n \n+\n interface Recycling {\n   type: string;\n   ubication: string;\n   weight: number;\n@@ -65,9 +67,17 @@\n \n   const toggleChat = (recyclingId: string) => {\n     setOpenChatId(openChatId === recyclingId ? null : recyclingId); // Cambia el estado del chat para un solo reciclaje\n   };\n+// Si la card es de tipo metal muestra la imagen del metal\n+recyclings.forEach((recycling) => {\n+  if (recycling.type === \"Metals\") {\n+    // Aqu√≠ puedes agregar la l√≥gica para mostrar la imagen del metal\n+    src: \"/metal.png\";\n+  }\n+});\n \n+\n   return (\n     <div className=\"flex justify-center flex-wrap\">\n       {loading ? ( // Mostrar animaci√≥n de carga\n         <div className=\"flex flex-col items-center justify-center h-screen\">\n"
                },
                {
                    "date": 1728863630057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,14 @@\n   chats: [];\n   available: boolean;\n }\n \n+const imageUrls: Record<string, string> = {\n+  Metals: \"/public/metals.jpeg\",       // Reemplaza con la URL real de la imagen del metal\n+  Plastics: \"/public/plastic.jpeg\",   // Reemplaza con la URL real de la imagen del pl√°stico\n+  Cardboard: \"/public/cardboard.jpeg\",    // Reemplaza con la URL real de la imagen del cart√≥n\n+  Glass: \"/public/glass.jpeg\",        // Reemplaza con la URL real de la imagen del vidrio\n+};\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n \n const CardContainer = () => {\n@@ -67,17 +73,9 @@\n \n   const toggleChat = (recyclingId: string) => {\n     setOpenChatId(openChatId === recyclingId ? null : recyclingId); // Cambia el estado del chat para un solo reciclaje\n   };\n-// Si la card es de tipo metal muestra la imagen del metal\n-recyclings.forEach((recycling) => {\n-  if (recycling.type === \"Metals\") {\n-    // Aqu√≠ puedes agregar la l√≥gica para mostrar la imagen del metal\n-    src: \"/metal.png\";\n-  }\n-});\n \n-\n   return (\n     <div className=\"flex justify-center flex-wrap\">\n       {loading ? ( // Mostrar animaci√≥n de carga\n         <div className=\"flex flex-col items-center justify-center h-screen\">\n@@ -87,8 +85,14 @@\n       ) : recyclings.length > 0 ? (\n         recyclings.map((recycling, index) => (\n           <div key={index} className=\"relative m-4\">\n             <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n+            {imageUrls[recycling.type] && (\n+                <img\n+                  src={imageUrls[recycling.type]} // URL de la imagen basada en el tipo\n+                  alt={`${recycling.type} image`}\n+                  className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n+                />)}\n               <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n               <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n               <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n               <div className=\"flex justify-around mt-4\">\n"
                },
                {
                    "date": 1728863680669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,12 +15,12 @@\n   available: boolean;\n }\n \n const imageUrls: Record<string, string> = {\n-  Metals: \"/public/metals.jpeg\",       // Reemplaza con la URL real de la imagen del metal\n-  Plastics: \"/public/plastic.jpeg\",   // Reemplaza con la URL real de la imagen del pl√°stico\n-  Cardboard: \"/public/cardboard.jpeg\",    // Reemplaza con la URL real de la imagen del cart√≥n\n-  Glass: \"/public/glass.jpeg\",        // Reemplaza con la URL real de la imagen del vidrio\n+  Metals: \"/metals.jpeg\",       // Reemplaza con la URL real de la imagen del metal\n+  Plastics: \"/plastic.jpeg\",   // Reemplaza con la URL real de la imagen del pl√°stico\n+  Cardboard: \"/cardboard.jpeg\",    // Reemplaza con la URL real de la imagen del cart√≥n\n+  Glass: \"/glass.jpeg\",        // Reemplaza con la URL real de la imagen del vidrio\n };\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n \n"
                },
                {
                    "date": 1728863715334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n const imageUrls: Record<string, string> = {\n   Metals: \"/metals.jpeg\",       // Reemplaza con la URL real de la imagen del metal\n   Plastics: \"/plastic.jpeg\",   // Reemplaza con la URL real de la imagen del pl√°stico\n   Cardboard: \"/cardboard.jpeg\",    // Reemplaza con la URL real de la imagen del cart√≥n\n-  Glass: \"/glass.jpeg\",        // Reemplaza con la URL real de la imagen del vidrio\n+  Glasses: \"/glass.jpeg\",        // Reemplaza con la URL real de la imagen del vidrio\n };\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n \n"
                },
                {
                    "date": 1728866996032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,12 @@\n import React, { useState, useEffect } from \"react\";\n import { Aptos, AptosConfig, MAX_EXTRA_FIELD_BYTES, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n-import Image from \"next/image\";\n \n-\n+const handleCloseModal = () => {\n+  setSelectedRecycling(null);\n+};\n interface Recycling {\n   type: string;\n   ubication: string;\n   weight: number;\n"
                },
                {
                    "date": 1728867082019,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,8 @@\n import { Aptos, AptosConfig, MAX_EXTRA_FIELD_BYTES, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n \n-const handleCloseModal = () => {\n-  setSelectedRecycling(null);\n-};\n interface Recycling {\n   type: string;\n   ubication: string;\n   weight: number;\n@@ -16,12 +13,12 @@\n   available: boolean;\n }\n \n const imageUrls: Record<string, string> = {\n-  Metals: \"/metals.jpeg\",       // Reemplaza con la URL real de la imagen del metal\n-  Plastics: \"/plastic.jpeg\",   // Reemplaza con la URL real de la imagen del pl√°stico\n-  Cardboard: \"/cardboard.jpeg\",    // Reemplaza con la URL real de la imagen del cart√≥n\n-  Glasses: \"/glass.jpeg\",        // Reemplaza con la URL real de la imagen del vidrio\n+  Metals: \"/metals.jpeg\",     \n+  Plastics: \"/plastic.jpeg\",   \n+  Cardboard: \"/cardboard.jpeg\",  \n+  Glasses: \"/glass.jpeg\",        \n };\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n \n@@ -29,9 +26,14 @@\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n   const [openChatId, setOpenChatId] = useState<string | null>(null); // Cambiado para almacenar el ID del reciclaje cuyo chat est√° abierto\n   const [loading, setLoading] = useState(true); // Estado para controlar la carga\n+  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n \n+  const handleCloseModal = () => {\n+    setSelectedRecycling(null);\n+  };\n+\n   useEffect(() => {\n     if (account) {\n       getRecycling();\n     }\n"
                },
                {
                    "date": 1728867263000,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,15 +98,38 @@\n               <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n               <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n               <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n               <div className=\"flex justify-around mt-4\">\n+\n+          {selectedRecycling && (\n+          <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center\">\n+            <div className=\" bg-white rounded-lg p-6 w-96 max-w-lg md:max-w-xl lg:max-w-2xl\">\n+              <h2 className=\"text-xl mb-4\">Recycling Overview</h2>\n+              <p><strong>Type:</strong> {selectedRecycling.type}</p>\n+              <p><strong>Ubication:</strong> {selectedRecycling.ubication}</p>\n+              <p><strong>Weight:</strong> {selectedRecycling.weight}</p>\n+              <p><strong>Price Per Pound:</strong> {selectedRecycling.pricePound}</p>\n+              <p><strong>Observations:</strong> {selectedRecycling.observations}</p>\n+              <p><strong>Available:</strong> {selectedRecycling.available ? \"S√≠\" : \"No\"}</p>\n+              <div className=\"flex justify-center mt-4 space-x-4\">\n+              <button onClick={handleCloseModal} className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\"><span>üëÅÔ∏è</span>\n+              <span>See</span></button>\n+              </div>\n+            </div>\n+          </div>\n+        )}\n+\n+\n                 <a\n                   href=\"#\"\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n                   <span>üëÅÔ∏è</span>\n                   <span>See</span>\n                 </a>\n+\n+\n+\n                 <button\n                   onClick={() => toggleChat(recycling.ubication)} // Pasa el ID del reciclaje al hacer clic\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n"
                },
                {
                    "date": 1728868091781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,11 @@\n import React, { useState, useEffect } from \"react\";\n-import { Aptos, AptosConfig, MAX_EXTRA_FIELD_BYTES, Network } from \"@aptos-labs/ts-sdk\";\n+import {\n+  Aptos,\n+  AptosConfig,\n+  MAX_EXTRA_FIELD_BYTES,\n+  Network,\n+} from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n \n interface Recycling {\n@@ -13,22 +18,25 @@\n   available: boolean;\n }\n \n const imageUrls: Record<string, string> = {\n-  Metals: \"/metals.jpeg\",     \n-  Plastics: \"/plastic.jpeg\",   \n-  Cardboard: \"/cardboard.jpeg\",  \n-  Glasses: \"/glass.jpeg\",        \n+  Metals: \"/metals.jpeg\",\n+  Plastics: \"/plastic.jpeg\",\n+  Cardboard: \"/cardboard.jpeg\",\n+  Glasses: \"/glass.jpeg\",\n };\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n-const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n+const ADDRESS =\n+  \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n \n const CardContainer = () => {\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n   const [openChatId, setOpenChatId] = useState<string | null>(null); // Cambiado para almacenar el ID del reciclaje cuyo chat est√° abierto\n   const [loading, setLoading] = useState(true); // Estado para controlar la carga\n-  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n+  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(\n+    null\n+  );\n \n   const handleCloseModal = () => {\n     setSelectedRecycling(null);\n   };\n@@ -41,27 +49,29 @@\n \n   const getRecycling = async () => {\n     setLoading(true); // Activar el estado de carga\n     const payload = {\n-      function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+      function:\n+        `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n       functionArguments: [`${account?.address}`],\n     };\n     try {\n       const result: any = await aptos.view({ payload });\n       console.log(\"Resultado de reciclajes:\", result[0]);\n \n       if (Array.isArray(result) && result.length > 0) {\n-        const extractedRecyclings: Recycling[] = result.flatMap((recyclingArray: any[]) =>\n-          recyclingArray.map((recycling: any) => ({\n-            owner: recycling.owner,\n-            type: recycling.type || \"N/A\",\n-            ubication: recycling.ubication || \"N/A\",\n-            weight: recycling.weight || 0,\n-            pricePound: recycling.pricePound || 0,\n-            observations: recycling.observations || \"N/A\",\n-            chats: recycling.chats || [],\n-            available: recycling.available || false,\n-          }))\n+        const extractedRecyclings: Recycling[] = result.flatMap(\n+          (recyclingArray: any[]) =>\n+            recyclingArray.map((recycling: any) => ({\n+              owner: recycling.owner,\n+              type: recycling.type || \"N/A\",\n+              ubication: recycling.ubication || \"N/A\",\n+              weight: recycling.weight || 0,\n+              pricePound: recycling.pricePound || 0,\n+              observations: recycling.observations || \"N/A\",\n+              chats: recycling.chats || [],\n+              available: recycling.available || false,\n+            }))\n         );\n \n         setRecyclings(extractedRecyclings);\n       } else {\n@@ -81,55 +91,78 @@\n   return (\n     <div className=\"flex justify-center flex-wrap\">\n       {loading ? ( // Mostrar animaci√≥n de carga\n         <div className=\"flex flex-col items-center justify-center h-screen\">\n-          <div className=\"loader\"></div> {/* Estilo para la animaci√≥n de carga */}\n+          <div className=\"loader\"></div>{\" \"}\n+          {/* Estilo para la animaci√≥n de carga */}\n           <p className=\"mt-4 text-lg\">Cargando reciclajes...</p>\n         </div>\n       ) : recyclings.length > 0 ? (\n         recyclings.map((recycling, index) => (\n           <div key={index} className=\"relative m-4\">\n             <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n-            {imageUrls[recycling.type] && (\n+              {imageUrls[recycling.type] && (\n                 <img\n                   src={imageUrls[recycling.type]} // URL de la imagen basada en el tipo\n                   alt={`${recycling.type} image`}\n                   className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n-                />)}\n+                />\n+              )}\n               <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n-              <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n-              <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n+              <p className=\"text-gray-700 text-sm mb-2\">\n+                Price: ${recycling.pricePound}\n+              </p>\n+              <p className=\"text-gray-500 text-sm mb-4\">\n+                Ubication: {recycling.ubication}\n+              </p>\n               <div className=\"flex justify-around mt-4\">\n+                {selectedRecycling && (\n+                  <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center\">\n+                    <div className=\" bg-white rounded-lg p-6 w-96 max-w-lg md:max-w-xl lg:max-w-2xl\">\n+                      <h2 className=\"text-xl mb-4\">Recycling Overview</h2>\n+                      <p>\n+                        <strong>Type:</strong> {selectedRecycling.type}\n+                      </p>\n+                      <p>\n+                        <strong>Ubication:</strong>{\" \"}\n+                        {selectedRecycling.ubication}\n+                      </p>\n+                      <p>\n+                        <strong>Weight:</strong> {selectedRecycling.weight}\n+                      </p>\n+                      <p>\n+                        <strong>Price Per Pound:</strong>{\" \"}\n+                        {selectedRecycling.pricePound}\n+                      </p>\n+                      <p>\n+                        <strong>Observations:</strong>{\" \"}\n+                        {selectedRecycling.observations}\n+                      </p>\n+                      <p>\n+                        <strong>Available:</strong>{\" \"}\n+                        {selectedRecycling.available ? \"S√≠\" : \"No\"}\n+                      </p>\n+                      <div className=\"flex justify-center mt-4 space-x-4\">\n+                        <button\n+                          onClick={handleCloseModal}\n+                          className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\"\n+                        >\n+                          <span>üëÅÔ∏è</span>\n+                          <span>See</span>\n+                        </button>\n+                      </div>\n+                    </div>\n+                  </div>\n+                )}\n \n-          {selectedRecycling && (\n-          <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center\">\n-            <div className=\" bg-white rounded-lg p-6 w-96 max-w-lg md:max-w-xl lg:max-w-2xl\">\n-              <h2 className=\"text-xl mb-4\">Recycling Overview</h2>\n-              <p><strong>Type:</strong> {selectedRecycling.type}</p>\n-              <p><strong>Ubication:</strong> {selectedRecycling.ubication}</p>\n-              <p><strong>Weight:</strong> {selectedRecycling.weight}</p>\n-              <p><strong>Price Per Pound:</strong> {selectedRecycling.pricePound}</p>\n-              <p><strong>Observations:</strong> {selectedRecycling.observations}</p>\n-              <p><strong>Available:</strong> {selectedRecycling.available ? \"S√≠\" : \"No\"}</p>\n-              <div className=\"flex justify-center mt-4 space-x-4\">\n-              <button onClick={handleCloseModal} className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\"><span>üëÅÔ∏è</span>\n-              <span>See</span></button>\n-              </div>\n-            </div>\n-          </div>\n-        )}\n-\n-\n                 <a\n                   href=\"#\"\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n                   <span>üëÅÔ∏è</span>\n                   <span>See</span>\n                 </a>\n \n-\n-\n                 <button\n                   onClick={() => toggleChat(recycling.ubication)} // Pasa el ID del reciclaje al hacer clic\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n@@ -139,9 +172,14 @@\n               </div>\n             </div>\n \n             {/* Mostrar el chat si est√° abierto */}\n-            {openChatId === recycling.ubication && <Chat recyclingId={recycling.ubication} onClose={() => toggleChat(recycling.ubication)} />}\n+            {openChatId === recycling.ubication && (\n+              <Chat\n+                recyclingId={recycling.ubication}\n+                onClose={() => toggleChat(recycling.ubication)}\n+              />\n+            )}\n           </div>\n         ))\n       ) : (\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n"
                },
                {
                    "date": 1728868537597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -117,9 +117,9 @@\n               <div className=\"flex justify-around mt-4\">\n                 {selectedRecycling && (\n                   <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center\">\n                     <div className=\" bg-white rounded-lg p-6 w-96 max-w-lg md:max-w-xl lg:max-w-2xl\">\n-                      <h2 className=\"text-xl mb-4\">Recycling Overview</h2>\n+                      <h2 className=\"text-xl mb-4\">What you are going to buy</h2>\n                       <p>\n                         <strong>Type:</strong> {selectedRecycling.type}\n                       </p>\n                       <p>\n"
                },
                {
                    "date": 1728868759078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,15 +141,16 @@\n                         <strong>Available:</strong>{\" \"}\n                         {selectedRecycling.available ? \"S√≠\" : \"No\"}\n                       </p>\n                       <div className=\"flex justify-center mt-4 space-x-4\">\n-                        <button\n-                          onClick={handleCloseModal}\n+                        <a\n+                          href=\"#\"\n+                          onClick={() => setSelectedRecycling(recycling)}\n                           className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\"\n                         >\n                           <span>üëÅÔ∏è</span>\n                           <span>See</span>\n-                        </button>\n+                        </a>\n                       </div>\n                     </div>\n                   </div>\n                 )}\n"
                },
                {
                    "date": 1728869013153,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,10 +142,9 @@\n                         {selectedRecycling.available ? \"S√≠\" : \"No\"}\n                       </p>\n                       <div className=\"flex justify-center mt-4 space-x-4\">\n                         <a\n-                          href=\"#\"\n-                          onClick={() => setSelectedRecycling(recycling)}\n+                          onClick={handleCloseModal}\n                           className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\"\n                         >\n                           <span>üëÅÔ∏è</span>\n                           <span>See</span>\n"
                },
                {
                    "date": 1728869041310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -141,15 +141,15 @@\n                         <strong>Available:</strong>{\" \"}\n                         {selectedRecycling.available ? \"S√≠\" : \"No\"}\n                       </p>\n                       <div className=\"flex justify-center mt-4 space-x-4\">\n-                        <a\n+                        <button\n                           onClick={handleCloseModal}\n                           className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\"\n                         >\n                           <span>üëÅÔ∏è</span>\n                           <span>See</span>\n-                        </a>\n+                        </button>\n                       </div>\n                     </div>\n                   </div>\n                 )}\n"
                },
                {
                    "date": 1728869111873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,16 +153,8 @@\n                     </div>\n                   </div>\n                 )}\n \n-                <a\n-                  href=\"#\"\n-                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-                >\n-                  <span>üëÅÔ∏è</span>\n-                  <span>See</span>\n-                </a>\n-\n                 <button\n                   onClick={() => toggleChat(recycling.ubication)} // Pasa el ID del reciclaje al hacer clic\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n"
                },
                {
                    "date": 1728869239283,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,6 @@\n import React, { useState, useEffect } from \"react\";\n-import {\n-  Aptos,\n-  AptosConfig,\n-  MAX_EXTRA_FIELD_BYTES,\n-  Network,\n-} from \"@aptos-labs/ts-sdk\";\n+import { Aptos, AptosConfig, MAX_EXTRA_FIELD_BYTES, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n \n interface Recycling {\n@@ -18,25 +13,22 @@\n   available: boolean;\n }\n \n const imageUrls: Record<string, string> = {\n-  Metals: \"/metals.jpeg\",\n-  Plastics: \"/plastic.jpeg\",\n-  Cardboard: \"/cardboard.jpeg\",\n-  Glasses: \"/glass.jpeg\",\n+  Metals: \"/metals.jpeg\",     \n+  Plastics: \"/plastic.jpeg\",   \n+  Cardboard: \"/cardboard.jpeg\",  \n+  Glasses: \"/glass.jpeg\",        \n };\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n-const ADDRESS =\n-  \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n+const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n \n const CardContainer = () => {\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n   const [openChatId, setOpenChatId] = useState<string | null>(null); // Cambiado para almacenar el ID del reciclaje cuyo chat est√° abierto\n   const [loading, setLoading] = useState(true); // Estado para controlar la carga\n-  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(\n-    null\n-  );\n+  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n \n   const handleCloseModal = () => {\n     setSelectedRecycling(null);\n   };\n@@ -49,29 +41,27 @@\n \n   const getRecycling = async () => {\n     setLoading(true); // Activar el estado de carga\n     const payload = {\n-      function:\n-        `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+      function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n       functionArguments: [`${account?.address}`],\n     };\n     try {\n       const result: any = await aptos.view({ payload });\n       console.log(\"Resultado de reciclajes:\", result[0]);\n \n       if (Array.isArray(result) && result.length > 0) {\n-        const extractedRecyclings: Recycling[] = result.flatMap(\n-          (recyclingArray: any[]) =>\n-            recyclingArray.map((recycling: any) => ({\n-              owner: recycling.owner,\n-              type: recycling.type || \"N/A\",\n-              ubication: recycling.ubication || \"N/A\",\n-              weight: recycling.weight || 0,\n-              pricePound: recycling.pricePound || 0,\n-              observations: recycling.observations || \"N/A\",\n-              chats: recycling.chats || [],\n-              available: recycling.available || false,\n-            }))\n+        const extractedRecyclings: Recycling[] = result.flatMap((recyclingArray: any[]) =>\n+          recyclingArray.map((recycling: any) => ({\n+            owner: recycling.owner,\n+            type: recycling.type || \"N/A\",\n+            ubication: recycling.ubication || \"N/A\",\n+            weight: recycling.weight || 0,\n+            pricePound: recycling.pricePound || 0,\n+            observations: recycling.observations || \"N/A\",\n+            chats: recycling.chats || [],\n+            available: recycling.available || false,\n+          }))\n         );\n \n         setRecyclings(extractedRecyclings);\n       } else {\n@@ -91,70 +81,32 @@\n   return (\n     <div className=\"flex justify-center flex-wrap\">\n       {loading ? ( // Mostrar animaci√≥n de carga\n         <div className=\"flex flex-col items-center justify-center h-screen\">\n-          <div className=\"loader\"></div>{\" \"}\n-          {/* Estilo para la animaci√≥n de carga */}\n+          <div className=\"loader\"></div> {/* Estilo para la animaci√≥n de carga */}\n           <p className=\"mt-4 text-lg\">Cargando reciclajes...</p>\n         </div>\n       ) : recyclings.length > 0 ? (\n         recyclings.map((recycling, index) => (\n           <div key={index} className=\"relative m-4\">\n             <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n-              {imageUrls[recycling.type] && (\n+            {imageUrls[recycling.type] && (\n                 <img\n                   src={imageUrls[recycling.type]} // URL de la imagen basada en el tipo\n                   alt={`${recycling.type} image`}\n                   className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n-                />\n-              )}\n+                />)}\n               <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n-              <p className=\"text-gray-700 text-sm mb-2\">\n-                Price: ${recycling.pricePound}\n-              </p>\n-              <p className=\"text-gray-500 text-sm mb-4\">\n-                Ubication: {recycling.ubication}\n-              </p>\n+              <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n+              <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n               <div className=\"flex justify-around mt-4\">\n-                {selectedRecycling && (\n-                  <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center\">\n-                    <div className=\" bg-white rounded-lg p-6 w-96 max-w-lg md:max-w-xl lg:max-w-2xl\">\n-                      <h2 className=\"text-xl mb-4\">What you are going to buy</h2>\n-                      <p>\n-                        <strong>Type:</strong> {selectedRecycling.type}\n-                      </p>\n-                      <p>\n-                        <strong>Ubication:</strong>{\" \"}\n-                        {selectedRecycling.ubication}\n-                      </p>\n-                      <p>\n-                        <strong>Weight:</strong> {selectedRecycling.weight}\n-                      </p>\n-                      <p>\n-                        <strong>Price Per Pound:</strong>{\" \"}\n-                        {selectedRecycling.pricePound}\n-                      </p>\n-                      <p>\n-                        <strong>Observations:</strong>{\" \"}\n-                        {selectedRecycling.observations}\n-                      </p>\n-                      <p>\n-                        <strong>Available:</strong>{\" \"}\n-                        {selectedRecycling.available ? \"S√≠\" : \"No\"}\n-                      </p>\n-                      <div className=\"flex justify-center mt-4 space-x-4\">\n-                        <button\n-                          onClick={handleCloseModal}\n-                          className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\"\n-                        >\n-                          <span>üëÅÔ∏è</span>\n-                          <span>See</span>\n-                        </button>\n-                      </div>\n-                    </div>\n-                  </div>\n-                )}\n-\n+                <a\n+                  href=\"#\"\n+                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+                >\n+                  <span>üëÅÔ∏è</span>\n+                  <span>See</span>\n+                </a>\n                 <button\n                   onClick={() => toggleChat(recycling.ubication)} // Pasa el ID del reciclaje al hacer clic\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n@@ -164,14 +116,9 @@\n               </div>\n             </div>\n \n             {/* Mostrar el chat si est√° abierto */}\n-            {openChatId === recycling.ubication && (\n-              <Chat\n-                recyclingId={recycling.ubication}\n-                onClose={() => toggleChat(recycling.ubication)}\n-              />\n-            )}\n+            {openChatId === recycling.ubication && <Chat recyclingId={recycling.ubication} onClose={() => toggleChat(recycling.ubication)} />}\n           </div>\n         ))\n       ) : (\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n"
                },
                {
                    "date": 1728869488904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useState, useEffect } from \"react\";\n-import { Aptos, AptosConfig, MAX_EXTRA_FIELD_BYTES, Network } from \"@aptos-labs/ts-sdk\";\n+import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n \n interface Recycling {\n"
                },
                {
                    "date": 1728871330424,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,8 @@\n       functionArguments: [`${account?.address}`],\n     };\n     try {\n       const result: any = await aptos.view({ payload });\n-      console.log(\"Resultado de reciclajes:\", result[0]);\n \n       if (Array.isArray(result) && result.length > 0) {\n         const extractedRecyclings: Recycling[] = result.flatMap((recyclingArray: any[]) =>\n           recyclingArray.map((recycling: any) => ({\n@@ -98,15 +97,15 @@\n               <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n               <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n               <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n               <div className=\"flex justify-around mt-4\">\n-                <a\n-                  href=\"#\"\n+                <button\n+                  onClick={() => setSelectedRecycling(recycling)} // Pasa el reciclaje al hacer clic\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n                   <span>üëÅÔ∏è</span>\n                   <span>See</span>\n-                </a>\n+                </button>\n                 <button\n                   onClick={() => toggleChat(recycling.ubication)} // Pasa el ID del reciclaje al hacer clic\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n@@ -122,8 +121,34 @@\n         ))\n       ) : (\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n       )}\n+      {selectedRecycling && (\n+        <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n+          <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n+            <h2 className=\"text-2xl font-bold mb-4 text-center\">{selectedRecycling.type}</h2>\n+            <p><strong>Ubication:</strong> {selectedRecycling.ubication}</p>\n+            <p><strong>Weight:</strong> {selectedRecycling.weight} kg</p>\n+            <p><strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}</p>\n+            <p><strong>Observations:</strong> {selectedRecycling.observations}</p>\n+            <p><strong>Available:</strong> {selectedRecycling.available ? \"Yes\" : \"No\"}</p>\n+            <button\n+              onClick={handleCloseModal}\n+              className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n+            >\n+              ‚úñ\n+            </button>\n+            <div className=\"flex justify-center mt-6\">\n+              <button\n+                onClick={handleCloseModal}\n+                className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n+              >\n+                Close\n+              </button>\n+            </div>\n+          </div>\n+        </div>\n+      )}\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1728871417540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -144,8 +144,16 @@\n               >\n                 Close\n               </button>\n             </div>\n+            <div className=\"flex justify-center mt-6\">\n+              <button\n+                onClick={handleCloseModal}\n+                className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n+              >\n+                Buy\n+              </button>\n+            </div>\n           </div>\n         </div>\n       )}\n     </div>\n"
                },
                {
                    "date": 1728871495118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,8 +136,9 @@\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n               ‚úñ\n             </button>\n+            <div>\n             <div className=\"flex justify-center mt-6\">\n               <button\n                 onClick={handleCloseModal}\n                 className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n@@ -152,8 +153,9 @@\n               >\n                 Buy\n               </button>\n             </div>\n+            </div>\n           </div>\n         </div>\n       )}\n     </div>\n"
                },
                {
                    "date": 1728871590981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,165 @@\n+import React, { useState, useEffect } from \"react\";\n+import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n+import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n+import Chat from \"./chat\";\n+\n+interface Recycling {\n+  type: string;\n+  ubication: string;\n+  weight: number;\n+  pricePound: number;\n+  observations: string;\n+  chats: [];\n+  available: boolean;\n+}\n+\n+const imageUrls: Record<string, string> = {\n+  Metals: \"/metals.jpeg\",     \n+  Plastics: \"/plastic.jpeg\",   \n+  Cardboard: \"/cardboard.jpeg\",  \n+  Glasses: \"/glass.jpeg\",        \n+};\n+export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n+const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n+\n+const CardContainer = () => {\n+  const { account } = useWallet();\n+  const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n+  const [openChatId, setOpenChatId] = useState<string | null>(null); // Cambiado para almacenar el ID del reciclaje cuyo chat est√° abierto\n+  const [loading, setLoading] = useState(true); // Estado para controlar la carga\n+  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n+\n+  const handleCloseModal = () => {\n+    setSelectedRecycling(null);\n+  };\n+\n+  useEffect(() => {\n+    if (account) {\n+      getRecycling();\n+    }\n+  }, [account]);\n+\n+  const getRecycling = async () => {\n+    setLoading(true); // Activar el estado de carga\n+    const payload = {\n+      function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+      functionArguments: [`${account?.address}`],\n+    };\n+    try {\n+      const result: any = await aptos.view({ payload });\n+\n+      if (Array.isArray(result) && result.length > 0) {\n+        const extractedRecyclings: Recycling[] = result.flatMap((recyclingArray: any[]) =>\n+          recyclingArray.map((recycling: any) => ({\n+            owner: recycling.owner,\n+            type: recycling.type || \"N/A\",\n+            ubication: recycling.ubication || \"N/A\",\n+            weight: recycling.weight || 0,\n+            pricePound: recycling.pricePound || 0,\n+            observations: recycling.observations || \"N/A\",\n+            chats: recycling.chats || [],\n+            available: recycling.available || false,\n+          }))\n+        );\n+\n+        setRecyclings(extractedRecyclings);\n+      } else {\n+        console.error(\"No se encontraron reciclajes\");\n+      }\n+    } catch (error) {\n+      console.error(\"Error al obtener reciclajes:\", error);\n+    } finally {\n+      setLoading(false); // Desactivar el estado de carga\n+    }\n+  };\n+\n+  const toggleChat = (recyclingId: string) => {\n+    setOpenChatId(openChatId === recyclingId ? null : recyclingId); // Cambia el estado del chat para un solo reciclaje\n+  };\n+\n+  return (\n+    <div className=\"flex justify-center flex-wrap\">\n+      {loading ? ( // Mostrar animaci√≥n de carga\n+        <div className=\"flex flex-col items-center justify-center h-screen\">\n+          <div className=\"loader\"></div> {/* Estilo para la animaci√≥n de carga */}\n+          <p className=\"mt-4 text-lg\">Cargando reciclajes...</p>\n+        </div>\n+      ) : recyclings.length > 0 ? (\n+        recyclings.map((recycling, index) => (\n+          <div key={index} className=\"relative m-4\">\n+            <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n+            {imageUrls[recycling.type] && (\n+                <img\n+                  src={imageUrls[recycling.type]} // URL de la imagen basada en el tipo\n+                  alt={`${recycling.type} image`}\n+                  className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n+                />)}\n+              <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n+              <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n+              <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n+              <div className=\"flex justify-around mt-4\">\n+                <button\n+                  onClick={() => setSelectedRecycling(recycling)} // Pasa el reciclaje al hacer clic\n+                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+                >\n+                  <span>üëÅÔ∏è</span>\n+                  <span>See</span>\n+                </button>\n+                <button\n+                  onClick={() => toggleChat(recycling.ubication)} // Pasa el ID del reciclaje al hacer clic\n+                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+                >\n+                  <span>üí¨</span>\n+                  <span>Chat</span>\n+                </button>\n+              </div>\n+            </div>\n+\n+            {/* Mostrar el chat si est√° abierto */}\n+            {openChatId === recycling.ubication && <Chat recyclingId={recycling.ubication} onClose={() => toggleChat(recycling.ubication)} />}\n+          </div>\n+        ))\n+      ) : (\n+        <p className=\"text-center\">No hay reciclajes disponibles</p>\n+      )}\n+      {selectedRecycling && (\n+        <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n+          <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n+            <h2 className=\"text-2xl font-bold mb-4 text-center\">{selectedRecycling.type}</h2>\n+            <p><strong>Ubication:</strong> {selectedRecycling.ubication}</p>\n+            <p><strong>Weight:</strong> {selectedRecycling.weight} kg</p>\n+            <p><strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}</p>\n+            <p><strong>Observations:</strong> {selectedRecycling.observations}</p>\n+            <p><strong>Available:</strong> {selectedRecycling.available ? \"Yes\" : \"No\"}</p>\n+            <button\n+              onClick={handleCloseModal}\n+              className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n+            >\n+              ‚úñ\n+            </button>\n+            <div>\n+            <div className=\"flex justify-center mt-6\">\n+              <button\n+                onClick={handleCloseModal}\n+                className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n+              >\n+                Close\n+              </button>\n+            </div>\n+            <div className=\"flex justify-center mt-6\">\n+              <button\n+                onClick={handleCloseModal}\n+                className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n+              >\n+                Buy\n+              </button>\n+            </div>\n+            </div>\n+          </div>\n+        </div>\n+      )}\n+    </div>\n+  );\n+};\n+\n+export default CardContainer;\n"
                },
                {
                    "date": 1728871616266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -121,8 +121,9 @@\n         ))\n       ) : (\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n       )}\n+      \n       {selectedRecycling && (\n         <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n           <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n             <h2 className=\"text-2xl font-bold mb-4 text-center\">{selectedRecycling.type}</h2>\n@@ -162,169 +163,4 @@\n   );\n };\n \n export default CardContainer;\n-import React, { useState, useEffect } from \"react\";\n-import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n-import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n-import Chat from \"./chat\";\n-\n-interface Recycling {\n-  type: string;\n-  ubication: string;\n-  weight: number;\n-  pricePound: number;\n-  observations: string;\n-  chats: [];\n-  available: boolean;\n-}\n-\n-const imageUrls: Record<string, string> = {\n-  Metals: \"/metals.jpeg\",     \n-  Plastics: \"/plastic.jpeg\",   \n-  Cardboard: \"/cardboard.jpeg\",  \n-  Glasses: \"/glass.jpeg\",        \n-};\n-export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n-const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n-\n-const CardContainer = () => {\n-  const { account } = useWallet();\n-  const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n-  const [openChatId, setOpenChatId] = useState<string | null>(null); // Cambiado para almacenar el ID del reciclaje cuyo chat est√° abierto\n-  const [loading, setLoading] = useState(true); // Estado para controlar la carga\n-  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n-\n-  const handleCloseModal = () => {\n-    setSelectedRecycling(null);\n-  };\n-\n-  useEffect(() => {\n-    if (account) {\n-      getRecycling();\n-    }\n-  }, [account]);\n-\n-  const getRecycling = async () => {\n-    setLoading(true); // Activar el estado de carga\n-    const payload = {\n-      function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n-      functionArguments: [`${account?.address}`],\n-    };\n-    try {\n-      const result: any = await aptos.view({ payload });\n-\n-      if (Array.isArray(result) && result.length > 0) {\n-        const extractedRecyclings: Recycling[] = result.flatMap((recyclingArray: any[]) =>\n-          recyclingArray.map((recycling: any) => ({\n-            owner: recycling.owner,\n-            type: recycling.type || \"N/A\",\n-            ubication: recycling.ubication || \"N/A\",\n-            weight: recycling.weight || 0,\n-            pricePound: recycling.pricePound || 0,\n-            observations: recycling.observations || \"N/A\",\n-            chats: recycling.chats || [],\n-            available: recycling.available || false,\n-          }))\n-        );\n-\n-        setRecyclings(extractedRecyclings);\n-      } else {\n-        console.error(\"No se encontraron reciclajes\");\n-      }\n-    } catch (error) {\n-      console.error(\"Error al obtener reciclajes:\", error);\n-    } finally {\n-      setLoading(false); // Desactivar el estado de carga\n-    }\n-  };\n-\n-  const toggleChat = (recyclingId: string) => {\n-    setOpenChatId(openChatId === recyclingId ? null : recyclingId); // Cambia el estado del chat para un solo reciclaje\n-  };\n-\n-  return (\n-    <div className=\"flex justify-center flex-wrap\">\n-      {loading ? ( // Mostrar animaci√≥n de carga\n-        <div className=\"flex flex-col items-center justify-center h-screen\">\n-          <div className=\"loader\"></div> {/* Estilo para la animaci√≥n de carga */}\n-          <p className=\"mt-4 text-lg\">Cargando reciclajes...</p>\n-        </div>\n-      ) : recyclings.length > 0 ? (\n-        recyclings.map((recycling, index) => (\n-          <div key={index} className=\"relative m-4\">\n-            <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n-            {imageUrls[recycling.type] && (\n-                <img\n-                  src={imageUrls[recycling.type]} // URL de la imagen basada en el tipo\n-                  alt={`${recycling.type} image`}\n-                  className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n-                />)}\n-              <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n-              <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n-              <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n-              <div className=\"flex justify-around mt-4\">\n-                <button\n-                  onClick={() => setSelectedRecycling(recycling)} // Pasa el reciclaje al hacer clic\n-                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-                >\n-                  <span>üëÅÔ∏è</span>\n-                  <span>See</span>\n-                </button>\n-                <button\n-                  onClick={() => toggleChat(recycling.ubication)} // Pasa el ID del reciclaje al hacer clic\n-                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-                >\n-                  <span>üí¨</span>\n-                  <span>Chat</span>\n-                </button>\n-              </div>\n-            </div>\n-\n-            {/* Mostrar el chat si est√° abierto */}\n-            {openChatId === recycling.ubication && <Chat recyclingId={recycling.ubication} onClose={() => toggleChat(recycling.ubication)} />}\n-          </div>\n-        ))\n-      ) : (\n-        <p className=\"text-center\">No hay reciclajes disponibles</p>\n-      )}\n-      {selectedRecycling && (\n-        <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n-          <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n-            <h2 className=\"text-2xl font-bold mb-4 text-center\">{selectedRecycling.type}</h2>\n-            <p><strong>Ubication:</strong> {selectedRecycling.ubication}</p>\n-            <p><strong>Weight:</strong> {selectedRecycling.weight} kg</p>\n-            <p><strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}</p>\n-            <p><strong>Observations:</strong> {selectedRecycling.observations}</p>\n-            <p><strong>Available:</strong> {selectedRecycling.available ? \"Yes\" : \"No\"}</p>\n-            <button\n-              onClick={handleCloseModal}\n-              className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n-            >\n-              ‚úñ\n-            </button>\n-            <div>\n-            <div className=\"flex justify-center mt-6\">\n-              <button\n-                onClick={handleCloseModal}\n-                className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n-              >\n-                Close\n-              </button>\n-            </div>\n-            <div className=\"flex justify-center mt-6\">\n-              <button\n-                onClick={handleCloseModal}\n-                className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n-              >\n-                Buy\n-              </button>\n-            </div>\n-            </div>\n-          </div>\n-        </div>\n-      )}\n-    </div>\n-  );\n-};\n-\n-export default CardContainer;\n"
                },
                {
                    "date": 1728871735402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,22 +13,25 @@\n   available: boolean;\n }\n \n const imageUrls: Record<string, string> = {\n-  Metals: \"/metals.jpeg\",     \n-  Plastics: \"/plastic.jpeg\",   \n-  Cardboard: \"/cardboard.jpeg\",  \n-  Glasses: \"/glass.jpeg\",        \n+  Metals: \"/metals.jpeg\",\n+  Plastics: \"/plastic.jpeg\",\n+  Cardboard: \"/cardboard.jpeg\",\n+  Glasses: \"/glass.jpeg\",\n };\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n-const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n+const ADDRESS =\n+  \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n \n const CardContainer = () => {\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n   const [openChatId, setOpenChatId] = useState<string | null>(null); // Cambiado para almacenar el ID del reciclaje cuyo chat est√° abierto\n   const [loading, setLoading] = useState(true); // Estado para controlar la carga\n-  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n+  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(\n+    null\n+  );\n \n   const handleCloseModal = () => {\n     setSelectedRecycling(null);\n   };\n@@ -41,26 +44,28 @@\n \n   const getRecycling = async () => {\n     setLoading(true); // Activar el estado de carga\n     const payload = {\n-      function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+      function:\n+        `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n       functionArguments: [`${account?.address}`],\n     };\n     try {\n       const result: any = await aptos.view({ payload });\n \n       if (Array.isArray(result) && result.length > 0) {\n-        const extractedRecyclings: Recycling[] = result.flatMap((recyclingArray: any[]) =>\n-          recyclingArray.map((recycling: any) => ({\n-            owner: recycling.owner,\n-            type: recycling.type || \"N/A\",\n-            ubication: recycling.ubication || \"N/A\",\n-            weight: recycling.weight || 0,\n-            pricePound: recycling.pricePound || 0,\n-            observations: recycling.observations || \"N/A\",\n-            chats: recycling.chats || [],\n-            available: recycling.available || false,\n-          }))\n+        const extractedRecyclings: Recycling[] = result.flatMap(\n+          (recyclingArray: any[]) =>\n+            recyclingArray.map((recycling: any) => ({\n+              owner: recycling.owner,\n+              type: recycling.type || \"N/A\",\n+              ubication: recycling.ubication || \"N/A\",\n+              weight: recycling.weight || 0,\n+              pricePound: recycling.pricePound || 0,\n+              observations: recycling.observations || \"N/A\",\n+              chats: recycling.chats || [],\n+              available: recycling.available || false,\n+            }))\n         );\n \n         setRecyclings(extractedRecyclings);\n       } else {\n@@ -80,24 +85,30 @@\n   return (\n     <div className=\"flex justify-center flex-wrap\">\n       {loading ? ( // Mostrar animaci√≥n de carga\n         <div className=\"flex flex-col items-center justify-center h-screen\">\n-          <div className=\"loader\"></div> {/* Estilo para la animaci√≥n de carga */}\n+          <div className=\"loader\"></div>{\" \"}\n+          {/* Estilo para la animaci√≥n de carga */}\n           <p className=\"mt-4 text-lg\">Cargando reciclajes...</p>\n         </div>\n       ) : recyclings.length > 0 ? (\n         recyclings.map((recycling, index) => (\n           <div key={index} className=\"relative m-4\">\n             <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n-            {imageUrls[recycling.type] && (\n+              {imageUrls[recycling.type] && (\n                 <img\n                   src={imageUrls[recycling.type]} // URL de la imagen basada en el tipo\n                   alt={`${recycling.type} image`}\n                   className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n-                />)}\n+                />\n+              )}\n               <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n-              <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n-              <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n+              <p className=\"text-gray-700 text-sm mb-2\">\n+                Price: ${recycling.pricePound}\n+              </p>\n+              <p className=\"text-gray-500 text-sm mb-4\">\n+                Ubication: {recycling.ubication}\n+              </p>\n               <div className=\"flex justify-around mt-4\">\n                 <button\n                   onClick={() => setSelectedRecycling(recycling)} // Pasa el reciclaje al hacer clic\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n@@ -115,48 +126,66 @@\n               </div>\n             </div>\n \n             {/* Mostrar el chat si est√° abierto */}\n-            {openChatId === recycling.ubication && <Chat recyclingId={recycling.ubication} onClose={() => toggleChat(recycling.ubication)} />}\n+            {openChatId === recycling.ubication && (\n+              <Chat\n+                recyclingId={recycling.ubication}\n+                onClose={() => toggleChat(recycling.ubication)}\n+              />\n+            )}\n           </div>\n         ))\n       ) : (\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n       )}\n-      \n+\n       {selectedRecycling && (\n         <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n           <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n-            <h2 className=\"text-2xl font-bold mb-4 text-center\">{selectedRecycling.type}</h2>\n-            <p><strong>Ubication:</strong> {selectedRecycling.ubication}</p>\n-            <p><strong>Weight:</strong> {selectedRecycling.weight} kg</p>\n-            <p><strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}</p>\n-            <p><strong>Observations:</strong> {selectedRecycling.observations}</p>\n-            <p><strong>Available:</strong> {selectedRecycling.available ? \"Yes\" : \"No\"}</p>\n+            <h2 className=\"text-2xl font-bold mb-4 text-center\">\n+              {selectedRecycling.type}\n+            </h2>\n+            <p>\n+              <strong>Ubication:</strong> {selectedRecycling.ubication}\n+            </p>\n+            <p>\n+              <strong>Weight:</strong> {selectedRecycling.weight} kg\n+            </p>\n+            <p>\n+              <strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}\n+            </p>\n+            <p>\n+              <strong>Observations:</strong> {selectedRecycling.observations}\n+            </p>\n+            <p>\n+              <strong>Available:</strong>{\" \"}\n+              {selectedRecycling.available ? \"Yes\" : \"No\"}\n+            </p>\n             <button\n               onClick={handleCloseModal}\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n               ‚úñ\n             </button>\n-            <div>\n-            <div className=\"flex justify-center mt-6\">\n-              <button\n-                onClick={handleCloseModal}\n-                className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n-              >\n-                Close\n-              </button>\n+            <div className=\"flex flex-row\">\n+              <div className=\"flex justify-center mt-6\">\n+                <button\n+                  onClick={handleCloseModal}\n+                  className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n+                >\n+                  Close\n+                </button>\n+              </div>\n+              <div className=\"flex justify-center mt-6\">\n+                <button\n+                  onClick={handleCloseModal}\n+                  className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n+                >\n+                  Buy\n+                </button>\n+              </div>\n             </div>\n-            <div className=\"flex justify-center mt-6\">\n-              <button\n-                onClick={handleCloseModal}\n-                className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n-              >\n-                Buy\n-              </button>\n-            </div>\n-            </div>\n           </div>\n         </div>\n       )}\n     </div>\n"
                },
                {
                    "date": 1728871764007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n               ‚úñ\n             </button>\n-            <div className=\"flex flex-row\">\n+            <div className=\"flex flex-row justify-center justify-around\">\n               <div className=\"flex justify-center mt-6\">\n                 <button\n                   onClick={handleCloseModal}\n                   className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n"
                },
                {
                    "date": 1728871769967,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n               ‚úñ\n             </button>\n-            <div className=\"flex flex-row justify-center justify-around\">\n+            <div className=\"flex flex-row justify-around\">\n               <div className=\"flex justify-center mt-6\">\n                 <button\n                   onClick={handleCloseModal}\n                   className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n"
                },
                {
                    "date": 1728871950761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n               ‚úñ\n             </button>\n-            <div className=\"flex flex-row justify-around\">\n+            <div className=\"flex flex-row justify-around px-10\">\n               <div className=\"flex justify-center mt-6\">\n                 <button\n                   onClick={handleCloseModal}\n                   className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n"
                },
                {
                    "date": 1728871970076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n               ‚úñ\n             </button>\n-            <div className=\"flex flex-row justify-around px-10\">\n+            <div className=\"flex flex-row justify-around px-0\">\n               <div className=\"flex justify-center mt-6\">\n                 <button\n                   onClick={handleCloseModal}\n                   className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n"
                },
                {
                    "date": 1728872038915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,13 +166,13 @@\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n               ‚úñ\n             </button>\n-            <div className=\"flex flex-row justify-around px-0\">\n+            <div className=\"flex flex-row justify-around mt-4\">\n               <div className=\"flex justify-center mt-6\">\n                 <button\n                   onClick={handleCloseModal}\n-                  className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n+                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n                   Close\n                 </button>\n               </div>\n"
                },
                {
                    "date": 1728872060660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -178,9 +178,9 @@\n               </div>\n               <div className=\"flex justify-center mt-6\">\n                 <button\n                   onClick={handleCloseModal}\n-                  className=\"bg-blue-600 text-white px-6 py-2 rounded-lg hover:bg-blue-700 transition-all\"\n+                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n                   Buy\n                 </button>\n               </div>\n"
                },
                {
                    "date": 1728872097316,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n       )}\n \n       {selectedRecycling && (\n-        <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n+        <div className=\" flex justify-center items-center bg-black bg-opacity-50 z-50\">\n           <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n             <h2 className=\"text-2xl font-bold mb-4 text-center\">\n               {selectedRecycling.type}\n             </h2>\n"
                },
                {
                    "date": 1728872111247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n       )}\n \n       {selectedRecycling && (\n-        <div className=\" flex justify-center items-center bg-black bg-opacity-50 z-50\">\n+        <div className=\"fixed flex justify-center items-center bg-black bg-opacity-50 z-50\">\n           <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n             <h2 className=\"text-2xl font-bold mb-4 text-center\">\n               {selectedRecycling.type}\n             </h2>\n"
                },
                {
                    "date": 1728872126799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n       )}\n \n       {selectedRecycling && (\n-        <div className=\"fixed flex justify-center items-center bg-black bg-opacity-50 z-50\">\n+        <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n           <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n             <h2 className=\"text-2xl font-bold mb-4 text-center\">\n               {selectedRecycling.type}\n             </h2>\n"
                },
                {
                    "date": 1728872147881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n       )}\n \n       {selectedRecycling && (\n-        <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n+        <div className=\"fixed inset-11 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n           <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n             <h2 className=\"text-2xl font-bold mb-4 text-center\">\n               {selectedRecycling.type}\n             </h2>\n"
                },
                {
                    "date": 1728872167248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n       )}\n \n       {selectedRecycling && (\n-        <div className=\"fixed inset-11 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n+        <div className=\"fixed inset-96 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n           <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n             <h2 className=\"text-2xl font-bold mb-4 text-center\">\n               {selectedRecycling.type}\n             </h2>\n"
                },
                {
                    "date": 1728872180267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,9 +139,9 @@\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n       )}\n \n       {selectedRecycling && (\n-        <div className=\"fixed inset-96 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n+        <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n           <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n             <h2 className=\"text-2xl font-bold mb-4 text-center\">\n               {selectedRecycling.type}\n             </h2>\n"
                },
                {
                    "date": 1728872241152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,9 +166,9 @@\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n               ‚úñ\n             </button>\n-            <div className=\"flex flex-row justify-around mt-4\">\n+            <div className=\"flex flex-row justify-around mt-4 max-w-lg\">\n               <div className=\"flex justify-center mt-6\">\n                 <button\n                   onClick={handleCloseModal}\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n"
                },
                {
                    "date": 1728872294771,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -166,18 +166,18 @@\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n               ‚úñ\n             </button>\n-            <div className=\"flex flex-row justify-around mt-4 max-w-lg\">\n-              <div className=\"flex justify-center mt-6\">\n+            <div className=\"flex flex-row justify-around mt-4\">\n+              <div className=\"flex justify-center\">\n                 <button\n                   onClick={handleCloseModal}\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n                   Close\n                 </button>\n               </div>\n-              <div className=\"flex justify-center mt-6\">\n+              <div className=\"flex justify-center\">\n                 <button\n                   onClick={handleCloseModal}\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n"
                },
                {
                    "date": 1728872310548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -167,17 +167,17 @@\n             >\n               ‚úñ\n             </button>\n             <div className=\"flex flex-row justify-around mt-4\">\n-              <div className=\"flex justify-center\">\n+              <div className=\"flex justify-center mt-6\">\n                 <button\n                   onClick={handleCloseModal}\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n                   Close\n                 </button>\n               </div>\n-              <div className=\"flex justify-center\">\n+              <div className=\"flex justify-center mt-6\">\n                 <button\n                   onClick={handleCloseModal}\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n"
                },
                {
                    "date": 1728872471346,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -140,9 +140,9 @@\n       )}\n \n       {selectedRecycling && (\n         <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n-          <div className=\"bg-white rounded-lg shadow-lg w-full max-w-lg p-6 relative\">\n+          <div className=\"bg-white rounded-lg shadow-lg w-full max-w-sm p-6 relative\">\n             <h2 className=\"text-2xl font-bold mb-4 text-center\">\n               {selectedRecycling.type}\n             </h2>\n             <p>\n"
                },
                {
                    "date": 1728927576537,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import React, { useState, useEffect } from \"react\";\n import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n+import Data from \"@/utils/data\";\n \n interface Recycling {\n   type: string;\n   ubication: string;\n"
                },
                {
                    "date": 1728927600441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from \"react\";\n import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n-import Data from \"@/utils/data\";\n+import ADRESS from \"@/utils/data\";\n \n interface Recycling {\n   type: string;\n   ubication: string;\n"
                },
                {
                    "date": 1728927612988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,10 @@\n   Cardboard: \"/cardboard.jpeg\",\n   Glasses: \"/glass.jpeg\",\n };\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n-const ADDRESS =\n-  \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n+// const ADDRESS =\n+//   \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n \n const CardContainer = () => {\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n"
                },
                {
                    "date": 1728927634286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from \"react\";\n import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n-import ADRESS from \"@/utils/data\";\n+import ADDRESS from \"@/utils/data\";\n \n interface Recycling {\n   type: string;\n   ubication: string;\n"
                },
                {
                    "date": 1728928015581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n   const getRecycling = async () => {\n     setLoading(true); // Activar el estado de carga\n     const payload = {\n       function:\n-        `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+        `${ADDRESS.ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n       functionArguments: [`${account?.address}`],\n     };\n     try {\n       const result: any = await aptos.view({ payload });\n"
                },
                {
                    "date": 1728928024581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n   const getRecycling = async () => {\n     setLoading(true); // Activar el estado de carga\n     const payload = {\n       function:\n-        `${ADDRESS.ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+        `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n       functionArguments: [`${account?.address}`],\n     };\n     try {\n       const result: any = await aptos.view({ payload });\n"
                },
                {
                    "date": 1728928062304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from \"react\";\n import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n-import ADDRESS from \"@/utils/data\";\n+import Data from \"@/utils/data\";\n \n interface Recycling {\n   type: string;\n   ubication: string;\n"
                },
                {
                    "date": 1728928072747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n   const getRecycling = async () => {\n     setLoading(true); // Activar el estado de carga\n     const payload = {\n       function:\n-        `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+        `${Data.ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n       functionArguments: [`${account?.address}`],\n     };\n     try {\n       const result: any = await aptos.view({ payload });\n"
                },
                {
                    "date": 1728928162005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useState, useEffect } from \"react\";\n import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n-import Data from \"@/utils/data\";\n+import ADDRESS from \"@/utils/data\";\n \n interface Recycling {\n   type: string;\n   ubication: string;\n"
                },
                {
                    "date": 1728928172023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n   const getRecycling = async () => {\n     setLoading(true); // Activar el estado de carga\n     const payload = {\n       function:\n-        `${Data.ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+        `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n       functionArguments: [`${account?.address}`],\n     };\n     try {\n       const result: any = await aptos.view({ payload });\n"
                },
                {
                    "date": 1728928256120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,10 +20,8 @@\n   Cardboard: \"/cardboard.jpeg\",\n   Glasses: \"/glass.jpeg\",\n };\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n-// const ADDRESS =\n-//   \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n \n const CardContainer = () => {\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n"
                },
                {
                    "date": 1728951525988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,13 +24,11 @@\n \n const CardContainer = () => {\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n-  const [openChatId, setOpenChatId] = useState<string | null>(null); // Cambiado para almacenar el ID del reciclaje cuyo chat est√° abierto\n-  const [loading, setLoading] = useState(true); // Estado para controlar la carga\n-  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(\n-    null\n-  );\n+  const [openChatId, setOpenChatId] = useState<string | null>(null);\n+  const [loading, setLoading] = useState(true);\n+  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n \n   const handleCloseModal = () => {\n     setSelectedRecycling(null);\n   };\n@@ -41,62 +39,65 @@\n     }\n   }, [account]);\n \n   const getRecycling = async () => {\n-    setLoading(true); // Activar el estado de carga\n-    const payload = {\n-      function:\n-        `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n-      functionArguments: [`${account?.address}`],\n-    };\n+    setLoading(true);\n+    const walletAddresses = [account?.address, \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\"]; // Direcciones de wallet\n+\n     try {\n-      const result: any = await aptos.view({ payload });\n+      const allRecyclings = await Promise.all(walletAddresses.map(async (address) => {\n+        const payload = {\n+          function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+          functionArguments: [address],\n+        };\n \n-      if (Array.isArray(result) && result.length > 0) {\n-        const extractedRecyclings: Recycling[] = result.flatMap(\n-          (recyclingArray: any[]) =>\n-            recyclingArray.map((recycling: any) => ({\n-              owner: recycling.owner,\n-              type: recycling.type || \"N/A\",\n-              ubication: recycling.ubication || \"N/A\",\n-              weight: recycling.weight || 0,\n-              pricePound: recycling.pricePound || 0,\n-              observations: recycling.observations || \"N/A\",\n-              chats: recycling.chats || [],\n-              available: recycling.available || false,\n-            }))\n-        );\n+        const result: any = await aptos.view({ payload });\n+        return Array.isArray(result) ? result.flatMap((recyclingArray: any[]) =>\n+          recyclingArray.map((recycling: any) => ({\n+            owner: recycling.owner,\n+            type: recycling.type || \"N/A\",\n+            ubication: recycling.ubication || \"N/A\",\n+            weight: recycling.weight || 0,\n+            pricePound: recycling.pricePound || 0,\n+            observations: recycling.observations || \"N/A\",\n+            chats: recycling.chats || [],\n+            available: recycling.available || false,\n+          }))\n+        ) : [];\n+      }));\n \n-        setRecyclings(extractedRecyclings);\n+      // Combina los reciclajes de ambas direcciones\n+      const combinedRecyclings = allRecyclings.flat();\n+      if (combinedRecyclings.length > 0) {\n+        setRecyclings(combinedRecyclings);\n       } else {\n         console.error(\"No se encontraron reciclajes\");\n       }\n     } catch (error) {\n       console.error(\"Error al obtener reciclajes:\", error);\n     } finally {\n-      setLoading(false); // Desactivar el estado de carga\n+      setLoading(false);\n     }\n   };\n \n   const toggleChat = (recyclingId: string) => {\n-    setOpenChatId(openChatId === recyclingId ? null : recyclingId); // Cambia el estado del chat para un solo reciclaje\n+    setOpenChatId(openChatId === recyclingId ? null : recyclingId);\n   };\n \n   return (\n     <div className=\"flex justify-center flex-wrap\">\n-      {loading ? ( // Mostrar animaci√≥n de carga\n+      {loading ? (\n         <div className=\"flex flex-col items-center justify-center h-screen\">\n-          <div className=\"loader\"></div>{\" \"}\n-          {/* Estilo para la animaci√≥n de carga */}\n+          <div className=\"loader\"></div>\n           <p className=\"mt-4 text-lg\">Cargando reciclajes...</p>\n         </div>\n       ) : recyclings.length > 0 ? (\n         recyclings.map((recycling, index) => (\n           <div key={index} className=\"relative m-4\">\n             <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n               {imageUrls[recycling.type] && (\n                 <img\n-                  src={imageUrls[recycling.type]} // URL de la imagen basada en el tipo\n+                  src={imageUrls[recycling.type]}\n                   alt={`${recycling.type} image`}\n                   className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n                 />\n               )}\n@@ -108,25 +109,24 @@\n                 Ubication: {recycling.ubication}\n               </p>\n               <div className=\"flex justify-around mt-4\">\n                 <button\n-                  onClick={() => setSelectedRecycling(recycling)} // Pasa el reciclaje al hacer clic\n+                  onClick={() => setSelectedRecycling(recycling)}\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n                   <span>üëÅÔ∏è</span>\n                   <span>See</span>\n                 </button>\n                 <button\n-                  onClick={() => toggleChat(recycling.ubication)} // Pasa el ID del reciclaje al hacer clic\n+                  onClick={() => toggleChat(recycling.ubication)}\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n                   <span>üí¨</span>\n                   <span>Chat</span>\n                 </button>\n               </div>\n             </div>\n \n-            {/* Mostrar el chat si est√° abierto */}\n             {openChatId === recycling.ubication && (\n               <Chat\n                 recyclingId={recycling.ubication}\n                 onClose={() => toggleChat(recycling.ubication)}\n"
                },
                {
                    "date": 1728952138891,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n   }, [account]);\n \n   const getRecycling = async () => {\n     setLoading(true);\n-    const walletAddresses = [account?.address, \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\"]; // Direcciones de wallet\n+    const walletAddresses = [account?.address, \"0x97316636778f50a0b243498ee20be178556177277a7a3466700fcd3c3ccff52f\"]; // Direcciones de wallet\n \n     try {\n       const allRecyclings = await Promise.all(walletAddresses.map(async (address) => {\n         const payload = {\n"
                },
                {
                    "date": 1728952672012,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n   }, [account]);\n \n   const getRecycling = async () => {\n     setLoading(true);\n-    const walletAddresses = [account?.address, \"0x97316636778f50a0b243498ee20be178556177277a7a3466700fcd3c3ccff52f\"]; // Direcciones de wallet\n+    const walletAddresses = [account?.address, \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\"]; // Direcciones de wallet\n \n     try {\n       const allRecyclings = await Promise.all(walletAddresses.map(async (address) => {\n         const payload = {\n"
                },
                {
                    "date": 1728953417943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n   }, [account]);\n \n   const getRecycling = async () => {\n     setLoading(true);\n-    const walletAddresses = [account?.address, \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\"]; // Direcciones de wallet\n+    const walletAddresses = [account?.address, \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\", \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\"]; // Direcciones de wallet\n \n     try {\n       const allRecyclings = await Promise.all(walletAddresses.map(async (address) => {\n         const payload = {\n"
                },
                {
                    "date": 1728954294643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,28 @@\n+// Importaciones necesarias\n import React, { useState, useEffect } from \"react\";\n-import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n+import { Aptos, AptosConfig, Network, Account } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n import ADDRESS from \"@/utils/data\";\n \n+//Crear la direccion de los recursos, mediante contrato inteligente, en esta direccion estan los recursos de aptos la moneda\n+const APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\n+//Donde se almacenan los recursos de la moneda\n+const COIN_STORE = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n+\n+const config = new AptosConfig({ network: Network.TESTNET });\n+const CONTRACT_ADDRESS = \"0x1\";\n+const ADDRESS1 =\n+  \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\";\n+\n+// Definici√≥n de la interfaz Recycling\n interface Recycling {\n   type: string;\n   ubication: string;\n   weight: number;\n   pricePound: number;\n+  totalPrice: number; // Campo adicional para el precio total\n   observations: string;\n   chats: [];\n   available: boolean;\n }\n@@ -19,8 +32,9 @@\n   Plastics: \"/plastic.jpeg\",\n   Cardboard: \"/cardboard.jpeg\",\n   Glasses: \"/glass.jpeg\",\n };\n+\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n \n const CardContainer = () => {\n   const { account } = useWallet();\n@@ -40,33 +54,41 @@\n   }, [account]);\n \n   const getRecycling = async () => {\n     setLoading(true);\n-    const walletAddresses = [account?.address, \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\", \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\"]; // Direcciones de wallet\n+    const walletAddresses = [\n+      account?.address,\n+      \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\",\n+      \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\",\n+    ];\n \n     try {\n-      const allRecyclings = await Promise.all(walletAddresses.map(async (address) => {\n-        const payload = {\n-          function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n-          functionArguments: [address],\n-        };\n+      const allRecyclings = await Promise.all(\n+        walletAddresses.map(async (address) => {\n+          const payload = {\n+            function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+            functionArguments: [address],\n+          };\n \n-        const result: any = await aptos.view({ payload });\n-        return Array.isArray(result) ? result.flatMap((recyclingArray: any[]) =>\n-          recyclingArray.map((recycling: any) => ({\n-            owner: recycling.owner,\n-            type: recycling.type || \"N/A\",\n-            ubication: recycling.ubication || \"N/A\",\n-            weight: recycling.weight || 0,\n-            pricePound: recycling.pricePound || 0,\n-            observations: recycling.observations || \"N/A\",\n-            chats: recycling.chats || [],\n-            available: recycling.available || false,\n-          }))\n-        ) : [];\n-      }));\n+          const result: any = await aptos.view({ payload });\n+          return Array.isArray(result)\n+            ? result.flatMap((recyclingArray: any[]) =>\n+                recyclingArray.map((recycling: any) => ({\n+                  owner: recycling.owner,\n+                  type: recycling.type || \"N/A\",\n+                  ubication: recycling.ubication || \"N/A\",\n+                  weight: recycling.weight || 0,\n+                  pricePound: recycling.pricePound || 0,\n+                  totalPrice: recycling.weight * recycling.pricePound, // Calcular el precio total\n+                  observations: recycling.observations || \"N/A\",\n+                  chats: recycling.chats || [],\n+                  available: recycling.available || false,\n+                }))\n+              )\n+            : [];\n+        })\n+      );\n \n-      // Combina los reciclajes de ambas direcciones\n       const combinedRecyclings = allRecyclings.flat();\n       if (combinedRecyclings.length > 0) {\n         setRecyclings(combinedRecyclings);\n       } else {\n@@ -82,8 +104,35 @@\n   const toggleChat = (recyclingId: string) => {\n     setOpenChatId(openChatId === recyclingId ? null : recyclingId);\n   };\n \n+  // Funci√≥n para realizar la transferencia\n+  const transfer = async (totalPrice: number) => {\n+    const { signAndSubmitTransaction } = useWallet();\n+    if (!account) {\n+      console.error(\"No se ha conectado una cuenta\");\n+      return;\n+    }\n+\n+    const response = await signAndSubmitTransaction({\n+      sender: account?.address,\n+      data: {\n+        function: `${CONTRACT_ADDRESS}::aptos_account::transfer`,\n+        typeArguments: [],\n+        functionArguments: [\n+          ADDRESS, // Direcci√≥n del destinatario\n+          totalPrice, // Utiliza el precio total\n+        ],\n+      },\n+    });\n+\n+    try {\n+      await aptos.waitForTransaction({ transactionHash: response.hash });\n+    } catch (error) {\n+      console.error(\"Error al esperar la transacci√≥n:\", error);\n+    }\n+  };\n+\n   return (\n     <div className=\"flex justify-center flex-wrap\">\n       {loading ? (\n         <div className=\"flex flex-col items-center justify-center h-screen\">\n@@ -101,21 +150,21 @@\n                   className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n                 />\n               )}\n               <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n-              <p className=\"text-gray-700 text-sm mb-2\">\n-                Price: ${recycling.pricePound}\n-              </p>\n-              <p className=\"text-gray-500 text-sm mb-4\">\n-                Ubication: {recycling.ubication}\n-              </p>\n+              <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n+              <p className=\"text-gray-700 text-sm mb-2\">Total Price: ${recycling.totalPrice}</p> {/* Mostrar el precio total */}\n+              <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n               <div className=\"flex justify-around mt-4\">\n                 <button\n-                  onClick={() => setSelectedRecycling(recycling)}\n+                  onClick={() => {\n+                    setSelectedRecycling(recycling);\n+                    transfer(recycling.totalPrice); // Pasar el precio total al hacer click en comprar\n+                  }}\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n-                  <span>üëÅÔ∏è</span>\n-                  <span>See</span>\n+                  <span>üí∏</span>\n+                  <span>Buy</span> {/* Cambiar texto a \"Buy\" */}\n                 </button>\n                 <button\n                   onClick={() => toggleChat(recycling.ubication)}\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n@@ -140,27 +189,15 @@\n \n       {selectedRecycling && (\n         <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n           <div className=\"bg-white rounded-lg shadow-lg w-full max-w-sm p-6 relative\">\n-            <h2 className=\"text-2xl font-bold mb-4 text-center\">\n-              {selectedRecycling.type}\n-            </h2>\n-            <p>\n-              <strong>Ubication:</strong> {selectedRecycling.ubication}\n-            </p>\n-            <p>\n-              <strong>Weight:</strong> {selectedRecycling.weight} kg\n-            </p>\n-            <p>\n-              <strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}\n-            </p>\n-            <p>\n-              <strong>Observations:</strong> {selectedRecycling.observations}\n-            </p>\n-            <p>\n-              <strong>Available:</strong>{\" \"}\n-              {selectedRecycling.available ? \"Yes\" : \"No\"}\n-            </p>\n+            <h2 className=\"text-2xl font-bold mb-4 text-center\">{selectedRecycling.type}</h2>\n+            <p><strong>Ubication:</strong> {selectedRecycling.ubication}</p>\n+            <p><strong>Weight:</strong> {selectedRecycling.weight} kg</p>\n+            <p><strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}</p>\n+            <p><strong>Total Price:</strong> ${selectedRecycling.totalPrice}</p> {/* Mostrar el precio total aqu√≠ tambi√©n */}\n+            <p><strong>Observations:</strong> {selectedRecycling.observations}</p>\n+            <p><strong>Available:</strong> {selectedRecycling.available ? \"Yes\" : \"No\"}</p>\n             <button\n               onClick={handleCloseModal}\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n@@ -174,16 +211,8 @@\n                 >\n                   Close\n                 </button>\n               </div>\n-              <div className=\"flex justify-center mt-6\">\n-                <button\n-                  onClick={handleCloseModal}\n-                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-                >\n-                  Buy\n-                </button>\n-              </div>\n             </div>\n           </div>\n         </div>\n       )}\n"
                },
                {
                    "date": 1728954361623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -118,9 +118,9 @@\n       data: {\n         function: `${CONTRACT_ADDRESS}::aptos_account::transfer`,\n         typeArguments: [],\n         functionArguments: [\n-          ADDRESS, // Direcci√≥n del destinatario\n+          ADDRESS1, // Direcci√≥n del destinatario\n           totalPrice, // Utiliza el precio total\n         ],\n       },\n     });\n"
                },
                {
                    "date": 1728955325145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,16 @@\n-// Importaciones necesarias\n+\n import React, { useState, useEffect } from \"react\";\n-import { Aptos, AptosConfig, Network, Account } from \"@aptos-labs/ts-sdk\";\n+import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n import ADDRESS from \"@/utils/data\";\n \n-//Crear la direccion de los recursos, mediante contrato inteligente, en esta direccion estan los recursos de aptos la moneda\n-const APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\n-//Donde se almacenan los recursos de la moneda\n-const COIN_STORE = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n-\n-const config = new AptosConfig({ network: Network.TESTNET });\n-const CONTRACT_ADDRESS = \"0x1\";\n-const ADDRESS1 =\n-  \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\";\n-\n-// Definici√≥n de la interfaz Recycling\n interface Recycling {\n   type: string;\n   ubication: string;\n   weight: number;\n   pricePound: number;\n-  totalPrice: number; // Campo adicional para el precio total\n   observations: string;\n   chats: [];\n   available: boolean;\n }\n@@ -32,9 +20,8 @@\n   Plastics: \"/plastic.jpeg\",\n   Cardboard: \"/cardboard.jpeg\",\n   Glasses: \"/glass.jpeg\",\n };\n-\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n \n const CardContainer = () => {\n   const { account } = useWallet();\n@@ -54,41 +41,33 @@\n   }, [account]);\n \n   const getRecycling = async () => {\n     setLoading(true);\n-    const walletAddresses = [\n-      account?.address,\n-      \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\",\n-      \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\",\n-    ];\n+    const walletAddresses = [account?.address, \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\", \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\"]; // Direcciones de wallet\n \n     try {\n-      const allRecyclings = await Promise.all(\n-        walletAddresses.map(async (address) => {\n-          const payload = {\n-            function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n-            functionArguments: [address],\n-          };\n+      const allRecyclings = await Promise.all(walletAddresses.map(async (address) => {\n+        const payload = {\n+          function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+          functionArguments: [address],\n+        };\n \n-          const result: any = await aptos.view({ payload });\n-          return Array.isArray(result)\n-            ? result.flatMap((recyclingArray: any[]) =>\n-                recyclingArray.map((recycling: any) => ({\n-                  owner: recycling.owner,\n-                  type: recycling.type || \"N/A\",\n-                  ubication: recycling.ubication || \"N/A\",\n-                  weight: recycling.weight || 0,\n-                  pricePound: recycling.pricePound || 0,\n-                  totalPrice: recycling.weight * recycling.pricePound, // Calcular el precio total\n-                  observations: recycling.observations || \"N/A\",\n-                  chats: recycling.chats || [],\n-                  available: recycling.available || false,\n-                }))\n-              )\n-            : [];\n-        })\n-      );\n+        const result: any = await aptos.view({ payload });\n+        return Array.isArray(result) ? result.flatMap((recyclingArray: any[]) =>\n+          recyclingArray.map((recycling: any) => ({\n+            owner: recycling.owner,\n+            type: recycling.type || \"N/A\",\n+            ubication: recycling.ubication || \"N/A\",\n+            weight: recycling.weight || 0,\n+            pricePound: recycling.pricePound || 0,\n+            observations: recycling.observations || \"N/A\",\n+            chats: recycling.chats || [],\n+            available: recycling.available || false,\n+          }))\n+        ) : [];\n+      }));\n \n+      // Combina los reciclajes de ambas direcciones\n       const combinedRecyclings = allRecyclings.flat();\n       if (combinedRecyclings.length > 0) {\n         setRecyclings(combinedRecyclings);\n       } else {\n@@ -104,35 +83,8 @@\n   const toggleChat = (recyclingId: string) => {\n     setOpenChatId(openChatId === recyclingId ? null : recyclingId);\n   };\n \n-  // Funci√≥n para realizar la transferencia\n-  const transfer = async (totalPrice: number) => {\n-    const { signAndSubmitTransaction } = useWallet();\n-    if (!account) {\n-      console.error(\"No se ha conectado una cuenta\");\n-      return;\n-    }\n-\n-    const response = await signAndSubmitTransaction({\n-      sender: account?.address,\n-      data: {\n-        function: `${CONTRACT_ADDRESS}::aptos_account::transfer`,\n-        typeArguments: [],\n-        functionArguments: [\n-          ADDRESS1, // Direcci√≥n del destinatario\n-          totalPrice, // Utiliza el precio total\n-        ],\n-      },\n-    });\n-\n-    try {\n-      await aptos.waitForTransaction({ transactionHash: response.hash });\n-    } catch (error) {\n-      console.error(\"Error al esperar la transacci√≥n:\", error);\n-    }\n-  };\n-\n   return (\n     <div className=\"flex justify-center flex-wrap\">\n       {loading ? (\n         <div className=\"flex flex-col items-center justify-center h-screen\">\n@@ -150,21 +102,21 @@\n                   className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n                 />\n               )}\n               <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n-              <p className=\"text-gray-700 text-sm mb-2\">Price: ${recycling.pricePound}</p>\n-              <p className=\"text-gray-700 text-sm mb-2\">Total Price: ${recycling.totalPrice}</p> {/* Mostrar el precio total */}\n-              <p className=\"text-gray-500 text-sm mb-4\">Ubication: {recycling.ubication}</p>\n+              <p className=\"text-gray-700 text-sm mb-2\">\n+                Price: ${recycling.pricePound}\n+              </p>\n+              <p className=\"text-gray-500 text-sm mb-4\">\n+                Ubication: {recycling.ubication}\n+              </p>\n               <div className=\"flex justify-around mt-4\">\n                 <button\n-                  onClick={() => {\n-                    setSelectedRecycling(recycling);\n-                    transfer(recycling.totalPrice); // Pasar el precio total al hacer click en comprar\n-                  }}\n+                  onClick={() => setSelectedRecycling(recycling)}\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n                 >\n-                  <span>üí∏</span>\n-                  <span>Buy</span> {/* Cambiar texto a \"Buy\" */}\n+                  <span>üëÅÔ∏è</span>\n+                  <span>See</span>\n                 </button>\n                 <button\n                   onClick={() => toggleChat(recycling.ubication)}\n                   className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n@@ -189,15 +141,27 @@\n \n       {selectedRecycling && (\n         <div className=\"fixed inset-0 flex justify-center items-center bg-black bg-opacity-50 z-50\">\n           <div className=\"bg-white rounded-lg shadow-lg w-full max-w-sm p-6 relative\">\n-            <h2 className=\"text-2xl font-bold mb-4 text-center\">{selectedRecycling.type}</h2>\n-            <p><strong>Ubication:</strong> {selectedRecycling.ubication}</p>\n-            <p><strong>Weight:</strong> {selectedRecycling.weight} kg</p>\n-            <p><strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}</p>\n-            <p><strong>Total Price:</strong> ${selectedRecycling.totalPrice}</p> {/* Mostrar el precio total aqu√≠ tambi√©n */}\n-            <p><strong>Observations:</strong> {selectedRecycling.observations}</p>\n-            <p><strong>Available:</strong> {selectedRecycling.available ? \"Yes\" : \"No\"}</p>\n+            <h2 className=\"text-2xl font-bold mb-4 text-center\">\n+              {selectedRecycling.type}\n+            </h2>\n+            <p>\n+              <strong>Ubication:</strong> {selectedRecycling.ubication}\n+            </p>\n+            <p>\n+              <strong>Weight:</strong> {selectedRecycling.weight} kg\n+            </p>\n+            <p>\n+              <strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}\n+            </p>\n+            <p>\n+              <strong>Observations:</strong> {selectedRecycling.observations}\n+            </p>\n+            <p>\n+              <strong>Available:</strong>{\" \"}\n+              {selectedRecycling.available ? \"Yes\" : \"No\"}\n+            </p>\n             <button\n               onClick={handleCloseModal}\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n@@ -211,8 +175,16 @@\n                 >\n                   Close\n                 </button>\n               </div>\n+              <div className=\"flex justify-center mt-6\">\n+                <button\n+                  onClick={handleCloseModal}\n+                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+                >\n+                  Buy\n+                </button>\n+              </div>\n             </div>\n           </div>\n         </div>\n       )}\n"
                },
                {
                    "date": 1728955782100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-\n import React, { useState, useEffect } from \"react\";\n import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n@@ -27,9 +26,11 @@\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n   const [openChatId, setOpenChatId] = useState<string | null>(null);\n   const [loading, setLoading] = useState(true);\n-  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n+  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(\n+    null\n+  );\n \n   const handleCloseModal = () => {\n     setSelectedRecycling(null);\n   };\n@@ -41,31 +42,42 @@\n   }, [account]);\n \n   const getRecycling = async () => {\n     setLoading(true);\n-    const walletAddresses = [account?.address, \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\", \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\"]; // Direcciones de wallet\n+    const walletAddresses = [\n+      account?.address,\n+      \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\",\n+      \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\",\n+    ]; // Direcciones de wallet\n \n     try {\n-      const allRecyclings = await Promise.all(walletAddresses.map(async (address) => {\n-        const payload = {\n-          function: `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n-          functionArguments: [address],\n-        };\n+      const allRecyclings = await Promise.all(\n+        walletAddresses.map(async (address) => {\n+          const payload = {\n+            function:\n+              `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n+            functionArguments: [address],\n+          };\n \n-        const result: any = await aptos.view({ payload });\n-        return Array.isArray(result) ? result.flatMap((recyclingArray: any[]) =>\n-          recyclingArray.map((recycling: any) => ({\n-            owner: recycling.owner,\n-            type: recycling.type || \"N/A\",\n-            ubication: recycling.ubication || \"N/A\",\n-            weight: recycling.weight || 0,\n-            pricePound: recycling.pricePound || 0,\n-            observations: recycling.observations || \"N/A\",\n-            chats: recycling.chats || [],\n-            available: recycling.available || false,\n-          }))\n-        ) : [];\n-      }));\n+          const result: any = await aptos.view({ payload });\n+          return Array.isArray(result)\n+            ? result.flatMap((recyclingArray: any[]) =>\n+                recyclingArray.map((recycling: any) => ({\n+                  owner: recycling.owner,\n+                  type: recycling.type || \"N/A\",\n+                  ubication: recycling.ubication || \"N/A\",\n+                  weight: recycling.weight || 0,\n+                  pricePound: recycling.pricePound || 0,\n+                  totalPrice:\n+                    (recycling.weight || 0) * (recycling.pricePound || 0), // Agregado aqu√≠\n+                  observations: recycling.observations || \"N/A\",\n+                  chats: recycling.chats || [],\n+                  available: recycling.available || false,\n+                }))\n+              )\n+            : [];\n+        })\n+      );\n \n       // Combina los reciclajes de ambas direcciones\n       const combinedRecyclings = allRecyclings.flat();\n       if (combinedRecyclings.length > 0) {\n@@ -105,8 +117,12 @@\n               <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n               <p className=\"text-gray-700 text-sm mb-2\">\n                 Price: ${recycling.pricePound}\n               </p>\n+              <p className=\"text-gray-700 text-sm mb-2\">\n+                Total Price: ${recycling.weight * recycling.pricePound}{\" \"}\n+                {/* Agregado aqu√≠ */}\n+              </p>\n               <p className=\"text-gray-500 text-sm mb-4\">\n                 Ubication: {recycling.ubication}\n               </p>\n               <div className=\"flex justify-around mt-4\">\n"
                },
                {
                    "date": 1728955882657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n                 />\n               )}\n               <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n               <p className=\"text-gray-700 text-sm mb-2\">\n-                Price: ${recycling.pricePound}\n+                Price per pound: ${recycling.pricePound}\n               </p>\n               <p className=\"text-gray-700 text-sm mb-2\">\n                 Total Price: ${recycling.weight * recycling.pricePound}{\" \"}\n                 {/* Agregado aqu√≠ */}\n"
                },
                {
                    "date": 1728955918185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,8 +170,11 @@\n             <p>\n               <strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}\n             </p>\n             <p>\n+            <p>\n+              <strong>Total Price:</strong> ${selectedRecycling.pricePound}\n+            </p>\n               <strong>Observations:</strong> {selectedRecycling.observations}\n             </p>\n             <p>\n               <strong>Available:</strong>{\" \"}\n"
                },
                {
                    "date": 1728955975788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -172,8 +172,9 @@\n             </p>\n             <p>\n             <p>\n               <strong>Total Price:</strong> ${selectedRecycling.pricePound}\n+              Total Price: ${selectedRecycling.weight * selectedRecycling.pricePound}{\" \"}\n             </p>\n               <strong>Observations:</strong> {selectedRecycling.observations}\n             </p>\n             <p>\n"
                },
                {
                    "date": 1728956015749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -171,10 +171,10 @@\n               <strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}\n             </p>\n             <p>\n             <p>\n-              <strong>Total Price:</strong> ${selectedRecycling.pricePound}\n-              Total Price: ${selectedRecycling.weight * selectedRecycling.pricePound}{\" \"}\n+              <strong>Total Price: ${selectedRecycling.weight * selectedRecycling.pricePound}{\" \"}</strong>\n+              \n             </p>\n               <strong>Observations:</strong> {selectedRecycling.observations}\n             </p>\n             <p>\n"
                },
                {
                    "date": 1728956055778,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -170,18 +170,17 @@\n             <p>\n               <strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}\n             </p>\n             <p>\n-            <p>\n-              <strong>Total Price: ${selectedRecycling.weight * selectedRecycling.pricePound}{\" \"}</strong>\n-              \n-            </p>\n               <strong>Observations:</strong> {selectedRecycling.observations}\n             </p>\n             <p>\n               <strong>Available:</strong>{\" \"}\n               {selectedRecycling.available ? \"Yes\" : \"No\"}\n             </p>\n+            <p>\n+              <strong>Total Price: ${selectedRecycling.weight * selectedRecycling.pricePound}{\" \"}</strong>\n+            </p>\n             <button\n               onClick={handleCloseModal}\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n             >\n"
                },
                {
                    "date": 1728956663664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n import ADDRESS from \"@/utils/data\";\n+import Buy from \"@/pages/buy\";\n \n interface Recycling {\n   type: string;\n   ubication: string;\n"
                },
                {
                    "date": 1728956757954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,14 +196,9 @@\n                   Close\n                 </button>\n               </div>\n               <div className=\"flex justify-center mt-6\">\n-                <button\n-                  onClick={handleCloseModal}\n-                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-                >\n-                  Buy\n-                </button>\n+                <Buy />\n               </div>\n             </div>\n           </div>\n         </div>\n"
                },
                {
                    "date": 1728957871310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import Chat from \"./chat\";\n import ADDRESS from \"@/utils/data\";\n-import Buy from \"@/pages/buy\";\n+import Buy from \"./buy\";\n \n interface Recycling {\n   type: string;\n   ubication: string;\n@@ -196,9 +196,9 @@\n                   Close\n                 </button>\n               </div>\n               <div className=\"flex justify-center mt-6\">\n-                <Buy />\n+                <Buy totalPrice={selectedRecycling.weight * selectedRecycling.pricePound}/>\n               </div>\n             </div>\n           </div>\n         </div>\n"
                },
                {
                    "date": 1728957918313,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,9 @@\n                   Close\n                 </button>\n               </div>\n               <div className=\"flex justify-center mt-6\">\n-                <Buy totalPrice={selectedRecycling.weight * selectedRecycling.pricePound}/>\n+                <Buy totalPrice={selectedRecycling.totalPrice} />\n               </div>\n             </div>\n           </div>\n         </div>\n"
                },
                {
                    "date": 1728958006833,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,9 @@\n                   Close\n                 </button>\n               </div>\n               <div className=\"flex justify-center mt-6\">\n-                <Buy totalPrice={selectedRecycling.totalPrice} />\n+                <Buy/>\n               </div>\n             </div>\n           </div>\n         </div>\n"
                },
                {
                    "date": 1728958459694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -196,9 +196,9 @@\n                   Close\n                 </button>\n               </div>\n               <div className=\"flex justify-center mt-6\">\n-                <Buy/>\n+                <Buy totalPrice={selectedRecycling.pricePound * selectedRecycling.weight}/>\n               </div>\n             </div>\n           </div>\n         </div>\n"
                },
                {
                    "date": 1728959976610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,8 +96,26 @@\n   const toggleChat = (recyclingId: string) => {\n     setOpenChatId(openChatId === recyclingId ? null : recyclingId);\n   };\n \n+  try {\n+    const response = await signAndSubmitTransaction({\n+      sender: account?.address, // Tu wallet que firma la transacci√≥n\n+      data: {\n+        function: `${CONTRACT_ADDRESS}::aptos_account::transfer`, // Funci√≥n de tu contrato inteligente\n+        typeArguments: [], // Si tu funci√≥n usa argumentos de tipo\n+        functionArguments: [\n+          ADDRESS, // Direcci√≥n del destinatario\n+          totalPrice, // Monto a transferir\n+        ],\n+      },\n+    });\n+    await aptos.waitForTransaction({ transactionHash: response.hash });\n+    console.log(\"La compra y el pago se realizaron con √©xito!\");\n+  } catch (error) {\n+    console.error(\"Error al realizar la transacci√≥n:\", error);\n+  }\n+\n   return (\n     <div className=\"flex justify-center flex-wrap\">\n       {loading ? (\n         <div className=\"flex flex-col items-center justify-center h-screen\">\n@@ -178,9 +196,12 @@\n               <strong>Available:</strong>{\" \"}\n               {selectedRecycling.available ? \"Yes\" : \"No\"}\n             </p>\n             <p>\n-              <strong>Total Price: ${selectedRecycling.weight * selectedRecycling.pricePound}{\" \"}</strong>\n+              <strong>\n+                Total Price: $\n+                {selectedRecycling.weight * selectedRecycling.pricePound}{\" \"}\n+              </strong>\n             </p>\n             <button\n               onClick={handleCloseModal}\n               className=\"absolute top-2 right-2 text-gray-400 hover:text-gray-600\"\n@@ -196,9 +217,13 @@\n                   Close\n                 </button>\n               </div>\n               <div className=\"flex justify-center mt-6\">\n-                <Buy totalPrice={selectedRecycling.pricePound * selectedRecycling.weight}/>\n+                <Buy\n+                  totalPrice={\n+                    selectedRecycling.pricePound * selectedRecycling.weight\n+                  }\n+                />\n               </div>\n             </div>\n           </div>\n         </div>\n"
                },
                {
                    "date": 1728960174730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n   const [openChatId, setOpenChatId] = useState<string | null>(null);\n   const [loading, setLoading] = useState(true);\n+  const { signAndSubmitTransaction} = useWallet();\n   const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(\n     null\n   );\n \n@@ -96,8 +97,9 @@\n   const toggleChat = (recyclingId: string) => {\n     setOpenChatId(openChatId === recyclingId ? null : recyclingId);\n   };\n \n+  const CardContainer = async () => {\n   try {\n     const response = await signAndSubmitTransaction({\n       sender: account?.address, // Tu wallet que firma la transacci√≥n\n       data: {\n@@ -113,8 +115,9 @@\n     console.log(\"La compra y el pago se realizaron con √©xito!\");\n   } catch (error) {\n     console.error(\"Error al realizar la transacci√≥n:\", error);\n   }\n+}\n \n   return (\n     <div className=\"flex justify-center flex-wrap\">\n       {loading ? (\n"
                },
                {
                    "date": 1728960217558,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n   try {\n     const response = await signAndSubmitTransaction({\n       sender: account?.address, // Tu wallet que firma la transacci√≥n\n       data: {\n-        function: `${CONTRACT_ADDRESS}::aptos_account::transfer`, // Funci√≥n de tu contrato inteligente\n+        function: `${ADDRESS}::aptos_account::transfer`, // Funci√≥n de tu contrato inteligente\n         typeArguments: [], // Si tu funci√≥n usa argumentos de tipo\n         functionArguments: [\n           ADDRESS, // Direcci√≥n del destinatario\n           totalPrice, // Monto a transferir\n"
                },
                {
                    "date": 1728960383570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,13 +102,13 @@\n   try {\n     const response = await signAndSubmitTransaction({\n       sender: account?.address, // Tu wallet que firma la transacci√≥n\n       data: {\n-        function: `${ADDRESS}::aptos_account::transfer`, // Funci√≥n de tu contrato inteligente\n+        function: `${ADDRESS}::recicly::change_available`, // Funci√≥n de tu contrato inteligente\n         typeArguments: [], // Si tu funci√≥n usa argumentos de tipo\n         functionArguments: [\n           ADDRESS, // Direcci√≥n del destinatario\n-          totalPrice, // Monto a transferir\n+         \n         ],\n       },\n     });\n     await aptos.waitForTransaction({ transactionHash: response.hash });\n"
                },
                {
                    "date": 1728962262292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,16 +23,13 @@\n };\n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n \n const CardContainer = () => {\n-  const { account } = useWallet();\n+  const { account, signAndSubmitTransaction } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[]>([]);\n   const [openChatId, setOpenChatId] = useState<string | null>(null);\n   const [loading, setLoading] = useState(true);\n-  const { signAndSubmitTransaction} = useWallet();\n-  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(\n-    null\n-  );\n+  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n \n   const handleCloseModal = () => {\n     setSelectedRecycling(null);\n   };\n@@ -79,9 +76,8 @@\n             : [];\n         })\n       );\n \n-      // Combina los reciclajes de ambas direcciones\n       const combinedRecyclings = allRecyclings.flat();\n       if (combinedRecyclings.length > 0) {\n         setRecyclings(combinedRecyclings);\n       } else {\n@@ -97,83 +93,91 @@\n   const toggleChat = (recyclingId: string) => {\n     setOpenChatId(openChatId === recyclingId ? null : recyclingId);\n   };\n \n-  const CardContainer = async () => {\n-  try {\n-    const response = await signAndSubmitTransaction({\n-      sender: account?.address, // Tu wallet que firma la transacci√≥n\n-      data: {\n-        function: `${ADDRESS}::recicly::change_available`, // Funci√≥n de tu contrato inteligente\n-        typeArguments: [], // Si tu funci√≥n usa argumentos de tipo\n-        functionArguments: [\n-          ADDRESS, // Direcci√≥n del destinatario\n-         \n-        ],\n-      },\n-    });\n-    await aptos.waitForTransaction({ transactionHash: response.hash });\n-    console.log(\"La compra y el pago se realizaron con √©xito!\");\n-  } catch (error) {\n-    console.error(\"Error al realizar la transacci√≥n:\", error);\n-  }\n-}\n+  const handleBuySuccess = async (recycling: Recycling) => {\n+    try {\n+      // Realiza la transacci√≥n\n+      const response = await signAndSubmitTransaction({\n+        sender: account?.address,\n+        data: {\n+          function: `${ADDRESS}::recicly::change_available`,\n+          typeArguments: [],\n+          functionArguments: [ADDRESS],\n+        },\n+      });\n \n+      await aptos.waitForTransaction({ transactionHash: response.hash });\n+      alert(\"Compra exitosa!\");\n+\n+      // Marca el reciclaje como no disponible y actualiza el estado\n+      setRecyclings((prevRecyclings) =>\n+        prevRecyclings.map((r) =>\n+          r.ubication === recycling.ubication ? { ...r, available: false } : r\n+        )\n+      );\n+      setSelectedRecycling(null); // Cierra el modal despu√©s de la compra\n+    } catch (error) {\n+      console.error(\"Error en la transacci√≥n:\", error);\n+    }\n+  };\n+\n   return (\n     <div className=\"flex justify-center flex-wrap\">\n       {loading ? (\n         <div className=\"flex flex-col items-center justify-center h-screen\">\n           <div className=\"loader\"></div>\n           <p className=\"mt-4 text-lg\">Cargando reciclajes...</p>\n         </div>\n       ) : recyclings.length > 0 ? (\n-        recyclings.map((recycling, index) => (\n-          <div key={index} className=\"relative m-4\">\n-            <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n-              {imageUrls[recycling.type] && (\n-                <img\n-                  src={imageUrls[recycling.type]}\n-                  alt={`${recycling.type} image`}\n-                  className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n+        recyclings\n+          .filter((recycling) => recycling.available)\n+          .map((recycling, index) => (\n+            <div key={index} className=\"relative m-4\">\n+              <div className=\"bg-blue-200 border border-gray-300 rounded-lg shadow-lg w-80 p-6 text-center transition-all duration-500 hover:border-blue-400 hover:shadow-2xl hover:-translate-y-2 cursor-pointer\">\n+                {imageUrls[recycling.type] && (\n+                  <img\n+                    src={imageUrls[recycling.type]}\n+                    alt={`${recycling.type} image`}\n+                    className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n+                  />\n+                )}\n+                <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n+                <p className=\"text-gray-700 text-sm mb-2\">\n+                  Price per pound: ${recycling.pricePound}\n+                </p>\n+                <p className=\"text-gray-700 text-sm mb-2\">\n+                  Total Price: ${recycling.weight * recycling.pricePound}\n+                </p>\n+                <p className=\"text-gray-500 text-sm mb-4\">\n+                  Ubication: {recycling.ubication}\n+                </p>\n+                <div className=\"flex justify-around mt-4\">\n+                  <button\n+                    onClick={() => setSelectedRecycling(recycling)}\n+                    className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+                  >\n+                    <span>üëÅÔ∏è</span>\n+                    <span>See</span>\n+                  </button>\n+                  <button\n+                    onClick={() => toggleChat(recycling.ubication)}\n+                    className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n+                  >\n+                    <span>üí¨</span>\n+                    <span>Chat</span>\n+                  </button>\n+                </div>\n+              </div>\n+\n+              {openChatId === recycling.ubication && (\n+                <Chat\n+                  recyclingId={recycling.ubication}\n+                  onClose={() => toggleChat(recycling.ubication)}\n                 />\n               )}\n-              <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n-              <p className=\"text-gray-700 text-sm mb-2\">\n-                Price per pound: ${recycling.pricePound}\n-              </p>\n-              <p className=\"text-gray-700 text-sm mb-2\">\n-                Total Price: ${recycling.weight * recycling.pricePound}{\" \"}\n-                {/* Agregado aqu√≠ */}\n-              </p>\n-              <p className=\"text-gray-500 text-sm mb-4\">\n-                Ubication: {recycling.ubication}\n-              </p>\n-              <div className=\"flex justify-around mt-4\">\n-                <button\n-                  onClick={() => setSelectedRecycling(recycling)}\n-                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-                >\n-                  <span>üëÅÔ∏è</span>\n-                  <span>See</span>\n-                </button>\n-                <button\n-                  onClick={() => toggleChat(recycling.ubication)}\n-                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-                >\n-                  <span>üí¨</span>\n-                  <span>Chat</span>\n-                </button>\n-              </div>\n             </div>\n-\n-            {openChatId === recycling.ubication && (\n-              <Chat\n-                recyclingId={recycling.ubication}\n-                onClose={() => toggleChat(recycling.ubication)}\n-              />\n-            )}\n-          </div>\n-        ))\n+          ))\n       ) : (\n         <p className=\"text-center\">No hay reciclajes disponibles</p>\n       )}\n \n@@ -201,9 +205,9 @@\n             </p>\n             <p>\n               <strong>\n                 Total Price: $\n-                {selectedRecycling.weight * selectedRecycling.pricePound}{\" \"}\n+                {selectedRecycling.weight * selectedRecycling.pricePound}\n               </strong>\n             </p>\n             <button\n               onClick={handleCloseModal}\n@@ -211,23 +215,23 @@\n             >\n               ‚úñ\n             </button>\n             <div className=\"flex flex-row justify-around mt-4\">\n-              <div className=\"flex justify-center mt-6\">\n-                <button\n-                  onClick={handleCloseModal}\n-                  className=\"bg-orange-500 text-white px-4 py-2 rounded-md flex items-center space-x-1 text-sm hover:bg-blue-600 transition-colors\"\n-                >\n-                  Close\n-                </button>\n-              </div>\n-              <div className=\"flex justify-center mt-6\">\n+              <div className=\"w-36\">\n                 <Buy\n-                  totalPrice={\n-                    selectedRecycling.pricePound * selectedRecycling.weight\n-                  }\n+                  recycling={{\n+                    ...selectedRecycling,\n+                    totalPrice: selectedRecycling.weight * selectedRecycling.pricePound, // Calcula el precio total\n+                  }}\n+                  onBuySuccess={handleBuySuccess} // Funci√≥n de √©xito para manejar la compra\n                 />\n               </div>\n+              <button\n+                onClick={handleCloseModal}\n+                className=\"bg-gray-400 text-white px-4 py-2 rounded-md\"\n+              >\n+                Cerrar\n+              </button>\n             </div>\n           </div>\n         </div>\n       )}\n"
                },
                {
                    "date": 1728963031888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -101,9 +101,9 @@\n         sender: account?.address,\n         data: {\n           function: `${ADDRESS}::recicly::change_available`,\n           typeArguments: [],\n-          functionArguments: [ADDRESS],\n+          functionArguments: [ADDRESS, recyclingId],\n         },\n       });\n \n       await aptos.waitForTransaction({ transactionHash: response.hash });\n"
                },
                {
                    "date": 1728963057028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,8 +60,9 @@\n           const result: any = await aptos.view({ payload });\n           return Array.isArray(result)\n             ? result.flatMap((recyclingArray: any[]) =>\n                 recyclingArray.map((recycling: any) => ({\n+                  id: recycling.id,\n                   owner: recycling.owner,\n                   type: recycling.type || \"N/A\",\n                   ubication: recycling.ubication || \"N/A\",\n                   weight: recycling.weight || 0,\n"
                },
                {
                    "date": 1728963121955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n         sender: account?.address,\n         data: {\n           function: `${ADDRESS}::recicly::change_available`,\n           typeArguments: [],\n-          functionArguments: [ADDRESS, recyclingId],\n+          functionArguments: [ADDRESS],\n         },\n       });\n \n       await aptos.waitForTransaction({ transactionHash: response.hash });\n"
                },
                {
                    "date": 1728963471292,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n import ADDRESS from \"@/utils/data\";\n import Buy from \"./buy\";\n \n interface Recycling {\n+  id: number;\n   type: string;\n   ubication: string;\n   weight: number;\n   pricePound: number;\n"
                },
                {
                    "date": 1728963645414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -103,9 +103,9 @@\n         sender: account?.address,\n         data: {\n           function: `${ADDRESS}::recicly::change_available`,\n           typeArguments: [],\n-          functionArguments: [ADDRESS],\n+          functionArguments: [ADDRESS, recycling.id],\n         },\n       });\n \n       await aptos.waitForTransaction({ transactionHash: response.hash });\n"
                },
                {
                    "date": 1728963763036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,9 +113,9 @@\n \n       // Marca el reciclaje como no disponible y actualiza el estado\n       setRecyclings((prevRecyclings) =>\n         prevRecyclings.map((r) =>\n-          r.ubication === recycling.ubication ? { ...r, available: false } : r\n+          r.id === recycling.id ? { ...r, available: false } : r\n         )\n       );\n       setSelectedRecycling(null); // Cierra el modal despu√©s de la compra\n     } catch (error) {\n"
                },
                {
                    "date": 1728963791938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,13 +111,13 @@\n       await aptos.waitForTransaction({ transactionHash: response.hash });\n       alert(\"Compra exitosa!\");\n \n       // Marca el reciclaje como no disponible y actualiza el estado\n-      setRecyclings((prevRecyclings) =>\n+      /*setRecyclings((prevRecyclings) =>\n         prevRecyclings.map((r) =>\n           r.id === recycling.id ? { ...r, available: false } : r\n         )\n-      );\n+      );*/\n       setSelectedRecycling(null); // Cierra el modal despu√©s de la compra\n     } catch (error) {\n       console.error(\"Error en la transacci√≥n:\", error);\n     }\n"
                },
                {
                    "date": 1728963815325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,13 +111,13 @@\n       await aptos.waitForTransaction({ transactionHash: response.hash });\n       alert(\"Compra exitosa!\");\n \n       // Marca el reciclaje como no disponible y actualiza el estado\n-      /*setRecyclings((prevRecyclings) =>\n+      setRecyclings((prevRecyclings) =>\n         prevRecyclings.map((r) =>\n           r.id === recycling.id ? { ...r, available: false } : r\n         )\n-      );*/\n+      );\n       setSelectedRecycling(null); // Cierra el modal despu√©s de la compra\n     } catch (error) {\n       console.error(\"Error en la transacci√≥n:\", error);\n     }\n"
                },
                {
                    "date": 1728963864317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,13 +111,13 @@\n       await aptos.waitForTransaction({ transactionHash: response.hash });\n       alert(\"Compra exitosa!\");\n \n       // Marca el reciclaje como no disponible y actualiza el estado\n-      setRecyclings((prevRecyclings) =>\n+     /* setRecyclings((prevRecyclings) =>\n         prevRecyclings.map((r) =>\n           r.id === recycling.id ? { ...r, available: false } : r\n         )\n-      );\n+      );*/\n       setSelectedRecycling(null); // Cierra el modal despu√©s de la compra\n     } catch (error) {\n       console.error(\"Error en la transacci√≥n:\", error);\n     }\n"
                },
                {
                    "date": 1728964178991,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,13 +111,13 @@\n       await aptos.waitForTransaction({ transactionHash: response.hash });\n       alert(\"Compra exitosa!\");\n \n       // Marca el reciclaje como no disponible y actualiza el estado\n-     /* setRecyclings((prevRecyclings) =>\n+     setRecyclings((prevRecyclings) =>\n         prevRecyclings.map((r) =>\n           r.id === recycling.id ? { ...r, available: false } : r\n         )\n-      );*/\n+      );\n       setSelectedRecycling(null); // Cierra el modal despu√©s de la compra\n     } catch (error) {\n       console.error(\"Error en la transacci√≥n:\", error);\n     }\n"
                },
                {
                    "date": 1728964225788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,8 @@\n     setLoading(true);\n     const walletAddresses = [\n       account?.address,\n       \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\",\n-      \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\",\n     ]; // Direcciones de wallet\n \n     try {\n       const allRecyclings = await Promise.all(\n"
                },
                {
                    "date": 1728964732452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n import Buy from \"./buy\";\n \n interface Recycling {\n   id: number;\n+  owner: string;\n   type: string;\n   ubication: string;\n   weight: number;\n   pricePound: number;\n"
                },
                {
                    "date": 1728965370055,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,10 +67,9 @@\n                   type: recycling.type || \"N/A\",\n                   ubication: recycling.ubication || \"N/A\",\n                   weight: recycling.weight || 0,\n                   pricePound: recycling.pricePound || 0,\n-                  totalPrice:\n-                    (recycling.weight || 0) * (recycling.pricePound || 0), // Agregado aqu√≠\n+                  totalPrice: (recycling.weight || 0) * (recycling.pricePound || 0), // Agregado aqu√≠\n                   observations: recycling.observations || \"N/A\",\n                   chats: recycling.chats || [],\n                   available: recycling.available || false,\n                 }))\n@@ -95,9 +94,9 @@\n   const toggleChat = (recyclingId: string) => {\n     setOpenChatId(openChatId === recyclingId ? null : recyclingId);\n   };\n \n-  const handleBuySuccess = async (recycling: Recycling) => {\n+  const handleBuySuccess = async (recyclingId: number) => {\n     try {\n       // Realiza la transacci√≥n\n       const response = await signAndSubmitTransaction({\n         sender: account?.address,\n@@ -113,9 +112,9 @@\n \n       // Marca el reciclaje como no disponible y actualiza el estado\n      setRecyclings((prevRecyclings) =>\n         prevRecyclings.map((r) =>\n-          r.id === recycling.id ? { ...r, available: false } : r\n+          r.id === recyclingId ? { ...r, available: false } : r\n         )\n       );\n       setSelectedRecycling(null); // Cierra el modal despu√©s de la compra\n     } catch (error) {\n"
                },
                {
                    "date": 1728965388141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n         sender: account?.address,\n         data: {\n           function: `${ADDRESS}::recicly::change_available`,\n           typeArguments: [],\n-          functionArguments: [ADDRESS, recycling.id],\n+          functionArguments: [ADDRESS, recyclingId, false],\n         },\n       });\n \n       await aptos.waitForTransaction({ transactionHash: response.hash });\n"
                },
                {
                    "date": 1728965471054,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n         sender: account?.address,\n         data: {\n           function: `${ADDRESS}::recicly::change_available`,\n           typeArguments: [],\n-          functionArguments: [ADDRESS, recyclingId, false],\n+          functionArguments: [ADDRESS, recyclingId],\n         },\n       });\n \n       await aptos.waitForTransaction({ transactionHash: response.hash });\n"
                },
                {
                    "date": 1728965538343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n         sender: account?.address,\n         data: {\n           function: `${ADDRESS}::recicly::change_available`,\n           typeArguments: [],\n-          functionArguments: [ADDRESS, recyclingId],\n+          functionArguments: [recyclingId, false]\n         },\n       });\n \n       await aptos.waitForTransaction({ transactionHash: response.hash });\n"
                },
                {
                    "date": 1728965669442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n         sender: account?.address,\n         data: {\n           function: `${ADDRESS}::recicly::change_available`,\n           typeArguments: [],\n-          functionArguments: [recyclingId, false]\n+          functionArguments: [account?.address, recyclingId, false],\n         },\n       });\n \n       await aptos.waitForTransaction({ transactionHash: response.hash });\n"
                },
                {
                    "date": 1728966759112,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -98,13 +98,13 @@\n   const handleBuySuccess = async (recyclingId: number) => {\n     try {\n       // Realiza la transacci√≥n\n       const response = await signAndSubmitTransaction({\n-        sender: account?.address,\n+        sender: selectedRecycling?.owner,\n         data: {\n           function: `${ADDRESS}::recicly::change_available`,\n           typeArguments: [],\n-          functionArguments: [account?.address, recyclingId, false],\n+          functionArguments: [selectedRecycling?.owner, selectedRecycling?.id],\n         },\n       });\n \n       await aptos.waitForTransaction({ transactionHash: response.hash });\n"
                },
                {
                    "date": 1728966774821,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,9 +112,9 @@\n \n       // Marca el reciclaje como no disponible y actualiza el estado\n      setRecyclings((prevRecyclings) =>\n         prevRecyclings.map((r) =>\n-          r.id === recyclingId ? { ...r, available: false } : r\n+          r.id === selectedRecycling?.id ? { ...r, available: false } : r\n         )\n       );\n       setSelectedRecycling(null); // Cierra el modal despu√©s de la compra\n     } catch (error) {\n"
                },
                {
                    "date": 1728971761146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,9 +107,9 @@\n         },\n       });\n \n       await aptos.waitForTransaction({ transactionHash: response.hash });\n-      alert(\"Compra exitosa!\");\n+      \n \n       // Marca el reciclaje como no disponible y actualiza el estado\n      setRecyclings((prevRecyclings) =>\n         prevRecyclings.map((r) =>\n"
                },
                {
                    "date": 1729020275526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n                 {imageUrls[recycling.type] && (\n                   <img\n                     src={imageUrls[recycling.type]}\n                     alt={`${recycling.type} image`}\n-                    className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n+                    className=\"w-40 h-40 rounded-full mx-auto mb-4 object-cover\"\n                   />\n                 )}\n                 <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n                 <p className=\"text-gray-700 text-sm mb-2\">\n"
                },
                {
                    "date": 1729020308276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n                 {imageUrls[recycling.type] && (\n                   <img\n                     src={imageUrls[recycling.type]}\n                     alt={`${recycling.type} image`}\n-                    className=\"w-40 h-40 rounded-full mx-auto mb-4 object-cover\"\n+                    className=\"w-32 h-32 rounded-full mx-auto mb-4 object-cover\"\n                   />\n                 )}\n                 <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n                 <p className=\"text-gray-700 text-sm mb-2\">\n"
                },
                {
                    "date": 1729044919509,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n   const toggleChat = (recyclingId: string) => {\n     setOpenChatId(openChatId === recyclingId ? null : recyclingId);\n   };\n \n-  const handleBuySuccess = async (recyclingId: number) => {\n+  const handleBuySuccess = async () => {\n     try {\n       // Realiza la transacci√≥n\n       const response = await signAndSubmitTransaction({\n         sender: selectedRecycling?.owner,\n"
                },
                {
                    "date": 1729045298726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -126,9 +126,9 @@\n     <div className=\"flex justify-center flex-wrap\">\n       {loading ? (\n         <div className=\"flex flex-col items-center justify-center h-screen\">\n           <div className=\"loader\"></div>\n-          <p className=\"mt-4 text-lg\">Cargando reciclajes...</p>\n+          <p className=\"mt-4 text-lg\">Loading recyclings...</p>\n         </div>\n       ) : recyclings.length > 0 ? (\n         recyclings\n           .filter((recycling) => recycling.available)\n@@ -143,12 +143,12 @@\n                   />\n                 )}\n                 <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n                 <p className=\"text-gray-700 text-sm mb-2\">\n-                  Price per pound: ${recycling.pricePound}\n+                  Price per pound: octa{recycling.pricePound}\n                 </p>\n                 <p className=\"text-gray-700 text-sm mb-2\">\n-                  Total Price: ${recycling.weight * recycling.pricePound}\n+                  Total Price: octa{recycling.weight * recycling.pricePound}\n                 </p>\n                 <p className=\"text-gray-500 text-sm mb-4\">\n                   Ubication: {recycling.ubication}\n                 </p>\n@@ -194,9 +194,9 @@\n             <p>\n               <strong>Weight:</strong> {selectedRecycling.weight} kg\n             </p>\n             <p>\n-              <strong>Price Per Pound:</strong> ${selectedRecycling.pricePound}\n+              <strong>Price Per Pound:</strong> octa{selectedRecycling.pricePound}\n             </p>\n             <p>\n               <strong>Observations:</strong> {selectedRecycling.observations}\n             </p>\n@@ -205,9 +205,9 @@\n               {selectedRecycling.available ? \"Yes\" : \"No\"}\n             </p>\n             <p>\n               <strong>\n-                Total Price: $\n+                Total Price: octa\n                 {selectedRecycling.weight * selectedRecycling.pricePound}\n               </strong>\n             </p>\n             <button\n"
                },
                {
                    "date": 1729045351086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -143,12 +143,12 @@\n                   />\n                 )}\n                 <h2 className=\"text-xl font-semibold\">{recycling.type}</h2>\n                 <p className=\"text-gray-700 text-sm mb-2\">\n-                  Price per pound: octa{recycling.pricePound}\n+                  Price per pound: {recycling.pricePound}octa\n                 </p>\n                 <p className=\"text-gray-700 text-sm mb-2\">\n-                  Total Price: octa{recycling.weight * recycling.pricePound}\n+                  Total Price: {recycling.weight * recycling.pricePound}octa\n                 </p>\n                 <p className=\"text-gray-500 text-sm mb-4\">\n                   Ubication: {recycling.ubication}\n                 </p>\n@@ -194,9 +194,9 @@\n             <p>\n               <strong>Weight:</strong> {selectedRecycling.weight} kg\n             </p>\n             <p>\n-              <strong>Price Per Pound:</strong> octa{selectedRecycling.pricePound}\n+              <strong>Price Per Pound:</strong> {selectedRecycling.pricePound}octa\n             </p>\n             <p>\n               <strong>Observations:</strong> {selectedRecycling.observations}\n             </p>\n@@ -205,10 +205,10 @@\n               {selectedRecycling.available ? \"Yes\" : \"No\"}\n             </p>\n             <p>\n               <strong>\n-                Total Price: octa\n-                {selectedRecycling.weight * selectedRecycling.pricePound}\n+                Total Price: \n+                {selectedRecycling.weight * selectedRecycling.pricePound}octa\n               </strong>\n             </p>\n             <button\n               onClick={handleCloseModal}\n"
                },
                {
                    "date": 1729047218356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,8 +46,9 @@\n     setLoading(true);\n     const walletAddresses = [\n       account?.address,\n       \"0xf6dedb75631e78abc7efaf29ded3a5c5d44f0c017168aa9155e41ee3c271cb8c\",\n+      \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\"\n     ]; // Direcciones de wallet\n \n     try {\n       const allRecyclings = await Promise.all(\n"
                }
            ],
            "date": 1728626586396,
            "name": "Commit-0",
            "content": "import React from \"react\";\n\ninterface ProfileCardProps {\n  name: string;\n  role: string;\n  isAdmin: boolean;\n  imageUrl: string;\n}\n\nconst ProfileCard: React.FC<ProfileCardProps> = ({ name, role, isAdmin, imageUrl }) => {\n  return (\n    <div className=\"bg-white rounded-lg shadow-md w-80 p-6 text-center\">\n      <img\n        src={imageUrl}\n        alt={`${name}'s profile`}\n        className=\"w-24 h-24 rounded-full mx-auto mb-4 object-cover\"\n      />\n      <h2 className=\"text-xl font-semibold\">{name}</h2>\n      <p className=\"text-gray-500 text-sm mb-4\">{role}</p>\n      {isAdmin && (\n        <span className=\"inline-block bg-green-100 text-green-700 py-1 px-3 rounded-full text-xs mb-4\">\n          Admin\n        </span>\n      )}\n      <div className=\"flex justify-around mt-4\">\n        <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n          <span>üìß</span>\n          <span>Email</span>\n        </a>\n        <a href=\"#\" className=\"text-gray-600 flex items-center space-x-1\">\n          <span>üìû</span>\n          <span>Call</span>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileCard;\n"
        }
    ]
}