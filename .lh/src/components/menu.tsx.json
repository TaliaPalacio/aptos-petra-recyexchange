{
    "sourceFile": "src/components/menu.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1728431429895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728764804243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,9 @@\n import Image from \"next/image\";\n import { useWalletContext } from \"./walletContext\";\n \n const DropdownMenu = () => {\n+\n   const [isOpen, setIsOpen] = useState(false);\n   const menuRef = useRef<HTMLDivElement>(null);\n   const { connected } = useWalletContext(); // Usa el contexto\n \n@@ -30,8 +31,9 @@\n   }, []);\n \n   if (!connected) return null; // No mostrar el menú si la wallet no está conectada\n \n+  console.log(\"Menu se está renderizando\");\n   return (\n     <div className=\"relative\">\n       <button\n         type=\"button\"\n"
                },
                {
                    "date": 1728764883405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,8 @@\n   }, []);\n \n   if (!connected) return null; // No mostrar el menú si la wallet no está conectada\n \n-  console.log(\"Menu se está renderizando\");\n   return (\n     <div className=\"relative\">\n       <button\n         type=\"button\"\n"
                },
                {
                    "date": 1728771771806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n \n   const [isOpen, setIsOpen] = useState(false);\n   const menuRef = useRef<HTMLDivElement>(null);\n   const { connected } = useWalletContext(); // Usa el contexto\n+  \n \n   const toggleMenu = () => {\n     setIsOpen((prev) => !prev);\n   };\n"
                },
                {
                    "date": 1728772156655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n       document.removeEventListener(\"mousedown\", handleClickOutside);\n     };\n   }, []);\n \n-  if (!connected) return null; // No mostrar el menú si la wallet no está conectada\n+  if (connected) return null; // No mostrar el menú si la wallet no está conectada\n \n   return (\n     <div className=\"relative\">\n       <button\n"
                },
                {
                    "date": 1728772182683,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n       document.removeEventListener(\"mousedown\", handleClickOutside);\n     };\n   }, []);\n \n-  if (connected) return null; // No mostrar el menú si la wallet no está conectada\n+  if (!connected) return null; // No mostrar el menú si la wallet no está conectada\n \n   return (\n     <div className=\"relative\">\n       <button\n"
                },
                {
                    "date": 1728776836995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,10 +29,15 @@\n     return () => {\n       document.removeEventListener(\"mousedown\", handleClickOutside);\n     };\n   }, []);\n-\n+  useEffect(() => {\n+    if (connected) {\n+      setIsOpen(true);\n+    }\n+  }, [connected]);\n   if (!connected) return null; // No mostrar el menú si la wallet no está conectada\n+//mostrar el menu si la wallet esta conectada y se actualiza la pagina\n \n   return (\n     <div className=\"relative\">\n       <button\n"
                },
                {
                    "date": 1728776892690,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,13 +29,9 @@\n     return () => {\n       document.removeEventListener(\"mousedown\", handleClickOutside);\n     };\n   }, []);\n-  useEffect(() => {\n-    if (connected) {\n-      setIsOpen(true);\n-    }\n-  }, [connected]);\n+\n   if (!connected) return null; // No mostrar el menú si la wallet no está conectada\n //mostrar el menu si la wallet esta conectada y se actualiza la pagina\n \n   return (\n"
                },
                {
                    "date": 1728852384550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,27 @@\n import { useEffect, useRef, useState } from \"react\";\n import Image from \"next/image\";\n import { useWalletContext } from \"./walletContext\";\n+import Header from \"@/components/header\";\n \n+\n+\n const DropdownMenu = () => {\n \n   const [isOpen, setIsOpen] = useState(false);\n   const menuRef = useRef<HTMLDivElement>(null);\n   const { connected } = useWalletContext(); // Usa el contexto\n+// Usa el contexto\n+    useEffect(() => {\n+      // Forzar la actualización del estado del menú basado en la conexión\n+      if (connected) {\n+        console.log(\"Wallet conectada, mostrar el menú\");\n+      } else {\n+        console.log(\"Wallet desconectada, ocultar el menú\");\n+      }\n+    }, [connected]);\n+  }\n+\n   \n \n   const toggleMenu = () => {\n     setIsOpen((prev) => !prev);\n"
                },
                {
                    "date": 1728852471008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,12 +18,9 @@\n       } else {\n         console.log(\"Wallet desconectada, ocultar el menú\");\n       }\n     }, [connected]);\n-  }\n-\n   \n-\n   const toggleMenu = () => {\n     setIsOpen((prev) => !prev);\n   };\n \n"
                },
                {
                    "date": 1728852477340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,8 @@\n import { useEffect, useRef, useState } from \"react\";\n import Image from \"next/image\";\n import { useWalletContext } from \"./walletContext\";\n-import Header from \"@/components/header\";\n \n-\n-\n const DropdownMenu = () => {\n \n   const [isOpen, setIsOpen] = useState(false);\n   const menuRef = useRef<HTMLDivElement>(null);\n"
                },
                {
                    "date": 1728852655597,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n       // Forzar la actualización del estado del menú basado en la conexión\n       if (connected) {\n         console.log(\"Wallet conectada, mostrar el menú\");\n       } else {\n-        console.log(\"Wallet desconectada, ocultar el menú\");\n+         return null;\n       }\n     }, [connected]);\n   \n   const toggleMenu = () => {\n@@ -38,9 +38,9 @@\n       document.removeEventListener(\"mousedown\", handleClickOutside);\n     };\n   }, []);\n \n-  if (!connected) return null; // No mostrar el menú si la wallet no está conectada\n+   // No mostrar el menú si la wallet no está conectada\n //mostrar el menu si la wallet esta conectada y se actualiza la pagina\n \n   return (\n     <div className=\"relative\">\n"
                },
                {
                    "date": 1728852767600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n       // Forzar la actualización del estado del menú basado en la conexión\n       if (connected) {\n         console.log(\"Wallet conectada, mostrar el menú\");\n       } else {\n-         return null;\n+        console.log(\"Wallet desconectada, ocultar el menú\");\n       }\n     }, [connected]);\n   \n   const toggleMenu = () => {\n@@ -38,9 +38,9 @@\n       document.removeEventListener(\"mousedown\", handleClickOutside);\n     };\n   }, []);\n \n-   // No mostrar el menú si la wallet no está conectada\n+  if (!connected) return null; // No mostrar el menú si la wallet no está conectada\n //mostrar el menu si la wallet esta conectada y se actualiza la pagina\n \n   return (\n     <div className=\"relative\">\n"
                },
                {
                    "date": 1728852892101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,18 +6,9 @@\n \n   const [isOpen, setIsOpen] = useState(false);\n   const menuRef = useRef<HTMLDivElement>(null);\n   const { connected } = useWalletContext(); // Usa el contexto\n-// Usa el contexto\n-    useEffect(() => {\n-      // Forzar la actualización del estado del menú basado en la conexión\n-      if (connected) {\n-        console.log(\"Wallet conectada, mostrar el menú\");\n-      } else {\n-        console.log(\"Wallet desconectada, ocultar el menú\");\n-      }\n-    }, [connected]);\n-  \n+\n   const toggleMenu = () => {\n     setIsOpen((prev) => !prev);\n   };\n \n"
                },
                {
                    "date": 1728853144826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,9 @@\n \n   const [isOpen, setIsOpen] = useState(false);\n   const menuRef = useRef<HTMLDivElement>(null);\n   const { connected } = useWalletContext(); // Usa el contexto\n+  \n \n   const toggleMenu = () => {\n     setIsOpen((prev) => !prev);\n   };\n"
                },
                {
                    "date": 1729003496442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,37 +89,9 @@\n                   </p>\n                 </a>\n               </div>\n               {/* Repite el bloque anterior para otras opciones del menú */}\n-              <div\n-                className=\"group relative flex gap-x-6 rounded-lg p-4 hover:bg-gray-50 cursor-pointer\"\n-                onClick={() => handleOptionClick(\"Reports\")}\n-              >\n-                <div className=\"mt-1 flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\n-                  <svg\n-                    className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\"\n-                    fill=\"none\"\n-                    viewBox=\"0 0 24 24\"\n-                    strokeWidth=\"1.5\"\n-                    stroke=\"currentColor\"\n-                    aria-hidden=\"true\"\n-                  >\n-                    <path\n-                      strokeLinecap=\"round\"\n-                      strokeLinejoin=\"round\"\n-                      d=\"M3 8l9-5 9 5v13l-9 5-9-5V8z\"\n-                    />\n-                  </svg>\n-                </div>\n-                <div>\n-                  <span className=\"font-semibold text-gray-900\">\n-                    Registrar reciclaje\n-                  </span>\n-                  <p className=\"mt-1 text-gray-600\">\n-                    Registra tu reciclaje y obtén tokens de recompensa.\n-                  </p>\n-                </div>\n-              </div>\n+              \n               {/* Agrega más opciones según sea necesario */}\n             </div>\n           </div>\n         </div>\n"
                },
                {
                    "date": 1729003501651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,11 +88,8 @@\n                     Join us today and be a part of the recycling revolution!\n                   </p>\n                 </a>\n               </div>\n-              {/* Repite el bloque anterior para otras opciones del menú */}\n-              \n-              {/* Agrega más opciones según sea necesario */}\n             </div>\n           </div>\n         </div>\n       )}\n"
                }
            ],
            "date": 1728431429895,
            "name": "Commit-0",
            "content": "import { useEffect, useRef, useState } from \"react\";\nimport Image from \"next/image\";\nimport { useWalletContext } from \"./walletContext\";\n\nconst DropdownMenu = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const menuRef = useRef<HTMLDivElement>(null);\n  const { connected } = useWalletContext(); // Usa el contexto\n\n  const toggleMenu = () => {\n    setIsOpen((prev) => !prev);\n  };\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n      setIsOpen(false);\n    }\n  };\n\n  const handleOptionClick = (option: string) => {\n    console.log(`Opción seleccionada: ${option}`);\n    setIsOpen(false);\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n\n  if (!connected) return null; // No mostrar el menú si la wallet no está conectada\n\n  return (\n    <div className=\"relative\">\n      <button\n        type=\"button\"\n        className=\"inline-flex items-center gap-x-2 text-lg font-bold leading-50 text-white color-primary rounded-full px-6 py-2 shadow-md transform hover:opacity-70 transition ease-in-out hover:-translate-y-1 hover:scale-110 \n          duration-300\"\n        onClick={toggleMenu}\n      >\n        <span className=\"-mx-3 block px-2 text-lg font-bold leading-7 text-white w-full\">\n          Menu\n        </span>\n        <svg\n          className=\"h-5 w-5\"\n          viewBox=\"0 0 20 20\"\n          fill=\"currentColor\"\n          aria-hidden=\"true\"\n        >\n          <path\n            fillRule=\"evenodd\"\n            d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\"\n            clipRule=\"evenodd\"\n          />\n        </svg>\n      </button>\n\n      {isOpen && (\n        <div\n          ref={menuRef}\n          className={`absolute left-1/2 z-10 mt-5 flex w-screen max-w-xs -translate-x-1/2 px-4 transition-opacity duration-200 ease-in-out ${\n            isOpen ? \"opacity-100\" : \"opacity-0\"\n          }`}\n        >\n          <div className=\"w-screen max-w-xs flex-auto overflow-hidden rounded-3xl bg-blue-100 text-sm leading-6 shadow-lg ring-1 ring-gray-900/5\">\n            <div className=\"p-4\">\n              <div\n                className=\"group relative flex gap-x-6 rounded-lg p-4 hover:bg-gray-50 cursor-pointer\"\n                onClick={() => handleOptionClick(\"Analytics\")}\n              >\n                <div className=\"mt-1 flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\n                  <Image\n                    className=\"text-gray-600 group-hover:text-white\"\n                    src=\"/icons/Person.svg\"\n                    alt=\"Analytics\"\n                    width={24}\n                    height={24}\n                  />\n                </div>\n                <a href=\"/register\">\n                  <span className=\"font-semibold text-gray-900\">Register</span>\n\n                  <p className=\"mt-1 text-gray-600\">\n                    Join us today and be a part of the recycling revolution!\n                  </p>\n                </a>\n              </div>\n              {/* Repite el bloque anterior para otras opciones del menú */}\n              <div\n                className=\"group relative flex gap-x-6 rounded-lg p-4 hover:bg-gray-50 cursor-pointer\"\n                onClick={() => handleOptionClick(\"Reports\")}\n              >\n                <div className=\"mt-1 flex h-11 w-11 flex-none items-center justify-center rounded-lg bg-gray-50 group-hover:bg-white\">\n                  <svg\n                    className=\"h-6 w-6 text-gray-600 group-hover:text-indigo-600\"\n                    fill=\"none\"\n                    viewBox=\"0 0 24 24\"\n                    strokeWidth=\"1.5\"\n                    stroke=\"currentColor\"\n                    aria-hidden=\"true\"\n                  >\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      d=\"M3 8l9-5 9 5v13l-9 5-9-5V8z\"\n                    />\n                  </svg>\n                </div>\n                <div>\n                  <span className=\"font-semibold text-gray-900\">\n                    Registrar reciclaje\n                  </span>\n                  <p className=\"mt-1 text-gray-600\">\n                    Registra tu reciclaje y obtén tokens de recompensa.\n                  </p>\n                </div>\n              </div>\n              {/* Agrega más opciones según sea necesario */}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DropdownMenu;\n"
        }
    ]
}