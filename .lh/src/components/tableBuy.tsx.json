{
    "sourceFile": "src/components/tableBuy.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1728970035825,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728970061117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n import ADDRESS from \"@/utils/data\";\n \n interface Recycling {\n-id: number;\n-owner: string;\n+  id: number;\n+  owner: string;\n   type: string;\n   ubication: string;\n   weight: number;\n   pricePound: number;\n@@ -15,14 +15,15 @@\n   available: boolean;\n }\n \n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n-//const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n \n const TableBuy = () => {\n   const { account } = useWallet();\n   const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n-  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n+  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(\n+    null\n+  );\n \n   useEffect(() => {\n     if (account) {\n       getRecycling();\n@@ -36,9 +37,8 @@\n       functionArguments: [`${account?.address}`],\n     };\n     try {\n       const result: any = await aptos.view({ payload });\n-      console.log(\"Resultado de reciclajes:\", result[0]);\n \n       if (Array.isArray(result) && result.length > 0) {\n         const extractedRecyclings: Recycling[][] = result.map(\n           (recyclingArray: any[]) =>\n@@ -88,44 +88,73 @@\n             </thead>\n             <tbody>\n               {recyclings.flatMap((recyclingArray, index) =>\n                 recyclingArray.map((recycling, subIndex) => (\n-                  <tr \n-                    key={`${index}-${subIndex}`} \n-                    onClick={() => handleRowClick(recycling)} \n+                  <tr\n+                    key={`${index}-${subIndex}`}\n+                    onClick={() => handleRowClick(recycling)}\n                     className=\"hover:bg-blue-200 cursor-pointer transition-colors duration-200\"\n                   >\n                     <td className=\"px-4 py-2 border\">{recycling.type}</td>\n                     <td className=\"px-4 py-2 border\">{recycling.ubication}</td>\n                     <td className=\"px-4 py-2 border\">{recycling.weight}</td>\n                     <td className=\"px-4 py-2 border\">{recycling.pricePound}</td>\n-                    <td className=\"px-4 py-2 border\">{recycling.observations}</td>\n-                    <td className=\"px-4 py-2 border\">{recycling.available ? \"Sí\" : \"No\"}</td>\n+                    <td className=\"px-4 py-2 border\">\n+                      {recycling.observations}\n+                    </td>\n+                    <td className=\"px-4 py-2 border\">\n+                      {recycling.available ? \"Sí\" : \"No\"}\n+                    </td>\n                   </tr>\n                 ))\n               )}\n               {recyclings.length === 0 && (\n                 <tr>\n-                  <td colSpan={6} className=\"text-center\">No hay reciclajes disponibles</td>\n+                  <td colSpan={6} className=\"text-center\">\n+                    No hay reciclajes disponibles\n+                  </td>\n                 </tr>\n               )}\n             </tbody>\n           </table>\n         )}\n-        \n+\n         {selectedRecycling && (\n           <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center\">\n             <div className=\" bg-white rounded-lg p-6 w-96 max-w-lg md:max-w-xl lg:max-w-2xl\">\n               <h2 className=\"text-xl mb-4\">Recycling Overview</h2>\n-              <p><strong>Type:</strong> {selectedRecycling.type}</p>\n-              <p><strong>Ubication:</strong> {selectedRecycling.ubication}</p>\n-              <p><strong>Weight:</strong> {selectedRecycling.weight}</p>\n-              <p><strong>Price Per Pound:</strong> {selectedRecycling.pricePound}</p>\n-              <p><strong>Observations:</strong> {selectedRecycling.observations}</p>\n-              <p><strong>Available:</strong> {selectedRecycling.available ? \"Sí\" : \"No\"}</p>\n+              <p>\n+                <strong>Type:</strong> {selectedRecycling.type}\n+              </p>\n+              <p>\n+                <strong>Ubication:</strong> {selectedRecycling.ubication}\n+              </p>\n+              <p>\n+                <strong>Weight:</strong> {selectedRecycling.weight}\n+              </p>\n+              <p>\n+                <strong>Price Per Pound:</strong> {selectedRecycling.pricePound}\n+              </p>\n+              <p>\n+                <strong>Observations:</strong> {selectedRecycling.observations}\n+              </p>\n+              <p>\n+                <strong>Available:</strong>{\" \"}\n+                {selectedRecycling.available ? \"Sí\" : \"No\"}\n+              </p>\n               <div className=\"flex justify-center mt-4 space-x-4\">\n-              <button onClick={handleCloseModal} className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\">Close</button>\n-              <button onClick={handleCloseModal} className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\">See Chat</button>\n+                <button\n+                  onClick={handleCloseModal}\n+                  className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\"\n+                >\n+                  Close\n+                </button>\n+                <button\n+                  onClick={handleCloseModal}\n+                  className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\"\n+                >\n+                  See Chat\n+                </button>\n               </div>\n             </div>\n           </div>\n         )}\n"
                },
                {
                    "date": 1728970085513,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n       if (Array.isArray(result) && result.length > 0) {\n         const extractedRecyclings: Recycling[][] = result.map(\n           (recyclingArray: any[]) =>\n             recyclingArray.map((recycling: any) => ({\n+              id: recycling.id,\n               owner: recycling.owner,\n               type: recycling.type || \"N/A\",\n               ubication: recycling.ubication || \"N/A\",\n               weight: recycling.weight || 0,\n"
                },
                {
                    "date": 1728970546387,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,13 +78,15 @@\n         {recyclings.length > 0 && (\n           <table className=\"min-w-full bg-white border border-gray-200\">\n             <thead className=\"bg-blue-500 text-white\">\n               <tr>\n+                <th className=\"px-4 py-2 border\">Id Recycling</th>\n                 <th className=\"px-4 py-2 border\">Type</th>\n                 <th className=\"px-4 py-2 border\">Ubication</th>\n                 <th className=\"px-4 py-2 border\">Weight</th>\n                 <th className=\"px-4 py-2 border\">Price Per Pound</th>\n                 <th className=\"px-4 py-2 border\">Observations</th>\n+                <th className=\"px-4 py-2 border\">Total Price</th>\n                 <th className=\"px-4 py-2 border\">Available</th>\n               </tr>\n             </thead>\n             <tbody>\n"
                },
                {
                    "date": 1728970759534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,8 +12,9 @@\n   pricePound: number;\n   observations: string;\n   chats: [];\n   available: boolean;\n+  totalPrice: number;\n }\n \n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n \n@@ -51,8 +52,9 @@\n               pricePound: recycling.pricePound || 0,\n               observations: recycling.observations || \"N/A\",\n               chats: recycling.chats || [],\n               available: recycling.available || false,\n+              totalPrice: (recycling.weight || 0) * (recycling.pricePound || 0),\n             }))\n         );\n \n         setRecyclings(extractedRecyclings);\n@@ -84,10 +86,10 @@\n                 <th className=\"px-4 py-2 border\">Ubication</th>\n                 <th className=\"px-4 py-2 border\">Weight</th>\n                 <th className=\"px-4 py-2 border\">Price Per Pound</th>\n                 <th className=\"px-4 py-2 border\">Observations</th>\n+                <th className=\"px-4 py-2 border\">Available</th>\n                 <th className=\"px-4 py-2 border\">Total Price</th>\n-                <th className=\"px-4 py-2 border\">Available</th>\n               </tr>\n             </thead>\n             <tbody>\n               {recyclings.flatMap((recyclingArray, index) =>\n@@ -96,8 +98,9 @@\n                     key={`${index}-${subIndex}`}\n                     onClick={() => handleRowClick(recycling)}\n                     className=\"hover:bg-blue-200 cursor-pointer transition-colors duration-200\"\n                   >\n+                    <td className=\"px-4 py-2 border\">{recycling.id}</td>\n                     <td className=\"px-4 py-2 border\">{recycling.type}</td>\n                     <td className=\"px-4 py-2 border\">{recycling.ubication}</td>\n                     <td className=\"px-4 py-2 border\">{recycling.weight}</td>\n                     <td className=\"px-4 py-2 border\">{recycling.pricePound}</td>\n@@ -106,8 +109,9 @@\n                     </td>\n                     <td className=\"px-4 py-2 border\">\n                       {recycling.available ? \"Sí\" : \"No\"}\n                     </td>\n+                    <th className=\"px-4 py-2 border\">Total Price</th>\n                   </tr>\n                 ))\n               )}\n               {recyclings.length === 0 && (\n@@ -137,8 +141,11 @@\n               <p>\n                 <strong>Price Per Pound:</strong> {selectedRecycling.pricePound}\n               </p>\n               <p>\n+                <strong>Total Price:</strong> {selectedRecycling.priceP}\n+              </p>\n+              <p>\n                 <strong>Observations:</strong> {selectedRecycling.observations}\n               </p>\n               <p>\n                 <strong>Available:</strong>{\" \"}\n"
                },
                {
                    "date": 1728971054836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n                     </td>\n                     <td className=\"px-4 py-2 border\">\n                       {recycling.available ? \"Sí\" : \"No\"}\n                     </td>\n-                    <th className=\"px-4 py-2 border\">Total Price</th>\n+                    <td className=\"px-4 py-2 border\">{recycling.pricePound * recycling.weight}</td>\n                   </tr>\n                 ))\n               )}\n               {recyclings.length === 0 && (\n@@ -129,8 +129,11 @@\n           <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center\">\n             <div className=\" bg-white rounded-lg p-6 w-96 max-w-lg md:max-w-xl lg:max-w-2xl\">\n               <h2 className=\"text-xl mb-4\">Recycling Overview</h2>\n               <p>\n+                <strong>Id Recycling:</strong> {selectedRecycling.type}\n+              </p>\n+              <p>\n                 <strong>Type:</strong> {selectedRecycling.type}\n               </p>\n               <p>\n                 <strong>Ubication:</strong> {selectedRecycling.ubication}\n@@ -141,17 +144,17 @@\n               <p>\n                 <strong>Price Per Pound:</strong> {selectedRecycling.pricePound}\n               </p>\n               <p>\n-                <strong>Total Price:</strong> {selectedRecycling.priceP}\n-              </p>\n-              <p>\n                 <strong>Observations:</strong> {selectedRecycling.observations}\n               </p>\n               <p>\n                 <strong>Available:</strong>{\" \"}\n                 {selectedRecycling.available ? \"Sí\" : \"No\"}\n               </p>\n+              <p>\n+                <strong>Total Price:</strong> {selectedRecycling.pricePound}\n+              </p>\n               <div className=\"flex justify-center mt-4 space-x-4\">\n                 <button\n                   onClick={handleCloseModal}\n                   className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\"\n"
                },
                {
                    "date": 1728971685155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n                 ))\n               )}\n               {recyclings.length === 0 && (\n                 <tr>\n-                  <td colSpan={6} className=\"text-center\">\n+                  <td colSpan={8} className=\"text-center\">\n                     No hay reciclajes disponibles\n                   </td>\n                 </tr>\n               )}\n"
                },
                {
                    "date": 1728971998643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -129,9 +129,9 @@\n           <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center\">\n             <div className=\" bg-white rounded-lg p-6 w-96 max-w-lg md:max-w-xl lg:max-w-2xl\">\n               <h2 className=\"text-xl mb-4\">Recycling Overview</h2>\n               <p>\n-                <strong>Id Recycling:</strong> {selectedRecycling.type}\n+                <strong>Id Recycling:</strong> {selectedRecycling.id}\n               </p>\n               <p>\n                 <strong>Type:</strong> {selectedRecycling.type}\n               </p>\n"
                },
                {
                    "date": 1728972191777,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -127,9 +127,9 @@\n \n         {selectedRecycling && (\n           <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center\">\n             <div className=\" bg-white rounded-lg p-6 w-96 max-w-lg md:max-w-xl lg:max-w-2xl\">\n-              <h2 className=\"text-xl mb-4\">Recycling Overview</h2>\n+              <h2 className=\"text-xl mb-4\">Recycling</h2>\n               <p>\n                 <strong>Id Recycling:</strong> {selectedRecycling.id}\n               </p>\n               <p>\n"
                },
                {
                    "date": 1729044049009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,20 @@\n   const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(\n     null\n   );\n \n+  const filterInactiveRecyclings = (recyclingData: Recycling[]) => {\n+    // Filtrar reciclajes inhabilitados\n+    const inactiveRecyclings = recyclingData\n+      .flat() // Aplana el array de arrays\n+      .filter((recycling: Recycling) => !recycling.available); // Filtrar los inhabilitados (available = false)\n+\n+    // Guardar en el estado\n+    setRecyclings(inactiveRecyclings);\n+\n+    console.log(\"Inactive recyclings:\", inactiveRecyclings); // Solo para verificar que funcionó\n+  };\n+\n   useEffect(() => {\n     if (account) {\n       getRecycling();\n     }\n"
                },
                {
                    "date": 1729044069483,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n       .flat() // Aplana el array de arrays\n       .filter((recycling: Recycling) => !recycling.available); // Filtrar los inhabilitados (available = false)\n \n     // Guardar en el estado\n-    setRecyclings(inactiveRecyclings);\n+    setRecyclings([inactiveRecyclings]);\n \n     console.log(\"Inactive recyclings:\", inactiveRecyclings); // Solo para verificar que funcionó\n   };\n \n"
                },
                {
                    "date": 1729044076835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n   const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(\n     null\n   );\n \n-  const filterInactiveRecyclings = (recyclingData: Recycling[]) => {\n+  const filterInactiveRecyclings = (recyclingData: Recycling[][]) => {\n     // Filtrar reciclajes inhabilitados\n     const inactiveRecyclings = recyclingData\n       .flat() // Aplana el array de arrays\n       .filter((recycling: Recycling) => !recycling.available); // Filtrar los inhabilitados (available = false)\n"
                },
                {
                    "date": 1729044094079,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,10 @@\n               totalPrice: (recycling.weight || 0) * (recycling.pricePound || 0),\n             }))\n         );\n \n-        setRecyclings(extractedRecyclings);\n+        //setRecyclings(extractedRecyclings);\n+        filterInactiveRecyclings(extractedRecyclings);\n       } else {\n         console.error(\"No se encontraron reciclajes\");\n       }\n     } catch (error) {\n"
                },
                {
                    "date": 1729045223729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -114,17 +114,17 @@\n                   >\n                     <td className=\"px-4 py-2 border\">{recycling.id}</td>\n                     <td className=\"px-4 py-2 border\">{recycling.type}</td>\n                     <td className=\"px-4 py-2 border\">{recycling.ubication}</td>\n-                    <td className=\"px-4 py-2 border\">{recycling.weight}</td>\n-                    <td className=\"px-4 py-2 border\">{recycling.pricePound}</td>\n+                    <td className=\"px-4 py-2 border\">{recycling.weight} octa</td>\n+                    <td className=\"px-4 py-2 border\">{recycling.pricePound}octa</td>\n                     <td className=\"px-4 py-2 border\">\n                       {recycling.observations}\n                     </td>\n                     <td className=\"px-4 py-2 border\">\n                       {recycling.available ? \"Sí\" : \"No\"}\n                     </td>\n-                    <td className=\"px-4 py-2 border\">{recycling.pricePound * recycling.weight}</td>\n+                    <td className=\"px-4 py-2 border\">{recycling.pricePound * recycling.weight}octa</td>\n                   </tr>\n                 ))\n               )}\n               {recyclings.length === 0 && (\n@@ -154,9 +154,9 @@\n               <p>\n                 <strong>Weight:</strong> {selectedRecycling.weight}\n               </p>\n               <p>\n-                <strong>Price Per Pound:</strong> {selectedRecycling.pricePound}\n+                <strong>Price Per Pound:</strong> {selectedRecycling.pricePound}octa\n               </p>\n               <p>\n                 <strong>Observations:</strong> {selectedRecycling.observations}\n               </p>\n@@ -164,9 +164,9 @@\n                 <strong>Available:</strong>{\" \"}\n                 {selectedRecycling.available ? \"Sí\" : \"No\"}\n               </p>\n               <p>\n-                <strong>Total Price:</strong> {selectedRecycling.pricePound}\n+                <strong>Total Price:</strong> {selectedRecycling.pricePound}octa\n               </p>\n               <div className=\"flex justify-center mt-4 space-x-4\">\n                 <button\n                   onClick={handleCloseModal}\n"
                }
            ],
            "date": 1728970035825,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from \"react\";\nimport { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\nimport { useWallet } from \"@aptos-labs/wallet-adapter-react\";\nimport ADDRESS from \"@/utils/data\";\n\ninterface Recycling {\nid: number;\nowner: string;\n  type: string;\n  ubication: string;\n  weight: number;\n  pricePound: number;\n  observations: string;\n  chats: [];\n  available: boolean;\n}\n\nexport const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n//const ADDRESS = \"0xfed39611e5ac476394ec5799b1e0ed2a577a47dcfa522ab92df24d5667bc4720\";\n\nconst TableBuy = () => {\n  const { account } = useWallet();\n  const [recyclings, setRecyclings] = useState<Recycling[][]>([]);\n  const [selectedRecycling, setSelectedRecycling] = useState<Recycling | null>(null);\n\n  useEffect(() => {\n    if (account) {\n      getRecycling();\n    }\n  }, [account]);\n\n  const getRecycling = async () => {\n    const payload = {\n      function:\n        `${ADDRESS}::recicly::get_all_recyclings` as `${string}::${string}::${string}`,\n      functionArguments: [`${account?.address}`],\n    };\n    try {\n      const result: any = await aptos.view({ payload });\n      console.log(\"Resultado de reciclajes:\", result[0]);\n\n      if (Array.isArray(result) && result.length > 0) {\n        const extractedRecyclings: Recycling[][] = result.map(\n          (recyclingArray: any[]) =>\n            recyclingArray.map((recycling: any) => ({\n              owner: recycling.owner,\n              type: recycling.type || \"N/A\",\n              ubication: recycling.ubication || \"N/A\",\n              weight: recycling.weight || 0,\n              pricePound: recycling.pricePound || 0,\n              observations: recycling.observations || \"N/A\",\n              chats: recycling.chats || [],\n              available: recycling.available || false,\n            }))\n        );\n\n        setRecyclings(extractedRecyclings);\n      } else {\n        console.error(\"No se encontraron reciclajes\");\n      }\n    } catch (error) {\n      console.error(\"Error al obtener reciclajes:\", error);\n    }\n  };\n\n  const handleRowClick = (recycling: Recycling) => {\n    setSelectedRecycling(recycling);\n  };\n\n  const handleCloseModal = () => {\n    setSelectedRecycling(null);\n  };\n\n  return (\n    <div className=\"flex justify-center\">\n      <div className=\"w-full max-w-3xl\">\n        {recyclings.length > 0 && (\n          <table className=\"min-w-full bg-white border border-gray-200\">\n            <thead className=\"bg-blue-500 text-white\">\n              <tr>\n                <th className=\"px-4 py-2 border\">Type</th>\n                <th className=\"px-4 py-2 border\">Ubication</th>\n                <th className=\"px-4 py-2 border\">Weight</th>\n                <th className=\"px-4 py-2 border\">Price Per Pound</th>\n                <th className=\"px-4 py-2 border\">Observations</th>\n                <th className=\"px-4 py-2 border\">Available</th>\n              </tr>\n            </thead>\n            <tbody>\n              {recyclings.flatMap((recyclingArray, index) =>\n                recyclingArray.map((recycling, subIndex) => (\n                  <tr \n                    key={`${index}-${subIndex}`} \n                    onClick={() => handleRowClick(recycling)} \n                    className=\"hover:bg-blue-200 cursor-pointer transition-colors duration-200\"\n                  >\n                    <td className=\"px-4 py-2 border\">{recycling.type}</td>\n                    <td className=\"px-4 py-2 border\">{recycling.ubication}</td>\n                    <td className=\"px-4 py-2 border\">{recycling.weight}</td>\n                    <td className=\"px-4 py-2 border\">{recycling.pricePound}</td>\n                    <td className=\"px-4 py-2 border\">{recycling.observations}</td>\n                    <td className=\"px-4 py-2 border\">{recycling.available ? \"Sí\" : \"No\"}</td>\n                  </tr>\n                ))\n              )}\n              {recyclings.length === 0 && (\n                <tr>\n                  <td colSpan={6} className=\"text-center\">No hay reciclajes disponibles</td>\n                </tr>\n              )}\n            </tbody>\n          </table>\n        )}\n        \n        {selectedRecycling && (\n          <div className=\"fixed inset-0 bg-gray-800 bg-opacity-50 flex justify-center items-center\">\n            <div className=\" bg-white rounded-lg p-6 w-96 max-w-lg md:max-w-xl lg:max-w-2xl\">\n              <h2 className=\"text-xl mb-4\">Recycling Overview</h2>\n              <p><strong>Type:</strong> {selectedRecycling.type}</p>\n              <p><strong>Ubication:</strong> {selectedRecycling.ubication}</p>\n              <p><strong>Weight:</strong> {selectedRecycling.weight}</p>\n              <p><strong>Price Per Pound:</strong> {selectedRecycling.pricePound}</p>\n              <p><strong>Observations:</strong> {selectedRecycling.observations}</p>\n              <p><strong>Available:</strong> {selectedRecycling.available ? \"Sí\" : \"No\"}</p>\n              <div className=\"flex justify-center mt-4 space-x-4\">\n              <button onClick={handleCloseModal} className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\">Close</button>\n              <button onClick={handleCloseModal} className=\"mt-4 px-4 py-2 block w-32 rounded-md text-center bg-orange-600 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 transition-transform transform hover:scale-105 duration-300\">See Chat</button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TableBuy;\n"
        }
    ]
}