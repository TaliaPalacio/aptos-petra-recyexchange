{
    "sourceFile": "src/pages/chatPrueba/chatPrueba.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1728873357251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728873511222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { Aptos, AptosConfig, Network, Account } from \"@aptos-labs/ts-sdk\";\n import { useEffect, useState } from 'react';\n import { useWallet } from '@aptos-labs/wallet-adapter-react';\n+import axios from 'axios';\n \n export const aptos= new Aptos(new AptosConfig({network: Network.TESTNET}));\n const ADDRESS = \"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\"\n const URL = \"https://api.testnet.aptoslabs.com/v1/graphql\";\n@@ -10,11 +11,60 @@\n \n     const {connect, account, connected, disconnect, signAndSubmitTransaction,\n         signTransaction, signMessage, \n         signMessageAndVerify} = useWallet();\n+\n+        const getChat = async () =>{\n+            const payload = {\n+                function: `${ADDRESS}::recicly::get_chat` as `${string}::${string}::${string}`,\n+                functionArguments: [`${account?.address}`, 4]\n+            }\n+            let result = await aptos.view({payload});\n+            console.log(result);\n+        }\n+\n+        const queryIndexer = async (contractAddress) => {\n+            try {\n+                const response = await axios.post(URL, {\n+                    query: `\n+                        query MyQuery($contractAddress: String!) {\n+                            account_transactions(\n+                                where: { account_address: { _eq: $contractAddress } }\n+                            ) {\n+                                account_address\n+                                user_transaction {\n+                                    block_height\n+                                    entry_function_id_str\n+                                    epoch\n+                                    expiration_timestamp_secs\n+                                    gas_unit_price\n+                                    max_gas_amount\n+                                    parent_signature_type\n+                                    sender\n+                                    sequence_number\n+                                    timestamp\n+                                    version\n+                                }\n+                                transaction_version\n+                            }\n+                        }\n+                    `,\n+                    variables: {\n+                        contractAddress: contractAddress,\n+                    },\n+                });\n         \n+                console.log(response.data);\n+            } catch (error) {\n+                console.error(\"Error:\", error.response?.data?.errors || error.message);\n+            }\n+        };\n+      \n+        \n   return (\n-    <div>chatPrueba</div>\n+    <div>\n+         <button onClick={getChat}>Obtener chat</button>\n+    </div>\n   )\n }\n \n export default chatPrueba\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728873526958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,8 +62,10 @@\n         \n   return (\n     <div>\n          <button onClick={getChat}>Obtener chat</button>\n+         <button onClick={() => queryIndexer(\"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\")}>Consultar Bloque</button>\n+\n     </div>\n   )\n }\n \n"
                },
                {
                    "date": 1728873585206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,32 +1,40 @@\n import { Aptos, AptosConfig, Network, Account } from \"@aptos-labs/ts-sdk\";\n-import { useEffect, useState } from 'react';\n-import { useWallet } from '@aptos-labs/wallet-adapter-react';\n-import axios from 'axios';\n+import { useEffect, useState } from \"react\";\n+import { useWallet } from \"@aptos-labs/wallet-adapter-react\";\n+import axios from \"axios\";\n \n-export const aptos= new Aptos(new AptosConfig({network: Network.TESTNET}));\n-const ADDRESS = \"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\"\n+export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n+const ADDRESS =\n+  \"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\";\n const URL = \"https://api.testnet.aptoslabs.com/v1/graphql\";\n \n const chatPrueba = () => {\n+  const {\n+    connect,\n+    account,\n+    connected,\n+    disconnect,\n+    signAndSubmitTransaction,\n+    signTransaction,\n+    signMessage,\n+    signMessageAndVerify,\n+  } = useWallet();\n \n-    const {connect, account, connected, disconnect, signAndSubmitTransaction,\n-        signTransaction, signMessage, \n-        signMessageAndVerify} = useWallet();\n+  const getChat = async () => {\n+    const payload = {\n+      function:\n+        `${ADDRESS}::recicly::get_chat` as `${string}::${string}::${string}`,\n+      functionArguments: [`${account?.address}`, 4],\n+    };\n+    let result = await aptos.view({ payload });\n+    console.log(result);\n+  };\n \n-        const getChat = async () =>{\n-            const payload = {\n-                function: `${ADDRESS}::recicly::get_chat` as `${string}::${string}::${string}`,\n-                functionArguments: [`${account?.address}`, 4]\n-            }\n-            let result = await aptos.view({payload});\n-            console.log(result);\n-        }\n-\n-        const queryIndexer = async (contractAddress) => {\n-            try {\n-                const response = await axios.post(URL, {\n-                    query: `\n+  const queryIndexer = async (contractAddress: string) => {\n+    try {\n+      const response = await axios.post(URL, {\n+        query: `\n                         query MyQuery($contractAddress: String!) {\n                             account_transactions(\n                                 where: { account_address: { _eq: $contractAddress } }\n                             ) {\n@@ -47,26 +55,33 @@\n                                 transaction_version\n                             }\n                         }\n                     `,\n-                    variables: {\n-                        contractAddress: contractAddress,\n-                    },\n-                });\n-        \n-                console.log(response.data);\n-            } catch (error) {\n-                console.error(\"Error:\", error.response?.data?.errors || error.message);\n-            }\n-        };\n-      \n-        \n+        variables: {\n+          contractAddress: contractAddress,\n+        },\n+      });\n+\n+      console.log(response.data);\n+    } catch (error) {\n+      const err = error as any;\n+      console.error(\"Error:\", err.response?.data?.errors || err.message);\n+    }\n\\ No newline at end of file\n+  };\n+\n   return (\n     <div>\n-         <button onClick={getChat}>Obtener chat</button>\n-         <button onClick={() => queryIndexer(\"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\")}>Consultar Bloque</button>\n-\n+      <button onClick={getChat}>Obtener chat</button>\n+      <button\n+        onClick={() =>\n+          queryIndexer(\n+            \"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\"\n+          )\n+        }\n+      >\n+        Consultar Bloque\n+      </button>\n     </div>\n-  )\n-}\n+  );\n+};\n \n-export default chatPrueba\n+export default chatPrueba;\n"
                },
                {
                    "date": 1728873726627,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,5 +83,5 @@\n     </div>\n   );\n };\n \n-export default chatPrueba;\n\\ No newline at end of file\n+export default chatPrueba;\n"
                }
            ],
            "date": 1728873357251,
            "name": "Commit-0",
            "content": "import { Aptos, AptosConfig, Network, Account } from \"@aptos-labs/ts-sdk\";\nimport { useEffect, useState } from 'react';\nimport { useWallet } from '@aptos-labs/wallet-adapter-react';\n\nexport const aptos= new Aptos(new AptosConfig({network: Network.TESTNET}));\nconst ADDRESS = \"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\"\nconst URL = \"https://api.testnet.aptoslabs.com/v1/graphql\";\n\nconst chatPrueba = () => {\n\n    const {connect, account, connected, disconnect, signAndSubmitTransaction,\n        signTransaction, signMessage, \n        signMessageAndVerify} = useWallet();\n        \n  return (\n    <div>chatPrueba</div>\n  )\n}\n\nexport default chatPrueba"
        }
    ]
}