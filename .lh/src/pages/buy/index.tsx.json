{
    "sourceFile": "src/pages/buy/index.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 17,
            "patches": [
                {
                    "date": 1728930317609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1728930442239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,13 @@\n import React from 'react'\n import { Aptos} from \"@aptos-labs/ts-sdk\";\n+import { AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n \n+export const aptos= new Aptos(new AptosConfig({network: Network.TESTNET}));\n+\n const index = () => {\n-\n-const transaction = await aptos.transferCoinTransaction({sender: account.accountAddress, recipient: \"receiver address\", amount: 100000000})\n+    \n+const transaction = await Aptos.aptos.transferCoinTransaction({sender: account.accountAddress, recipient: \"receiver address\", amount: 100000000})\n   return (\n     <div></div>\n   )\n }\n"
                },
                {
                    "date": 1728931658859,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,17 @@\n \n export const aptos= new Aptos(new AptosConfig({network: Network.TESTNET}));\n \n const index = () => {\n+\n+    const saldoAlejandro = await aptos.getAccountResource({\n+        accountAddress: Alejandro.accountAddress,\n+        resourceType: COIN_STORE,\n+      });\n+      \n+      console.log(`El saldo de alejandro es: ${saldoAlejandro.coin.value}`);\n+    }\n     \n-const transaction = await Aptos.aptos.transferCoinTransaction({sender: account.accountAddress, recipient: \"receiver address\", amount: 100000000})\n   return (\n     <div></div>\n   )\n }\n"
                },
                {
                    "date": 1728931986979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,25 @@\n import React from 'react'\n-import { Aptos} from \"@aptos-labs/ts-sdk\";\n+import { Account, Aptos} from \"@aptos-labs/ts-sdk\";\n import { AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n+import CONTRACT from \"@/utils/data\";\n \n export const aptos= new Aptos(new AptosConfig({network: Network.TESTNET}));\n+//Crear la direccion de los recursos, mediante contrato inteligente, en esta direccion estan los recursos de aptos la moneda\n+const APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\n+//Donde se almacenan los recursos de la moneda\n+const COIN_STORE = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n \n const index = () => {\n-\n+//consultar el saldo de la cuenta\n+const getAccountResource = async (accountAddress: string, resourceType: string) => {\n     const saldoAlejandro = await aptos.getAccountResource({\n-        accountAddress: Alejandro.accountAddress,\n+        accountAddress: accountAddress,\n         resourceType: COIN_STORE,\n       });\n       \n       console.log(`El saldo de alejandro es: ${saldoAlejandro.coin.value}`);\n-    }\n+}\n     \n   return (\n     <div></div>\n   )\n"
                },
                {
                    "date": 1728932038836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,11 @@\n       console.log(`El saldo de alejandro es: ${saldoAlejandro.coin.value}`);\n }\n     \n   return (\n-    <div></div>\n+    <div>\n+        <button onClick={() => getAccountResource('accountAddress', 'resourceType')}>Consultar saldo</button>\n+    </div>\n   )\n }\n \n export default index\n\\ No newline at end of file\n"
                },
                {
                    "date": 1728932206795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,14 +7,15 @@\n //Crear la direccion de los recursos, mediante contrato inteligente, en esta direccion estan los recursos de aptos la moneda\n const APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\n //Donde se almacenan los recursos de la moneda\n const COIN_STORE = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n+const ADDRESS = \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\";\n \n const index = () => {\n //consultar el saldo de la cuenta\n const getAccountResource = async (accountAddress: string, resourceType: string) => {\n     const saldoAlejandro = await aptos.getAccountResource({\n-        accountAddress: accountAddress,\n+        accountAddress: ADDRESS,\n         resourceType: COIN_STORE,\n       });\n       \n       console.log(`El saldo de alejandro es: ${saldoAlejandro.coin.value}`);\n"
                },
                {
                    "date": 1728932332429,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n const ADDRESS = \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\";\n \n const index = () => {\n //consultar el saldo de la cuenta\n-const getAccountResource = async (accountAddress: string, resourceType: string) => {\n+const getAccountResource = async (ADDRESS: string, resourceType: string) => {\n     const saldoAlejandro = await aptos.getAccountResource({\n         accountAddress: ADDRESS,\n         resourceType: COIN_STORE,\n       });\n"
                },
                {
                    "date": 1728932792700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n const ADDRESS = \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\";\n \n const index = () => {\n //consultar el saldo de la cuenta\n-const getAccountResource = async (ADDRESS: string, resourceType: string) => {\n+const getAccountResource = async (accountAddress: string, resourceType: string) => {\n     const saldoAlejandro = await aptos.getAccountResource({\n         accountAddress: ADDRESS,\n         resourceType: COIN_STORE,\n       });\n"
                },
                {
                    "date": 1728932945850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n const ADDRESS = \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\";\n \n const index = () => {\n //consultar el saldo de la cuenta\n-const getAccountResource = async (accountAddress: string, resourceType: string) => {\n+const getAccountResource = async () => {\n     const saldoAlejandro = await aptos.getAccountResource({\n         accountAddress: ADDRESS,\n         resourceType: COIN_STORE,\n       });\n"
                },
                {
                    "date": 1728933093027,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n }\n     \n   return (\n     <div>\n-        <button onClick={() => getAccountResource('accountAddress', 'resourceType')}>Consultar saldo</button>\n+        <button onClick={() => getAccountResource()}>Consultar saldo</button>\n     </div>\n   )\n }\n \n"
                },
                {
                    "date": 1728933215545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,18 +8,20 @@\n const APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\n //Donde se almacenan los recursos de la moneda\n const COIN_STORE = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n const ADDRESS = \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\";\n+const ADRESS2 = \"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\"\n \n const index = () => {\n //consultar el saldo de la cuenta\n const getAccountResource = async () => {\n     const saldoAlejandro = await aptos.getAccountResource({\n         accountAddress: ADDRESS,\n+        accountAddress: ADDRESS2,\n         resourceType: COIN_STORE,\n       });\n       \n-      console.log(`El saldo de alejandro es: ${saldoAlejandro.coin.value}`);\n+      console.log(`El saldo de mi cuenta es: ${saldoAlejandro.coin.value}`);\n }\n     \n   return (\n     <div>\n"
                },
                {
                    "date": 1728933290377,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,8 @@\n //consultar el saldo de la cuenta\n const getAccountResource = async () => {\n     const saldoAlejandro = await aptos.getAccountResource({\n         accountAddress: ADDRESS,\n-        accountAddress: ADDRESS2,\n         resourceType: COIN_STORE,\n       });\n       \n       console.log(`El saldo de mi cuenta es: ${saldoAlejandro.coin.value}`);\n"
                },
                {
                    "date": 1728933403103,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,10 @@\n         resourceType: COIN_STORE,\n       });\n       \n       console.log(`El saldo de mi cuenta es: ${saldoAlejandro.coin.value}`);\n+      \n+\n }\n     \n   return (\n     <div>\n"
                },
                {
                    "date": 1728933776520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,58 @@\n-import React from 'react'\n-import { Account, Aptos} from \"@aptos-labs/ts-sdk\";\n+import React from \"react\";\n+import { Account, Aptos } from \"@aptos-labs/ts-sdk\";\n import { AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n import CONTRACT from \"@/utils/data\";\n \n-export const aptos= new Aptos(new AptosConfig({network: Network.TESTNET}));\n+export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n //Crear la direccion de los recursos, mediante contrato inteligente, en esta direccion estan los recursos de aptos la moneda\n const APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\n //Donde se almacenan los recursos de la moneda\n const COIN_STORE = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n-const ADDRESS = \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\";\n-const ADRESS2 = \"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\"\n+const ADDRESS =\n+  \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\";\n+const ADRESS2 =\n+  \"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\";\n \n const index = () => {\n-//consultar el saldo de la cuenta\n-const getAccountResource = async () => {\n+  //consultar el saldo de la cuenta\n+  const getAccountResource = async () => {\n     const saldoAlejandro = await aptos.getAccountResource({\n-        accountAddress: ADDRESS,\n-        resourceType: COIN_STORE,\n+      accountAddress: ADDRESS,\n+      resourceType: COIN_STORE,\n+    });\n+\n+    console.log(`El saldo de mi cuenta es: ${saldoAlejandro.coin.value}`);\n+\n\\ No newline at end of file\n+    if (saldoAlejandro.coin.value > 0) {\n+      //primero crear el objeto de transaccion, utilizando el objeto de transaccion de aptos\n+      const transaction = await aptos.transferCoinTransaction({\n+        //se le envia quien esta firmando la transaccion\n+        sender: ADDRESS,\n+        //se le envia el contrato al que se le va a enviar la transaccion\n+        data: {\n+          function: `${CONTRACT}::advanced_todo_list::create_todo_list`,\n+          functionArguments: [],\n+        },\n       });\n-      \n-      console.log(`El saldo de mi cuenta es: ${saldoAlejandro.coin.value}`);\n-      \n+      //firmar y enviar la transaccion\n+      const pending = await aptos.signAndSubmitTransaction({\n+        signer: cuenta,\n+        transaction,\n+      });\n \n-}\n-    \n+      //ejecutar la transaccion\n+      const executed = await aptos.waitForTransaction({\n+        transactionHash: pending.hash,\n+      });\n+      console.log(executed);\n+    }\n+  };\n+\n   return (\n     <div>\n-        <button onClick={() => getAccountResource()}>Consultar saldo</button>\n+      <button onClick={() => getAccountResource()}>Consultar saldo</button>\n     </div>\n-  )\n-}\n+  );\n+};\n \n-export default index\n+export default index;\n"
                },
                {
                    "date": 1728934059438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,16 +28,14 @@\n       const transaction = await aptos.transferCoinTransaction({\n         //se le envia quien esta firmando la transaccion\n         sender: ADDRESS,\n         //se le envia el contrato al que se le va a enviar la transaccion\n-        data: {\n-          function: `${CONTRACT}::advanced_todo_list::create_todo_list`,\n-          functionArguments: [],\n-        },\n+        recipient: ADRESS2,\n+        amount: 100,\n       });\n       //firmar y enviar la transaccion\n       const pending = await aptos.signAndSubmitTransaction({\n-        signer: cuenta,\n+        signer: ADDRESS,\n         transaction,\n       });\n \n       //ejecutar la transaccion\n@@ -54,5 +52,5 @@\n     </div>\n   );\n };\n \n-export default index;\n\\ No newline at end of file\n+export default index;\n"
                },
                {
                    "date": 1728934624557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,28 @@\n import React from \"react\";\n-import { Account, Aptos } from \"@aptos-labs/ts-sdk\";\n-import { AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n-import CONTRACT from \"@/utils/data\";\n+import { Aptos, AptosConfig, Network } from \"@aptos-labs/ts-sdk\";\n \n export const aptos = new Aptos(new AptosConfig({ network: Network.TESTNET }));\n //Crear la direccion de los recursos, mediante contrato inteligente, en esta direccion estan los recursos de aptos la moneda\n const APTOS_COIN = \"0x1::aptos_coin::AptosCoin\";\n //Donde se almacenan los recursos de la moneda\n const COIN_STORE = `0x1::coin::CoinStore<${APTOS_COIN}>`;\n-const ADDRESS =\n-  \"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\";\n-const ADRESS2 =\n-  \"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\";\n+const ADDRESS =\"0x4f98a31ac13e9bfa1d1eeb2dca6aaf6f1396a75041ba9308f95e60aa61c47969\";\n+const ADRESS2 =\"0x7ba23f3b116da3871b06133fda6f9ba93339b6714213f643a85d608beeaa9044\";\n \n const index = () => {\n   //consultar el saldo de la cuenta\n   const getAccountResource = async () => {\n+    try{\n     const saldoAlejandro = await aptos.getAccountResource({\n       accountAddress: ADDRESS,\n       resourceType: COIN_STORE,\n     });\n \n     console.log(`El saldo de mi cuenta es: ${saldoAlejandro.coin.value}`);\n+    const balance = parseInt(saldoAlejandro.data.coin.value, 10);\n \n-    if (saldoAlejandro.coin.value > 0) {\n+    if (balance > 0) {\n       //primero crear el objeto de transaccion, utilizando el objeto de transaccion de aptos\n       const transaction = await aptos.transferCoinTransaction({\n         //se le envia quien esta firmando la transaccion\n         sender: ADDRESS,\n"
                },
                {
                    "date": 1728935135150,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n         amount: 100,\n       });\n       //firmar y enviar la transaccion\n       const pending = await aptos.signAndSubmitTransaction({\n-        signer: \n+        signer:\n         transaction,\n       });\n \n       //ejecutar la transaccion\n"
                },
                {
                    "date": 1728935793510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n     <div>\n       <button onClick={() => getAccountResource()}>Consultar saldo</button>\n     </div>\n     <div>\n-        \n+        button  \n     </div>\n     \n   );\n };\n"
                }
            ],
            "date": 1728930317609,
            "name": "Commit-0",
            "content": "import React from 'react'\nimport { Aptos} from \"@aptos-labs/ts-sdk\";\n\nconst index = () => {\n\nconst transaction = await aptos.transferCoinTransaction({sender: account.accountAddress, recipient: \"receiver address\", amount: 100000000})\n  return (\n    <div></div>\n  )\n}\n\nexport default index"
        }
    ]
}